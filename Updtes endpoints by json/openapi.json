{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v11.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AssetWorks M5 API",
    "description": "AssetWorks API for M5",
    "version": "25.1"
  },
  "paths": {
    "/api/v1/accidents": {
      "get": {
        "tags": [
          "Accidents"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Accidents_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccident"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccident"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accidents"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Accidents_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAccident"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAccident"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/accidents/search/{search}": {
      "get": {
        "tags": [
          "Accidents"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Accidents_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccident"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccident"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accidents/searchexact/{search}": {
      "get": {
        "tags": [
          "Accidents"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Accidents_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccident"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccident"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accidents/{id}": {
      "get": {
        "tags": [
          "Accidents"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Accidents_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccident"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccident"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accountPartIssues": {
      "get": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AccountPartIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AccountPartIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AccountPartIssues_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accountPartIssues/search/{search}": {
      "get": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AccountPartIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accountPartIssues/searchexact/{search}": {
      "get": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AccountPartIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accountPartIssues/{id}": {
      "get": {
        "tags": [
          "AccountPartIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AccountPartIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccountPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccountPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/bulk": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAccount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Accounts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccount"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Accounts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAccount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Accounts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/search/{search}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Accounts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/searchexact/{search}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Accounts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Accounts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAccount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointmentRequests": {
      "get": {
        "tags": [
          "AppointmentRequests"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AppointmentRequests_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAppointmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAppointmentRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppointmentRequests"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AppointmentRequests_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAppointmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAppointmentRequest"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/appointmentRequests/search/{search}": {
      "get": {
        "tags": [
          "AppointmentRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AppointmentRequests_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAppointmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAppointmentRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointmentRequests/searchexact/{search}": {
      "get": {
        "tags": [
          "AppointmentRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AppointmentRequests_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAppointmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAppointmentRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointmentRequests/{id}": {
      "get": {
        "tags": [
          "AppointmentRequests"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AppointmentRequests_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAppointmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAppointmentRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetAttributes/bulk": {
      "post": {
        "tags": [
          "AssetAttributes"
        ],
        "operationId": "AssetAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetAttributes"
        ],
        "operationId": "AssetAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetAttributes": {
      "get": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AssetAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetAttributes/search/{search}": {
      "get": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetAttributes/{id}": {
      "get": {
        "tags": [
          "AssetAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetCategories": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetCategories_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCategory"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetCategories_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetCategory"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetCategories/search/{search}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetCategories_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetCategories/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetCategories_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetCategories/{id}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetCategories_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetChangeLogs": {
      "get": {
        "tags": [
          "AssetChangeLogs"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetChangeLogs_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetChangeLog"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetChangeLogs"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetChangeLogs_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetChangeLog"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetChangeLogs/search/{search}": {
      "get": {
        "tags": [
          "AssetChangeLogs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetChangeLogs_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetChangeLogs/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetChangeLogs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetChangeLogs_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetChangeLogs/{id}": {
      "get": {
        "tags": [
          "AssetChangeLogs"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetChangeLogs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetClasses": {
      "get": {
        "tags": [
          "AssetClasses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetClasses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetClass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetClasses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetClasses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetClass"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetClasses/search/{search}": {
      "get": {
        "tags": [
          "AssetClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetClasses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetClasses/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetClasses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetClasses/{id}": {
      "get": {
        "tags": [
          "AssetClasses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetClasses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetComponentWarranties": {
      "get": {
        "tags": [
          "AssetComponentWarranties"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetComponentWarranties_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetComponentWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetComponentWarranty"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetComponentWarranties"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetComponentWarranties_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetComponentWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetComponentWarranty"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetComponentWarranties/search/{search}": {
      "get": {
        "tags": [
          "AssetComponentWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetComponentWarranties_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetComponentWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetComponentWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetComponentWarranties/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetComponentWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetComponentWarranties_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetComponentWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetComponentWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetComponentWarranties/{id}": {
      "get": {
        "tags": [
          "AssetComponentWarranties"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetComponentWarranties_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetComponentWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetComponentWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AssetCreditCards/bulk": {
      "post": {
        "tags": [
          "AssetCreditCard"
        ],
        "operationId": "AssetCreditCard_BulkPost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetCreditCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetCreditCard"
        ],
        "operationId": "AssetCreditCard_BulkPut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AssetCreditCards": {
      "get": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetCreditCard_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AssetCreditCard_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetCreditCard_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AssetCreditCards/search/{search}": {
      "get": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetCreditCard_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AssetCreditCards/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetCreditCard_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AssetCreditCards/{id}": {
      "get": {
        "tags": [
          "AssetCreditCard"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetCreditCard_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetHistoryByMonths": {
      "get": {
        "tags": [
          "AssetHistoryByMonths"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetHistoryByMonths_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetHistoryByMonth"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetHistoryByMonth"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetHistoryByMonths"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetHistoryByMonths_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetHistoryByMonth"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetHistoryByMonth"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetHistoryByMonths/search/{search}": {
      "get": {
        "tags": [
          "AssetHistoryByMonths"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetHistoryByMonths_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetHistoryByMonth"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetHistoryByMonth"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetHistoryByMonths/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetHistoryByMonths"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetHistoryByMonths_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetHistoryByMonth"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetHistoryByMonth"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetHistoryByMonths/{id}": {
      "get": {
        "tags": [
          "AssetHistoryByMonths"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetHistoryByMonths_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetHistoryByMonth"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetHistoryByMonth"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetMakes": {
      "get": {
        "tags": [
          "AssetMakes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetMakes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetMake"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetMake"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetMakes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetMakes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetMake"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetMake"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetMakes/search/{search}": {
      "get": {
        "tags": [
          "AssetMakes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetMakes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetMake"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetMake"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetMakes/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetMakes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetMakes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetMake"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetMake"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetMakes/{id}": {
      "get": {
        "tags": [
          "AssetMakes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetMakes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetMake"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetMake"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetManufacturers": {
      "get": {
        "tags": [
          "AssetManufacturers"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetManufacturers_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetManufacturer"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetManufacturers"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetManufacturers_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetManufacturer"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetManufacturers/search/{search}": {
      "get": {
        "tags": [
          "AssetManufacturers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetManufacturers_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetManufacturers/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetManufacturers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetManufacturers_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetManufacturers/{id}": {
      "get": {
        "tags": [
          "AssetManufacturers"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetManufacturers_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetModels": {
      "get": {
        "tags": [
          "AssetModels"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetModels_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetModels"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetModels_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetModel"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetModels/search/{search}": {
      "get": {
        "tags": [
          "AssetModels"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetModels_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetModels/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetModels"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetModels_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetModels/{id}": {
      "get": {
        "tags": [
          "AssetModels"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetModels_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues/bulk": {
      "post": {
        "tags": [
          "AssetPartIssues"
        ],
        "operationId": "AssetPartIssues_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues/bulk/returnresults": {
      "post": {
        "tags": [
          "AssetPartIssues"
        ],
        "operationId": "AssetPartIssues_CollectionWithResults",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues": {
      "get": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetPartIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AssetPartIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetPartIssues_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues/search/{search}": {
      "get": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPartIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPartIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartissues/{id}": {
      "get": {
        "tags": [
          "AssetPartIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetPartIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartsused/fortechspec/{techSpecId}": {
      "get": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "Get parts used by assets with a specific FA equipment type or M5 tech spec",
        "operationId": "AssetPartsUsed_ForTechSpec",
        "parameters": [
          {
            "name": "techSpecId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "AssetPartUsed",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartsused": {
      "get": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetPartsUsed_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartUsed"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetPartsUsed_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPartUsed"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetpartsused/search/{search}": {
      "get": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPartsUsed_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartsused/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPartsUsed_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpartsused/{id}": {
      "get": {
        "tags": [
          "AssetPartsUsed"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetPartsUsed_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmInspections": {
      "get": {
        "tags": [
          "AssetPmInspections"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetPmInspections_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmInspection"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmInspection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetPmInspections"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetPmInspections_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPmInspection"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPmInspection"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetPmInspections/search/{search}": {
      "get": {
        "tags": [
          "AssetPmInspections"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPmInspections_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmInspection"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmInspection"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmInspections/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetPmInspections"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPmInspections_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmInspection"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmInspection"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmInspections/{id}": {
      "get": {
        "tags": [
          "AssetPmInspections"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetPmInspections_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmInspection"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmInspection"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmServices": {
      "get": {
        "tags": [
          "AssetPmServices"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetPmServices_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmService"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetPmServices"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetPmServices_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPmService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPmService"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetPmServices/search/{search}": {
      "get": {
        "tags": [
          "AssetPmServices"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPmServices_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmServices/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetPmServices"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPmServices_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetPmServices/{id}": {
      "get": {
        "tags": [
          "AssetPmServices"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetPmServices_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPmService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPmService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions": {
      "get": {
        "tags": [
          "AssetPosition"
        ],
        "operationId": "AssetPosition_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Save a single AssetPosition, given an AssetId, Latitude, Longitude, and EffectiveDateTime.\nIf EffectiveDateTime is not included, then it updates the lat and long as of the last known date.",
        "operationId": "AssetPosition_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetPosition_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions/assetid/{assetId}": {
      "get": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Get most recent position for an asset.",
        "operationId": "AssetPosition_GetByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions/bulk": {
      "post": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Save a collection of AssetPositions, given an AssetId, Latitude, Longitude, and EffectiveDateTime.\nIf EffectiveDateTime is not included, then it updates the lat and long as of the last known date.",
        "operationId": "AssetPosition_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions/search/{search}": {
      "get": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPosition_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetPosition_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetpositions/{id}": {
      "get": {
        "tags": [
          "AssetPosition"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetPosition_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues/bulk": {
      "post": {
        "tags": [
          "AssetProductIssues"
        ],
        "operationId": "AssetProductIssues_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetProductIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues": {
      "delete": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "AssetProductIssues_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetProductIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AssetProductIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetProductIssues_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues/{id}": {
      "delete": {
        "tags": [
          "AssetProductIssues"
        ],
        "operationId": "AssetProductIssues_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetProductIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues/search/{search}": {
      "get": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetProductIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetProductIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProductIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetproductissues/lov/{search}": {
      "get": {
        "tags": [
          "AssetProductIssues"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "AssetProductIssues_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProductIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetProducts/bulk": {
      "post": {
        "tags": [
          "AssetProducts"
        ],
        "operationId": "AssetProducts_PostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetProducts"
        ],
        "operationId": "AssetProducts_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAssetProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetProducts": {
      "get": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetProducts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "AssetProducts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "AssetProducts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetProducts/search/{search}": {
      "get": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetProducts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetProducts/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetProducts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetProducts/{id}": {
      "get": {
        "tags": [
          "AssetProducts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetProducts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetRelationships": {
      "get": {
        "tags": [
          "AssetRelationships"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetRelationships_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetRelationship"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetRelationship"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetRelationships"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetRelationships_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetRelationship"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetRelationship"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetRelationships/search/{search}": {
      "get": {
        "tags": [
          "AssetRelationships"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetRelationships_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetRelationship"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetRelationship"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetRelationships/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetRelationships"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetRelationships_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetRelationship"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetRelationship"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetRelationships/{id}": {
      "get": {
        "tags": [
          "AssetRelationships"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetRelationships_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetRelationship"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetRelationship"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetScheduledServices": {
      "get": {
        "tags": [
          "AssetScheduledServices"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetScheduledServices_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetScheduledService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetScheduledService"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetScheduledServices"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetScheduledServices_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetScheduledService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetScheduledService"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetScheduledServices/search/{search}": {
      "get": {
        "tags": [
          "AssetScheduledServices"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetScheduledServices_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetScheduledService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetScheduledService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetScheduledServices/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetScheduledServices"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetScheduledServices_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetScheduledService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetScheduledService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetScheduledServices/{id}": {
      "get": {
        "tags": [
          "AssetScheduledServices"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetScheduledServices_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetScheduledService"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetScheduledService"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Assets_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAsset"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Assets_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}/updatemeters": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update meters using a simple JSON that has Meter1Reading and Meter2Reading.",
        "operationId": "Assets_UpdateMeters",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}/pmservicesdue": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Calculate due dates for FA PMs and inspections, and return results",
        "description": "Provide employee ID (employee number for M5) in url.",
        "operationId": "Assets_PMServicesDue",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetServiceDue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}/testtypes": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Stop working on current task",
        "description": "Provide employee ID (employee number for M5) in url.",
        "operationId": "Assets_TestTypes",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{assetId}/partreserves": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get part reserves for an asset (M5 only)",
        "description": "Get a list of AssetPartIssue ordered, received and not issued for an asset",
        "operationId": "Assets_GetPartReserves",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "IAssetPartIssue[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/dashboardsearch/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "This should be removed before distribution.",
        "operationId": "Assets_DashboardSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/dashboardsearch/{search}/forlocation/{locationId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "This should be removed before distribution.",
        "operationId": "Assets_DashboardSearchForLocation",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/dashboardsearchexact/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "This should be removed before distribution.",
        "operationId": "Assets_DashboardSearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/withorders/search/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get orders for this asset",
        "operationId": "Assets_OrderSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "PurchaseOrderDestination[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/withorders/searchexact/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_OrderSearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/bulk": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Save assets",
        "operationId": "Assets_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/search/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Assets_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/searchexact/{search}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Assets_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Assets_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAsset"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAsset"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetServicesDue": {
      "get": {
        "tags": [
          "AssetServicesDue"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetServicesDue_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetServiceDue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetServicesDue"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetServicesDue_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetServiceDue"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetServicesDue/search/{search}": {
      "get": {
        "tags": [
          "AssetServicesDue"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetServicesDue_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetServiceDue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetServicesDue/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetServicesDue"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetServicesDue_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetServiceDue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetServicesDue/{id}": {
      "get": {
        "tags": [
          "AssetServicesDue"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetServicesDue_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetServiceDue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetServiceDue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetTypes": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetTypes/search/{search}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetTypes/{id}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarranties": {
      "get": {
        "tags": [
          "AssetWarranties"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetWarranties_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarranty"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetWarranties"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetWarranties_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetWarranty"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetWarranties/search/{search}": {
      "get": {
        "tags": [
          "AssetWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetWarranties_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarranties/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetWarranties_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarranties/{id}": {
      "get": {
        "tags": [
          "AssetWarranties"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetWarranties_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarrantyParts": {
      "get": {
        "tags": [
          "AssetWarrantyParts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "AssetWarrantyParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarrantyPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarrantyPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AssetWarrantyParts"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "AssetWarrantyParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAssetWarrantyPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAssetWarrantyPart"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/assetWarrantyParts/search/{search}": {
      "get": {
        "tags": [
          "AssetWarrantyParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetWarrantyParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarrantyPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarrantyPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarrantyParts/searchexact/{search}": {
      "get": {
        "tags": [
          "AssetWarrantyParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "AssetWarrantyParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarrantyPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarrantyPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assetWarrantyParts/{id}": {
      "get": {
        "tags": [
          "AssetWarrantyParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "AssetWarrantyParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAssetWarrantyPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAssetWarrantyPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/bulk": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "operationId": "Attachments_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAttachment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attachments"
        ],
        "operationId": "Attachments_PostBulk",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/content/{filepath}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "operationId": "Attachments_GetContent",
        "parameters": [
          {
            "name": "filepath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments": {
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "Attachments_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAttachment"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Attachments_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAttachment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Attachments_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAttachment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attachments"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Attachments_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/{id}": {
      "delete": {
        "tags": [
          "Attachments"
        ],
        "operationId": "Attachments_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAttachment"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Attachments_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/search/{search}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Attachments_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/searchexact/{search}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Attachments_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attachments/lov/{search}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "Attachments_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAttachment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availabilities": {
      "get": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Availabilities_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAvailability"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Availabilities_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAvailability"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Availabilities_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIAvailability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availabilities/search/{search}": {
      "get": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Availabilities_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAvailability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availabilities/searchexact/{search}": {
      "get": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Availabilities_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAvailability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/availabilities/{id}": {
      "get": {
        "tags": [
          "Availabilities"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Availabilities_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIAvailability"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIAvailability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billings": {
      "get": {
        "tags": [
          "Billings"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Billings_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIBilling"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIBilling"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billings"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Billings_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIBilling"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIBilling"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/billings/{id}": {
      "get": {
        "tags": [
          "Billings"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Billings_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIBilling"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIBilling"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/changelogs/FAcontrol/{screen}/{window}/{control}/{keyvalue}": {
      "get": {
        "tags": [
          "ChangeLogs"
        ],
        "summary": "For a given screen window and control, return change logs that contain the key value. (FA only)",
        "operationId": "ChangeLogs_GetForSWC",
        "parameters": [
          {
            "name": "screen",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "window",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "control",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "keyvalue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/changelogs/DBcolumn/{tablename}/{columnname}/{keyvalue}": {
      "get": {
        "tags": [
          "ChangeLogs"
        ],
        "summary": "For a given table and column, return change logs that contain the key value.",
        "operationId": "ChangeLogs_GetForTCK",
        "parameters": [
          {
            "name": "tablename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "columnname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "keyvalue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/changelogs": {
      "get": {
        "tags": [
          "ChangeLogs"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ChangeLogs_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIChangeLog"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ChangeLogs"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ChangeLogs_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIChangeLog"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/changelogs/{id}": {
      "get": {
        "tags": [
          "ChangeLogs"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ChangeLogs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIChangeLog"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIChangeLog"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conditionRatings": {
      "get": {
        "tags": [
          "ConditionRatings"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ConditionRatings_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIConditionRating"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIConditionRating"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConditionRatings"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ConditionRatings_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIConditionRating"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIConditionRating"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/conditionRatings/search/{search}": {
      "get": {
        "tags": [
          "ConditionRatings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ConditionRatings_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIConditionRating"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIConditionRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conditionRatings/searchexact/{search}": {
      "get": {
        "tags": [
          "ConditionRatings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ConditionRatings_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIConditionRating"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIConditionRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conditionRatings/{id}": {
      "get": {
        "tags": [
          "ConditionRatings"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ConditionRatings_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIConditionRating"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIConditionRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coreclaims": {
      "get": {
        "tags": [
          "CoreClaims"
        ],
        "summary": "Retrieves all items.",
        "operationId": "CoreClaims_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreClaim"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CoreClaims"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "CoreClaims_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfICoreClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfICoreClaim"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/coreclaims/search/{search}": {
      "get": {
        "tags": [
          "CoreClaims"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CoreClaims_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coreclaims/searchexact/{search}": {
      "get": {
        "tags": [
          "CoreClaims"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CoreClaims_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coreclaims/{id}": {
      "get": {
        "tags": [
          "CoreClaims"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "CoreClaims_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coretrackings": {
      "get": {
        "tags": [
          "CoreTrackings"
        ],
        "summary": "Retrieves all items.",
        "operationId": "CoreTrackings_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreTracking"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreTracking"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CoreTrackings"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "CoreTrackings_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfICoreTracking"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfICoreTracking"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/coretrackings/search/{search}": {
      "get": {
        "tags": [
          "CoreTrackings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CoreTrackings_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreTracking"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreTracking"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coretrackings/searchexact/{search}": {
      "get": {
        "tags": [
          "CoreTrackings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CoreTrackings_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreTracking"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreTracking"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coretrackings/{id}": {
      "get": {
        "tags": [
          "CoreTrackings"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "CoreTrackings_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICoreTracking"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICoreTracking"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/currentJobStatuses": {
      "get": {
        "tags": [
          "CurrentJobStatuses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "CurrentJobStatuses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CurrentJobStatuses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "CurrentJobStatuses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfICurrentJobStatus"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/currentJobStatuses/search/{search}": {
      "get": {
        "tags": [
          "CurrentJobStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CurrentJobStatuses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/currentJobStatuses/searchexact/{search}": {
      "get": {
        "tags": [
          "CurrentJobStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "CurrentJobStatuses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/currentJobStatuses/{id}": {
      "get": {
        "tags": [
          "CurrentJobStatuses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "CurrentJobStatuses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentAttributes": {
      "get": {
        "tags": [
          "DepartmentAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "DepartmentAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepartmentAttributes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "DepartmentAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartmentAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartmentAttribute"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/departmentAttributes/search/{search}": {
      "get": {
        "tags": [
          "DepartmentAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "DepartmentAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentAttributes/{id}": {
      "get": {
        "tags": [
          "DepartmentAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "DepartmentAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentOrgLevels": {
      "get": {
        "tags": [
          "DepartmentOrgLevels"
        ],
        "summary": "Retrieves all items.",
        "operationId": "DepartmentOrgLevels_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentOrgLevel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentOrgLevel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepartmentOrgLevels"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "DepartmentOrgLevels_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartmentOrgLevel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartmentOrgLevel"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/departmentOrgLevels/search/{search}": {
      "get": {
        "tags": [
          "DepartmentOrgLevels"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentOrgLevels_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentOrgLevel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentOrgLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentOrgLevels/searchexact/{search}": {
      "get": {
        "tags": [
          "DepartmentOrgLevels"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentOrgLevels_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentOrgLevel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentOrgLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentOrgLevels/{id}": {
      "get": {
        "tags": [
          "DepartmentOrgLevels"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "DepartmentOrgLevels_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentOrgLevel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentOrgLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentPartIssues/bulk": {
      "post": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "operationId": "DepartmentPartIssues_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentPartIssues": {
      "get": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "DepartmentPartIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "DepartmentPartIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "DepartmentPartIssues_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentPartIssues/search/{search}": {
      "get": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentPartIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentPartIssues/searchexact/{search}": {
      "get": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentPartIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentPartIssues/{id}": {
      "get": {
        "tags": [
          "DepartmentPartIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "DepartmentPartIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentRequisitions": {
      "get": {
        "tags": [
          "DepartmentRequisitions"
        ],
        "summary": "Retrieves all items.",
        "operationId": "DepartmentRequisitions_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentRequisition"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DepartmentRequisitions"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "DepartmentRequisitions_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartmentRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartmentRequisition"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/departmentRequisitions/search/{search}": {
      "get": {
        "tags": [
          "DepartmentRequisitions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentRequisitions_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentRequisitions/searchexact/{search}": {
      "get": {
        "tags": [
          "DepartmentRequisitions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "DepartmentRequisitions_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departmentRequisitions/{id}": {
      "get": {
        "tags": [
          "DepartmentRequisitions"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "DepartmentRequisitions_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartmentRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartmentRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Departments_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Departments_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{departmentId}/hierarchy": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department hierarchy",
        "operationId": "Departments_GetHierarchy",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/bulk": {
      "post": {
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIDepartment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "operationId": "Departments_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/search/{search}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Departments_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/searchexact/{search}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Departments_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Departments_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeAttributes/bulk": {
      "post": {
        "tags": [
          "EmployeeAttributes"
        ],
        "operationId": "EmployeeAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeAttributes"
        ],
        "operationId": "EmployeeAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeAttributes": {
      "get": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "EmployeeAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "EmployeeAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "EmployeeAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeAttributes/search/{search}": {
      "get": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "EmployeeAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "EmployeeAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeAttributes/{id}": {
      "get": {
        "tags": [
          "EmployeeAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "EmployeeAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeClockIn": {
      "get": {
        "tags": [
          "EmployeeClockIn"
        ],
        "summary": "Retrieves all items.",
        "operationId": "EmployeeClockIn_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeClockIn"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "EmployeeClockIn_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/employeeClockIn/{id}": {
      "get": {
        "tags": [
          "EmployeeClockIn"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "EmployeeClockIn_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeProducts/bulk": {
      "post": {
        "tags": [
          "EmployeeProducts"
        ],
        "operationId": "EmployeeProducts_PostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIEmployeeProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeProducts"
        ],
        "operationId": "EmployeeProducts_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIEmployeeProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeProducts": {
      "get": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "EmployeeProducts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "EmployeeProducts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "EmployeeProducts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeProducts/search/{search}": {
      "get": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "EmployeeProducts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeProducts/searchexact/{search}": {
      "get": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "EmployeeProducts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employeeProducts/{id}": {
      "get": {
        "tags": [
          "EmployeeProducts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "EmployeeProducts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeProduct"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/currenttask": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee's current task",
        "operationId": "Employees_GetCurrentTask",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkOrderTask",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/taskassignments": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee's assignments",
        "operationId": "Employees_GetActiveWorkAssignments",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkAssignment[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/stoptask": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Stop working on current task",
        "operationId": "Employees_StopTask",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "CurrentJobStatus",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "CurrentJobStatus",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/starttask": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Start work on task",
        "operationId": "Employees_StartTask",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "CurrentJobStatus",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "CurrentJobStatus",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/renumberto/{newId}": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Renumber an Employee",
        "operationId": "Employees_Renumber",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "newId",
            "in": "path",
            "required": true,
            "description": "Id To renumber to",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Renumbered Employee",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/currentjobstatus": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee's current task or job status, whether direct or indirect",
        "operationId": "Employees_GetCurrentJobStatus",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "CurrentJobStatus",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{supervisorId}/subordinatestatus": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get current status for a supervisor's subordinates",
        "description": "Provide employee ID (a supervisor) in url. Returns collection of CurrentJobStatus for the subordinates, whether punched in or not.",
        "operationId": "Employees_GetSubordinateStatus",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICurrentJobStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "CurrentJobStatus[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICurrentJobStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{supervisorId}/unassignedtasks": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get tasks that aren't assigned for open work order's at supervisor's locations",
        "description": "Provide employee ID (a supervisor) in url. Returns collection of WorkAssignments with no EmployeeId at the supervisor's locations.",
        "operationId": "Employees_GetUnassignedTasks",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkAssignment[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/allworkorders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all the employee's work orders",
        "description": "Returns collection of work orders assigned to the employee plus those the employee has punched into.",
        "operationId": "Employees_GetAllWorkOrders",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkOrder[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/maintenancelocations": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all the employee's supported locations",
        "operationId": "Employees_GetMaintenanceLocations",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Location[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/stocklocations": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all the employee's supported locations",
        "operationId": "Employees_GetStockLocations",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Location[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/mediafile": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee image file for M5 (deprecated)",
        "description": "Provide employee ID (employee number for M5) in url. Returns empty message.",
        "operationId": "Employees_GetEmployeeMediaFile",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/clockins": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee's clockin records.",
        "operationId": "Employees_GetClockIns",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "EmployeeClockIn[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/clockin": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Clock in the employee if not already clocked in.",
        "operationId": "Employees_ClockIn",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "EmployeeClockIn[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{employeeId}/clockout": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Clock out the employee if clocked in.",
        "operationId": "Employees_ClockOut",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployeeClockIn"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "EmployeeClockIn[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployeeClockIn"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{supervisorId}/completedworkorders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all finished/completed work orders for the supervisor's locations",
        "operationId": "Employees_GetCompletedWorkOrders",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkOrder[] including expansion of Tasks[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{supervisorId}/openworkorders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all open work orders for the supervisor's locations",
        "operationId": "Employees_GetOpenWorkOrders",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkOrder[] including expansion of Tasks[]; the tasks are populated only with assignment-related data",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{supervisorId}/activeservicerequests": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get all pending service (FA) or work (M5) requests for the supervisor's locations.",
        "operationId": "Employees_GetActiveServiceRequests",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees": {
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "Employees_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployee"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Employees_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployee"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Employees_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployee"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Employees_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "delete": {
        "tags": [
          "Employees"
        ],
        "operationId": "Employees_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEmployee"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Employees_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/search/{search}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Employees_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/searchexact/{search}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Employees_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/lov/{search}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "Employees_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/failureCodes": {
      "get": {
        "tags": [
          "FailureCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "FailureCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFailureCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFailureCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FailureCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "FailureCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFailureCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFailureCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/failureCodes/search/{search}": {
      "get": {
        "tags": [
          "FailureCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FailureCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFailureCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFailureCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/failureCodes/searchexact/{search}": {
      "get": {
        "tags": [
          "FailureCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FailureCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFailureCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFailureCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/failureCodes/{id}": {
      "get": {
        "tags": [
          "FailureCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "FailureCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFailureCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFailureCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults": {
      "get": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFault"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFault"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFault"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Faults"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "Faults_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/bulk": {
      "post": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIFault"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/{faultId}/addsr": {
      "post": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_AddServiceRequest",
        "parameters": [
          {
            "name": "faultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/{id}": {
      "delete": {
        "tags": [
          "Faults"
        ],
        "operationId": "Faults_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFault"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Faults"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Faults_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/search/{search}": {
      "get": {
        "tags": [
          "Faults"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Faults_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/searchexact/{search}": {
      "get": {
        "tags": [
          "Faults"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Faults_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFault"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faults/lov/{search}": {
      "get": {
        "tags": [
          "Faults"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "Faults_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFault"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fluidHoses": {
      "get": {
        "tags": [
          "FluidHoses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "FluidHoses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFluidHose"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFluidHose"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FluidHoses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "FluidHoses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFluidHose"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFluidHose"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/fluidHoses/search/{search}": {
      "get": {
        "tags": [
          "FluidHoses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FluidHoses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFluidHose"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFluidHose"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fluidHoses/searchexact/{search}": {
      "get": {
        "tags": [
          "FluidHoses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FluidHoses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFluidHose"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFluidHose"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fluidHoses/{id}": {
      "get": {
        "tags": [
          "FluidHoses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "FluidHoses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFluidHose"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFluidHose"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fuelCards/bulk": {
      "post": {
        "tags": [
          "FuelCards"
        ],
        "operationId": "FuelCards_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIFuelCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FuelCards"
        ],
        "operationId": "FuelCards_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIFuelCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fuelCards": {
      "get": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Retrieves all items.",
        "operationId": "FuelCards_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFuelCard"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "FuelCards_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFuelCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "FuelCards_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIFuelCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fuelCards/search/{search}": {
      "get": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FuelCards_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFuelCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fuelCards/searchexact/{search}": {
      "get": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "FuelCards_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFuelCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fuelCards/{id}": {
      "get": {
        "tags": [
          "FuelCards"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "FuelCards_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIFuelCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIFuelCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectcodes/forlocation/{locationId}": {
      "get": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "Get indirect codes valid for a specific location (M5 only; for FA returns all indirect codes)",
        "operationId": "IndirectCodes_GetIndirectCodesForLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "IndirectCode[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectcodes": {
      "get": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "IndirectCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "IndirectCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIIndirectCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/indirectcodes/search/{search}": {
      "get": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "IndirectCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectcodes/searchexact/{search}": {
      "get": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "IndirectCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectcodes/{id}": {
      "get": {
        "tags": [
          "IndirectCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "IndirectCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues/bulk": {
      "post": {
        "tags": [
          "IndirectPartIssues"
        ],
        "operationId": "IndirectPartIssues_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues/bulk/returnresults": {
      "post": {
        "tags": [
          "IndirectPartIssues"
        ],
        "operationId": "IndirectPartIssues_CollectionWithResults",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues": {
      "get": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "IndirectPartIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "IndirectPartIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "IndirectPartIssues_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues/search/{search}": {
      "get": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "IndirectPartIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues/searchexact/{search}": {
      "get": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "IndirectPartIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/indirectPartIssues/{id}": {
      "get": {
        "tags": [
          "IndirectPartIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "IndirectPartIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIIndirectPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIIndirectPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems/{inventoryCountId}/searchforbins/{search}": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Do a fuzzy search of part ID, part description, cross-references, plus an exact search of bin, within vx_inventorycountitem, and then union that with the same search in vx_locationpart where the location/part/bin\nisn't in the inventory count.  The goal is to give the user a list of all location/part/bin inside and outside the count.",
        "description": "Common use is to filter by location, like \"filter=LocationId eq 'WC'\"",
        "operationId": "InventoryCountItems_SearchForBins",
        "parameters": [
          {
            "name": "inventoryCountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Array of InventoryCountItem",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems/{inventoryCountId}/searchexactforbins/{search}": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Do an exact search of part ID, part description, cross-references, and bin, within vx_inventorycountitem, and then union that with the same search in vx_locationpart where the location/part/bin\nisn't in the inventory count.  The goal is to give the user a list of all location/part/bin inside and outside the count.",
        "description": "Common use is to filter by location, like \"filter=LocationId eq 'WC'\"",
        "operationId": "InventoryCountItems_SearchExactForBins",
        "parameters": [
          {
            "name": "inventoryCountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Array of InventoryCountItem",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Retrieves all items.",
        "operationId": "InventoryCountItems_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "InventoryCountItems_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "InventoryCountItems_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems/search/{search}": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InventoryCountItems_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems/searchexact/{search}": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InventoryCountItems_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycountitems/{id}": {
      "get": {
        "tags": [
          "InventoryCountItems"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "InventoryCountItems_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts/{inventoryCountId}/complete": {
      "put": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Complete an inventory count",
        "operationId": "InventoryCounts_Complete",
        "parameters": [
          {
            "name": "inventoryCountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "InventoryCount body must be present not contents are not used",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "InventoryCount",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts/{inventoryCountId}/variances": {
      "get": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Get the variances for a given inventoryCountId.",
        "operationId": "InventoryCounts_GetVariances",
        "parameters": [
          {
            "name": "inventoryCountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "InventoryCountItem[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts": {
      "get": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "InventoryCounts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "InventoryCounts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "InventoryCounts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts/search/{search}": {
      "get": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InventoryCounts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts/searchexact/{search}": {
      "get": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InventoryCounts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventorycounts/{id}": {
      "get": {
        "tags": [
          "InventoryCounts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "InventoryCounts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliationlines/bulk": {
      "put": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "operationId": "InvoiceReconciliationLine_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "operationId": "InvoiceReconciliationLine_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliationlines": {
      "get": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Retrieves all items.",
        "operationId": "InvoiceReconciliationLine_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "InvoiceReconciliationLine_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "InvoiceReconciliationLine_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliationlines/search/{search}": {
      "get": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InvoiceReconciliationLine_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliationlines/searchexact/{search}": {
      "get": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InvoiceReconciliationLine_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliationlines/{id}": {
      "get": {
        "tags": [
          "InvoiceReconciliationLine"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "InvoiceReconciliationLine_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliationLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliationLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/bulk": {
      "post": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Create new invoice reconciliations",
        "operationId": "InvoiceReconciliations_PostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Save invoice reconciliations",
        "operationId": "InvoiceReconciliations_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations": {
      "delete": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Delete an invoice reconciliation",
        "operationId": "InvoiceReconciliations_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Retrieves all items.",
        "operationId": "InvoiceReconciliations_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "InvoiceReconciliations_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "InvoiceReconciliations_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/reconcile": {
      "put": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Reconcile an invoice reconciliation",
        "operationId": "InvoiceReconciliations_Reconcile",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/unreconcile": {
      "put": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Un-Reconcile an invoice reconciliation",
        "operationId": "InvoiceReconciliations_UnReconcile",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/search/{search}": {
      "get": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InvoiceReconciliations_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/searchexact/{search}": {
      "get": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "InvoiceReconciliations_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoicereconciliations/{id}": {
      "get": {
        "tags": [
          "InvoiceReconciliations"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "InvoiceReconciliations_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIInvoiceReconciliation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIInvoiceReconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lifecyclestatuses": {
      "get": {
        "tags": [
          "LifeCycleStatuses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "LifeCycleStatuses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILifeCycleStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILifeCycleStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LifeCycleStatuses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "LifeCycleStatuses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILifeCycleStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILifeCycleStatus"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/lifecyclestatuses/search/{search}": {
      "get": {
        "tags": [
          "LifeCycleStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "LifeCycleStatuses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILifeCycleStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILifeCycleStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lifecyclestatuses/searchexact/{search}": {
      "get": {
        "tags": [
          "LifeCycleStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "LifeCycleStatuses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILifeCycleStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILifeCycleStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lifecyclestatuses/{id}": {
      "get": {
        "tags": [
          "LifeCycleStatuses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "LifeCycleStatuses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILifeCycleStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILifeCycleStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationAttributes/bulk": {
      "post": {
        "tags": [
          "LocationAttributes"
        ],
        "operationId": "LocationAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfILocationAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LocationAttributes"
        ],
        "operationId": "LocationAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfILocationAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationAttributes": {
      "get": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "LocationAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "LocationAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "LocationAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationAttributes/search/{search}": {
      "get": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "LocationAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "LocationAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationAttributes/{id}": {
      "get": {
        "tags": [
          "LocationAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "LocationAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/fortechspec/{techSpecId}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Get a list of all parts used for a tech spec regardless of task joined with whatever the filter is, probably a location.",
        "operationId": "LocationParts_GetTechSpecPartsUsed",
        "parameters": [
          {
            "name": "techSpecId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "ILocationPart",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/forstandardsclass/{standardsclass}/fortask/{task}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Return mfive.std_parts joined with whatever the $filter is, probably a locationId.\nResult is a list of standard parts at the location.",
        "operationId": "LocationParts_GetTechSpecStandardParts",
        "parameters": [
          {
            "name": "standardsClass",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "task",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "ILocationPart",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/fortechspec/{techSpecId}/fortask/{taskId}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_GetTechSpecTaskPartsUsed",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "techSpecId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/forasset/{assetId}/fortask/{taskId}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_GetAssetTaskPartsUsed",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/forstandardsclass/{standardsClassId}/fortask/{taskId}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Return mfive.std_parts together with information about the part at the location, but including\nparts not defined at the location.",
        "operationId": "LocationParts_GetStandardsClassTaskParts",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "standardsClassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/search/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/searchexact/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/onorder/search/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_OrderLineSearch",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/onorder/searchexact/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_OrderLineSearchExact",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/notonorder/search/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_NotOnOrderSearch",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{locationId}/notonorder/searchexact/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_NotOnOrderSearchExact",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/fortask/{taskId}/search/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Like a regular /search, but don't Show parts that are not legal for a given taskId. \nFor FA, the restriction is based on the product category.\nFor M5, it is based on parts.u_system and .val_sys_cd.",
        "operationId": "LocationParts_TaskSearch",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/fortask/{taskId}/searchexact/{search}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Like a regular /searchexact, but don't Show parts that are not legal for a given taskId. \nFor FA, the restriction is based on the product category.\nFor M5, it is based on parts.u_system and .val_sys_cd.",
        "operationId": "LocationParts_TaskSearchExact",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/bulk": {
      "post": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_CreatePostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfILocationPart"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LocationParts"
        ],
        "operationId": "LocationParts_CreatePutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "LocationParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "LocationParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocationPart"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "LocationParts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locationparts/{id}": {
      "get": {
        "tags": [
          "LocationParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "LocationParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocationPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocationPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Locations_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Locations_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Locations_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/search/{search}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Locations_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/searchexact/{search}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Locations_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/{id}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Locations_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfILocation"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfILocation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Notes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Notes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Notes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notes/search/{search}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Notes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notes/searchexact/{search}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Notes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notes/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Notes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalClasses": {
      "get": {
        "tags": [
          "OperationalClasses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "OperationalClasses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalClass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OperationalClasses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "OperationalClasses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperationalClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperationalClass"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/operationalClasses/search/{search}": {
      "get": {
        "tags": [
          "OperationalClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalClasses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalClasses/searchexact/{search}": {
      "get": {
        "tags": [
          "OperationalClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalClasses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalClasses/{id}": {
      "get": {
        "tags": [
          "OperationalClasses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "OperationalClasses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalEntities": {
      "get": {
        "tags": [
          "OperationalEntities"
        ],
        "summary": "Retrieves all items.",
        "operationId": "OperationalEntities_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalEntity"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalEntity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OperationalEntities"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "OperationalEntities_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperationalEntity"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperationalEntity"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/operationalEntities/search/{search}": {
      "get": {
        "tags": [
          "OperationalEntities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalEntities_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalEntity"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalEntities/searchexact/{search}": {
      "get": {
        "tags": [
          "OperationalEntities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalEntities_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalEntity"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalEntities/{id}": {
      "get": {
        "tags": [
          "OperationalEntities"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "OperationalEntities_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalEntity"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalEntity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalStatuses": {
      "get": {
        "tags": [
          "OperationalStatuses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "OperationalStatuses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OperationalStatuses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "OperationalStatuses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperationalStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperationalStatus"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/operationalStatuses/search/{search}": {
      "get": {
        "tags": [
          "OperationalStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalStatuses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalStatuses/searchexact/{search}": {
      "get": {
        "tags": [
          "OperationalStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperationalStatuses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operationalStatuses/{id}": {
      "get": {
        "tags": [
          "OperationalStatuses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "OperationalStatuses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperationalStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperationalStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operatordepartments": {
      "get": {
        "tags": [
          "Operator"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Operator_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorDepartment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Operator_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperatorDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperatorDepartment"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/operatordepartments/search/{search}": {
      "get": {
        "tags": [
          "Operator"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Operator_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operatordepartments/searchexact/{search}": {
      "get": {
        "tags": [
          "Operator"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Operator_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operatordepartments/{id}": {
      "get": {
        "tags": [
          "Operator"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Operator_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorDepartment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OperatorCreditCards/bulk": {
      "post": {
        "tags": [
          "OperatorCreditCard"
        ],
        "operationId": "OperatorCreditCard_BulkPost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperatorCreditCard"
        ],
        "operationId": "OperatorCreditCard_BulkPut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OperatorCreditCards": {
      "get": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Retrieves all items.",
        "operationId": "OperatorCreditCard_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "OperatorCreditCard_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "OperatorCreditCard_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OperatorCreditCards/search/{search}": {
      "get": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperatorCreditCard_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OperatorCreditCards/searchexact/{search}": {
      "get": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "OperatorCreditCard_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/OperatorCreditCards/{id}": {
      "get": {
        "tags": [
          "OperatorCreditCard"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "OperatorCreditCard_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperatorCreditCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperatorCreditCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operators/bulk": {
      "post": {
        "tags": [
          "Operators"
        ],
        "operationId": "Operators_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIOperator"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Operators"
        ],
        "operationId": "Operators_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIOperator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operators": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Operators_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperator"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Operators"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Operators_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperator"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Operators"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Operators_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIOperator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operators/search/{search}": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Operators_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operators/searchexact/{search}": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Operators_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/operators/{id}": {
      "get": {
        "tags": [
          "Operators"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Operators_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIOperator"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIOperator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parkingspots": {
      "get": {
        "tags": [
          "ParkingSpots"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ParkingSpots_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIParkingSpot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIParkingSpot"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParkingSpots"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ParkingSpots_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIParkingSpot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIParkingSpot"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/parkingspots/search/{search}": {
      "get": {
        "tags": [
          "ParkingSpots"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ParkingSpots_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIParkingSpot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIParkingSpot"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parkingspots/searchexact/{search}": {
      "get": {
        "tags": [
          "ParkingSpots"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ParkingSpots_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIParkingSpot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIParkingSpot"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parkingspots/{id}": {
      "get": {
        "tags": [
          "ParkingSpots"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ParkingSpots_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIParkingSpot"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIParkingSpot"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments": {
      "post": {
        "tags": [
          "PartAdjustments"
        ],
        "operationId": "PartAdjustments_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartAdjustments"
        ],
        "operationId": "PartAdjustments_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "PartAdjustments_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartAdjustments_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments/bulk": {
      "post": {
        "tags": [
          "PartAdjustments"
        ],
        "operationId": "PartAdjustments_Create2",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments/{id}": {
      "delete": {
        "tags": [
          "PartAdjustments"
        ],
        "operationId": "PartAdjustments_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartAdjustments_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments/search/{search}": {
      "get": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartAdjustments_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments/searchexact/{search}": {
      "get": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartAdjustments_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partadjustments/lov/{search}": {
      "get": {
        "tags": [
          "PartAdjustments"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "PartAdjustments_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartAdjustment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partBins": {
      "get": {
        "tags": [
          "PartBins"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartBins_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartBin"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartBin"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartBins"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartBins_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartBin"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartBin"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partBins/search/{search}": {
      "get": {
        "tags": [
          "PartBins"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartBins_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartBin"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartBin"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partBins/searchexact/{search}": {
      "get": {
        "tags": [
          "PartBins"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartBins_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartBin"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartBin"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partBins/{id}": {
      "get": {
        "tags": [
          "PartBins"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartBins_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartBin"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartBin"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partCycles": {
      "get": {
        "tags": [
          "PartCycles"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartCycles_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartCycle"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartCycle"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartCycles"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartCycles_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartCycle"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartCycle"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partCycles/search/{search}": {
      "get": {
        "tags": [
          "PartCycles"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartCycles_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartCycle"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartCycle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partCycles/searchexact/{search}": {
      "get": {
        "tags": [
          "PartCycles"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartCycles_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartCycle"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartCycle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partCycles/{id}": {
      "get": {
        "tags": [
          "PartCycles"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartCycles_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartCycle"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartCycle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partIssues": {
      "get": {
        "tags": [
          "PartIssues"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartIssues_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartIssue"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartIssues"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartIssues_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartIssue"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partIssues/search/{search}": {
      "get": {
        "tags": [
          "PartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartIssues_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partIssues/searchexact/{search}": {
      "get": {
        "tags": [
          "PartIssues"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartIssues_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partIssues/{id}": {
      "get": {
        "tags": [
          "PartIssues"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartIssues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartIssue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartIssue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partManufacturers": {
      "get": {
        "tags": [
          "PartManufacturers"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartManufacturers_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartManufacturer"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartManufacturers"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartManufacturers_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartManufacturer"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partManufacturers/search/{search}": {
      "get": {
        "tags": [
          "PartManufacturers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartManufacturers_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partManufacturers/searchexact/{search}": {
      "get": {
        "tags": [
          "PartManufacturers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartManufacturers_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partManufacturers/{id}": {
      "get": {
        "tags": [
          "PartManufacturers"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartManufacturers_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartManufacturer"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartManufacturer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/last/forlocation/{locationId}/forpartseq/{partSeq}": {
      "get": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Get the last receipt from each vendor at the location.",
        "operationId": "PartReceipts_LastReceiptForVendorAndPart",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "partSeq",
            "in": "path",
            "required": true,
            "description": "The Part.InternalId, not the part number a user sees",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "PartReceipt[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/bulk": {
      "post": {
        "tags": [
          "PartReceipts"
        ],
        "operationId": "PartReceipts_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/bulk/returnresults": {
      "post": {
        "tags": [
          "PartReceipts"
        ],
        "operationId": "PartReceipts_CollectionWithBody",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts": {
      "get": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartReceipts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PartReceipts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PartReceipts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/search/{search}": {
      "get": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartReceipts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/searchexact/{search}": {
      "get": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartReceipts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partreceipts/{id}": {
      "get": {
        "tags": [
          "PartReceipts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartReceipts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReceipt"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/bulk": {
      "post": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Create a bunch of part requests given a List of them.\nFor FA, these are lines under one header; for M5, these are separate requests.",
        "operationId": "PartRequests_Create",
        "requestBody": {
          "x-name": "saveBody",
          "description": "List of IPartRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/cancel": {
      "put": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_Cancel",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/approve": {
      "put": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Approve a part request.  (M5 only)",
        "operationId": "PartRequests_Approve",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "PartRequest",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/issue": {
      "put": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_Issue",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/makeready": {
      "put": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_MakeReady",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/{workOrderId}/{partRequestId}/notes": {
      "post": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_AddNote",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "partRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/bulk/returnresults": {
      "post": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_CollectionWithResultsPOST",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartRequests"
        ],
        "operationId": "PartRequests_CollectionWithResultsPUT",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests": {
      "get": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartRequests_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PartRequests_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PartRequests_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/search/{search}": {
      "get": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartRequests_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/searchexact/{search}": {
      "get": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartRequests_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partrequests/{id}": {
      "get": {
        "tags": [
          "PartRequests"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartRequests_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PartReturnRequests/{internalId}": {
      "put": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Update a part return request (FA only)",
        "operationId": "PartReturnRequests_PutPartReturnRequest",
        "parameters": [
          {
            "name": "internalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "PartReturnRequest",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PartReturnRequests": {
      "get": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartReturnRequests_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PartReturnRequests_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PartReturnRequests_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PartReturnRequests/search/{search}": {
      "get": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartReturnRequests_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PartReturnRequests/searchexact/{search}": {
      "get": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartReturnRequests_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PartReturnRequests/{id}": {
      "get": {
        "tags": [
          "PartReturnRequests"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartReturnRequests_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartReturnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartReturnRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/bulk": {
      "post": {
        "tags": [
          "Parts"
        ],
        "operationId": "Parts_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPart"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parts"
        ],
        "operationId": "Parts_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/{partId}": {
      "delete": {
        "tags": [
          "Parts"
        ],
        "operationId": "Parts_DeleteById",
        "parameters": [
          {
            "name": "partId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/{partId}/manufacturerId/{manufacturerId}": {
      "delete": {
        "tags": [
          "Parts"
        ],
        "operationId": "Parts_DeleteByIdAndManufacturer",
        "parameters": [
          {
            "name": "partId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts": {
      "get": {
        "tags": [
          "Parts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Parts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Parts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPart"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Parts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/search/{search}": {
      "get": {
        "tags": [
          "Parts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Parts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/searchexact/{search}": {
      "get": {
        "tags": [
          "Parts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Parts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parts/{id}": {
      "get": {
        "tags": [
          "Parts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Parts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partSerialNumbers": {
      "get": {
        "tags": [
          "PartSerialNumbers"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartSerialNumbers_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartSerialNumber"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartSerialNumber"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartSerialNumbers"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartSerialNumbers_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartSerialNumber"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartSerialNumber"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partSerialNumbers/search/{search}": {
      "get": {
        "tags": [
          "PartSerialNumbers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartSerialNumbers_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartSerialNumber"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartSerialNumber"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partSerialNumbers/searchexact/{search}": {
      "get": {
        "tags": [
          "PartSerialNumbers"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartSerialNumbers_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartSerialNumber"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartSerialNumber"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partSerialNumbers/{id}": {
      "get": {
        "tags": [
          "PartSerialNumbers"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartSerialNumbers_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartSerialNumber"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartSerialNumber"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partTransferLines": {
      "get": {
        "tags": [
          "PartTransferLines"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartTransferLines_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartTransferLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartTransferLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartTransferLines"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartTransferLines_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartTransferLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartTransferLine"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partTransferLines/search/{search}": {
      "get": {
        "tags": [
          "PartTransferLines"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartTransferLines_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartTransferLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartTransferLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partTransferLines/searchexact/{search}": {
      "get": {
        "tags": [
          "PartTransferLines"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartTransferLines_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartTransferLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartTransferLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partTransferLines/{id}": {
      "get": {
        "tags": [
          "PartTransferLines"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartTransferLines_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartTransferLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartTransferLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partWarranties": {
      "get": {
        "tags": [
          "PartWarranties"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartWarranties_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartWarranty"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartWarranties"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartWarranties_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartWarranty"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partWarranties/search/{search}": {
      "get": {
        "tags": [
          "PartWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartWarranties_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partWarranties/searchexact/{search}": {
      "get": {
        "tags": [
          "PartWarranties"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartWarranties_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partWarranties/{id}": {
      "get": {
        "tags": [
          "PartWarranties"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartWarranties_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartWarranty"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartWarranty"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partXrefs": {
      "get": {
        "tags": [
          "PartXrefs"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PartXrefs_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartXref"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartXref"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartXrefs"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PartXrefs_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPartXref"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPartXref"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/partXrefs/search/{search}": {
      "get": {
        "tags": [
          "PartXrefs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartXrefs_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartXref"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartXref"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partXrefs/searchexact/{search}": {
      "get": {
        "tags": [
          "PartXrefs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PartXrefs_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartXref"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartXref"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/partXrefs/{id}": {
      "get": {
        "tags": [
          "PartXrefs"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PartXrefs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPartXref"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPartXref"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pmChecklistItems": {
      "get": {
        "tags": [
          "PmChecklistItems"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PmChecklistItems_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPmChecklistItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPmChecklistItem"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PmChecklistItems"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PmChecklistItems_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPmChecklistItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPmChecklistItem"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/pmChecklistItems/search/{search}": {
      "get": {
        "tags": [
          "PmChecklistItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PmChecklistItems_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPmChecklistItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPmChecklistItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pmChecklistItems/searchexact/{search}": {
      "get": {
        "tags": [
          "PmChecklistItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PmChecklistItems_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPmChecklistItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPmChecklistItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pmChecklistItems/{id}": {
      "get": {
        "tags": [
          "PmChecklistItems"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PmChecklistItems_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPmChecklistItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPmChecklistItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/poolclasses": {
      "get": {
        "tags": [
          "PoolClasses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PoolClasses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPoolClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPoolClass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PoolClasses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PoolClasses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPoolClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPoolClass"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/poolclasses/search/{search}": {
      "get": {
        "tags": [
          "PoolClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PoolClasses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPoolClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPoolClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/poolclasses/searchexact/{search}": {
      "get": {
        "tags": [
          "PoolClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PoolClasses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPoolClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPoolClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/poolclasses/{id}": {
      "get": {
        "tags": [
          "PoolClasses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PoolClasses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPoolClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPoolClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/productCategories": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ProductCategories_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIProductCategory"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ProductCategories_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIProductCategory"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/productCategories/search/{search}": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ProductCategories_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIProductCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/productCategories/searchexact/{search}": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ProductCategories_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIProductCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/productCategories/{id}": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ProductCategories_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIProductCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIProductCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderAttributes/bulk": {
      "post": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "operationId": "PurchaseOrderAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "operationId": "PurchaseOrderAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderAttributes": {
      "get": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseOrderAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PurchaseOrderAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PurchaseOrderAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderAttributes/search/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderAttributes/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseOrderAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderDestinations": {
      "get": {
        "tags": [
          "PurchaseOrderDestinations"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseOrderDestinations_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrderDestinations"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "PurchaseOrderDestinations_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/purchaseOrderDestinations/search/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderDestinations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderDestinations_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderDestinations/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderDestinations"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderDestinations_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseOrderDestinations/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderDestinations"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseOrderDestinations_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderDestination"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderDestination"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines/bulk": {
      "put": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "operationId": "PurchaseOrderLine_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "operationId": "PurchaseOrderLine_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines/{purchaseOrderId}/{purchaseOrderLine}/cancel": {
      "put": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Cancel a purchase order line",
        "operationId": "PurchaseOrderLine_CancelLine",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "purchaseOrderLine",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines": {
      "get": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseOrderLine_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PurchaseOrderLine_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PurchaseOrderLine_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines/search/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderLine_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrderLine_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorderlines/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderLine"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseOrderLine_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrderLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrderLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders/bulk": {
      "put": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Create or update purchase orders in bulk",
        "operationId": "PurchaseOrders_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrder"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Create purchase orders in bulk",
        "operationId": "PurchaseOrders_PostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders/{purchaseOrderId}/cancel": {
      "put": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Cancel a purchase order",
        "operationId": "PurchaseOrders_Cancel",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders": {
      "get": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseOrders_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PurchaseOrders_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PurchaseOrders_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders/search/{search}": {
      "get": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrders_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseOrders_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaseorders/{id}": {
      "get": {
        "tags": [
          "PurchaseOrders"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseOrders_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines/bulk": {
      "put": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "operationId": "PurchaseRequisitionLine_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "operationId": "PurchaseRequisitionLine_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines": {
      "delete": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "PurchaseRequisitionLine_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseRequisitionLine_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PurchaseRequisitionLine_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PurchaseRequisitionLine_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines/{id}": {
      "delete": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "operationId": "PurchaseRequisitionLine_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseRequisitionLine_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines/search/{search}": {
      "get": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseRequisitionLine_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseRequisitionLine_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisitionLine"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitionlines/lov/{search}": {
      "get": {
        "tags": [
          "PurchaseRequisitionLine"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "PurchaseRequisitionLine_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisitionLine"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitions/bulk": {
      "put": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Save purchase requisitions",
        "operationId": "PurchaseRequisitions_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitions": {
      "get": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PurchaseRequisitions_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PurchaseRequisitions_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PurchaseRequisitions_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitions/search/{search}": {
      "get": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseRequisitions_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitions/searchexact/{search}": {
      "get": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PurchaseRequisitions_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchaserequisitions/{id}": {
      "get": {
        "tags": [
          "PurchaseRequisitions"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PurchaseRequisitions_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPurchaseRequisition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPurchaseRequisition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/{messageId}/read": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Mark a particular message ID has having been read.  (FA only)",
        "description": "messageId is msg_main.message_id",
        "operationId": "PushNotifications_MarkAsRead",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/MarkMessagesAsDelivered": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Mark all of the messages in the body as delivered.  (FA only)",
        "operationId": "PushNotifications_MarkAsDelivered",
        "requestBody": {
          "x-name": "saveBody",
          "description": "collection of PushMessage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIEnumerableOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "PushMessage[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIEnumerableOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/{userId}/unread": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Get unread messages for a given application user (not employee ID)",
        "operationId": "PushNotifications_GetUnreadMessagesForUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/all": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Send a message to all currently connected clients",
        "operationId": "PushNotifications_Post",
        "requestBody": {
          "x-name": "pushMessage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Empty if no error",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/users": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Send Message",
        "description": "Send a message to all currently connected clients",
        "operationId": "PushNotifications_Users",
        "requestBody": {
          "x-name": "pushMessage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/activeusers": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Send Message",
        "description": "Send a message to all currently connected clients",
        "operationId": "PushNotifications_GetActiveUsers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Retrieves all items.",
        "operationId": "PushNotifications_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPushMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "PushNotifications_Post2",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPushMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "PushNotifications_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/search/{search}": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PushNotifications_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/searchexact/{search}": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "PushNotifications_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages/{id}": {
      "get": {
        "tags": [
          "PushNotifications"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "PushNotifications_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPushMessage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPushMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repairReasons": {
      "get": {
        "tags": [
          "RepairReasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "RepairReasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIRepairReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIRepairReason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RepairReasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "RepairReasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIRepairReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIRepairReason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/repairReasons/search/{search}": {
      "get": {
        "tags": [
          "RepairReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "RepairReasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIRepairReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIRepairReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repairReasons/searchexact/{search}": {
      "get": {
        "tags": [
          "RepairReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "RepairReasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIRepairReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIRepairReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repairReasons/{id}": {
      "get": {
        "tags": [
          "RepairReasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "RepairReasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIRepairReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIRepairReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reportingSources": {
      "get": {
        "tags": [
          "ReportingSources"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ReportingSources_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReportingSource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReportingSource"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportingSources"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ReportingSources_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIReportingSource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIReportingSource"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/reportingSources/search/{search}": {
      "get": {
        "tags": [
          "ReportingSources"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ReportingSources_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReportingSource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReportingSource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reportingSources/searchexact/{search}": {
      "get": {
        "tags": [
          "ReportingSources"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ReportingSources_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReportingSource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReportingSource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reportingSources/{id}": {
      "get": {
        "tags": [
          "ReportingSources"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ReportingSources_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReportingSource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReportingSource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/returnReasons": {
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ReturnReasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReturnReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReturnReason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReturnReasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ReturnReasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIReturnReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIReturnReason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/returnReasons/search/{search}": {
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ReturnReasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReturnReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReturnReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/returnReasons/searchexact/{search}": {
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ReturnReasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReturnReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReturnReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/returnReasons/{id}": {
      "get": {
        "tags": [
          "ReturnReasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ReturnReasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIReturnReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIReturnReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Seasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISeason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISeason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Seasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Seasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISeason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISeason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/seasons/search/{search}": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Seasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISeason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISeason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons/searchexact/{search}": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Seasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISeason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISeason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons/{id}": {
      "get": {
        "tags": [
          "Seasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Seasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISeason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISeason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycountitems": {
      "get": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Retrieves all items.",
        "operationId": "SerialInventoryCountItems_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "SerialInventoryCountItems_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "SerialInventoryCountItems_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycountitems/search/{search}": {
      "get": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SerialInventoryCountItems_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycountitems/searchexact/{search}": {
      "get": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SerialInventoryCountItems_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycountitems/{id}": {
      "get": {
        "tags": [
          "SerialInventoryCountItems"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "SerialInventoryCountItems_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCountItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCountItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycounts": {
      "get": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "SerialInventoryCounts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "SerialInventoryCounts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "SerialInventoryCounts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycounts/search/{search}": {
      "get": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SerialInventoryCounts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycounts/searchexact/{search}": {
      "get": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SerialInventoryCounts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serialinventorycounts/{id}": {
      "get": {
        "tags": [
          "SerialInventoryCounts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "SerialInventoryCounts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISerialInventoryCount"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISerialInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceRequestParts": {
      "get": {
        "tags": [
          "ServiceRequestParts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ServiceRequestParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceRequestParts"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ServiceRequestParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceRequestPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceRequestPart"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/serviceRequestParts/search/{search}": {
      "get": {
        "tags": [
          "ServiceRequestParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequestParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceRequestParts/searchexact/{search}": {
      "get": {
        "tags": [
          "ServiceRequestParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequestParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceRequestParts/{id}": {
      "get": {
        "tags": [
          "ServiceRequestParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ServiceRequestParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests/{serviceRequestId}/notes": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Get work order notes",
        "description": "Get a list of notes for the work order",
        "operationId": "ServiceRequests_GetNotes",
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Create work order note",
        "operationId": "ServiceRequests_AddNote",
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests/bulk": {
      "post": {
        "tags": [
          "ServiceRequests"
        ],
        "operationId": "ServiceRequests_Collection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRequests"
        ],
        "operationId": "ServiceRequests_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ServiceRequests_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "ServiceRequests_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "ServiceRequests_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests/search/{search}": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequests_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests/searchexact/{search}": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequests_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequests/{id}": {
      "get": {
        "tags": [
          "ServiceRequests"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ServiceRequests_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequestTasks/bulk": {
      "post": {
        "tags": [
          "ServiceRequestTask"
        ],
        "operationId": "ServiceRequestTask_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequestTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRequestTask"
        ],
        "operationId": "ServiceRequestTask_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequestTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequestTasks": {
      "get": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ServiceRequestTask_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "ServiceRequestTask_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "ServiceRequestTask_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequestTasks/search/{search}": {
      "get": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequestTask_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequestTasks/searchexact/{search}": {
      "get": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceRequestTask_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ServiceRequestTasks/{id}": {
      "get": {
        "tags": [
          "ServiceRequestTask"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ServiceRequestTask_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceRequestTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceRequestTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceStatuses": {
      "get": {
        "tags": [
          "ServiceStatuses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "ServiceStatuses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceStatuses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "ServiceStatuses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIServiceStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIServiceStatus"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/serviceStatuses/search/{search}": {
      "get": {
        "tags": [
          "ServiceStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceStatuses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceStatuses/searchexact/{search}": {
      "get": {
        "tags": [
          "ServiceStatuses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "ServiceStatuses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serviceStatuses/{id}": {
      "get": {
        "tags": [
          "ServiceStatuses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "ServiceStatuses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIServiceStatus"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/forusergroup/{userGroupId}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get the settings that relate to a particular user group regardless of user.  For M5, this is the same as\ngetting the settings for a user who belongs to that group.",
        "operationId": "Settings_GetSettingsForUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "ISetting",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISetting"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Save a list of settings that are marked Changeable, including those for the specified UserGroupId.\nFor M5, this is the same as \"PUT /collection\" when the user's group (role) matches the parameter.",
        "operationId": "Settings_PutSettingForUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/bulk/forusergroup/{userGroupId}": {
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Save a list of settings that are marked Changeable, including those for the specified UserGroupId.\nFor M5, this is the same as \"PUT /collection\" when the user's group (role) matches the parameter.",
        "operationId": "Settings_PutSettingsForUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfISetting"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Save a list of settings that are marked Changeable, including those for the specified UserGroupId.\nFor M5, this is the same as \"PUT /collection\" when the user's group (role) matches the parameter.",
        "operationId": "Settings_DeleteSettingsForUserGroup",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/bulk": {
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Save a list of settings that are marked Changeable.  For M5, settings are saved to the current user's group (role).\nFor FA, USERGROUP settings aren't saved (as if !Changeable); the other ones are.",
        "operationId": "Settings_UpdateCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/getversion": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get the api version.",
        "operationId": "Settings_GetVersion",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Settings_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISetting"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Settings_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISetting"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Settings_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/search/{search}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Settings_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/searchexact/{search}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Settings_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Settings_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISetting"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISetting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/{shiftId}/today": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get definition for the shift that starts on the current day",
        "operationId": "Shifts_GetCurrentShift",
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Shift[] with one element",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/{shiftId}/next": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get shift that ends next",
        "operationId": "Shifts_GetNextShift",
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Shift[] with one element",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/{shiftId}/on/{dayString}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Get definition for the shift that starts on a specified day.",
        "description": "Provide shiftId and day (yyyy-mm-dd) in URL.",
        "operationId": "Shifts_GetShiftOn",
        "parameters": [
          {
            "name": "shiftId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "dayString",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Shift[] with one element",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Shifts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shifts"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Shifts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIShift"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/shifts/search/{search}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Shifts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/searchexact/{search}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Shifts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/{id}": {
      "get": {
        "tags": [
          "Shifts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Shifts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIShift"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIShift"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/skillTypes": {
      "get": {
        "tags": [
          "SkillTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "SkillTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISkillType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISkillType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "SkillTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISkillType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISkillType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/skillTypes/search/{search}": {
      "get": {
        "tags": [
          "SkillTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SkillTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISkillType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISkillType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/skillTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "SkillTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "SkillTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISkillType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISkillType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/skillTypes/{id}": {
      "get": {
        "tags": [
          "SkillTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "SkillTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISkillType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISkillType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standardJobs": {
      "get": {
        "tags": [
          "StandardJobs"
        ],
        "summary": "Retrieves all items.",
        "operationId": "StandardJobs_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIStandardJob"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StandardJobs"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "StandardJobs_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIStandardJob"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/standardJobs/search/{search}": {
      "get": {
        "tags": [
          "StandardJobs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "StandardJobs_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIStandardJob"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standardJobs/searchexact/{search}": {
      "get": {
        "tags": [
          "StandardJobs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "StandardJobs_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIStandardJob"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standardJobs/{id}": {
      "get": {
        "tags": [
          "StandardJobs"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "StandardJobs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIStandardJob"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/symptoms/forasset/{assetid}": {
      "get": {
        "tags": [
          "Symptoms"
        ],
        "operationId": "Symptoms_GetForAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISymptom"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/symptoms": {
      "get": {
        "tags": [
          "Symptoms"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Symptoms_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISymptom"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Symptoms"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "Symptoms_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfISymptom"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/symptoms/search/{search}": {
      "get": {
        "tags": [
          "Symptoms"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Symptoms_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISymptom"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/symptoms/searchexact/{search}": {
      "get": {
        "tags": [
          "Symptoms"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Symptoms_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISymptom"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/symptoms/{id}": {
      "get": {
        "tags": [
          "Symptoms"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Symptoms_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfISymptom"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfISymptom"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskCodes": {
      "get": {
        "tags": [
          "TaskCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaskCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaskCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaskCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaskCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taskCodes/search/{search}": {
      "get": {
        "tags": [
          "TaskCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskCodes/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskCodes/{id}": {
      "get": {
        "tags": [
          "TaskCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaskCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents/forasset/{assetid}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "operationId": "TaskComponents_GetForAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents/forasset/{assetid}/search/{search}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "operationId": "TaskComponents_SearchByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents/forasset/{assetid}/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "operationId": "TaskComponents_SearchByAssetExact",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaskComponents_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskComponents"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaskComponents_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaskComponent"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taskComponents/search/{search}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskComponents_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskComponents_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskComponents/{id}": {
      "get": {
        "tags": [
          "TaskComponents"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaskComponents_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskComponent"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskComponent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskReasons": {
      "get": {
        "tags": [
          "TaskReasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaskReasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskReason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskReasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaskReasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaskReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaskReason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taskReasons/search/{search}": {
      "get": {
        "tags": [
          "TaskReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskReasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskReasons/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskReasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskReasons/{id}": {
      "get": {
        "tags": [
          "TaskReasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaskReasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskStatusCodes": {
      "get": {
        "tags": [
          "TaskStatusCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaskStatusCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskStatusCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskStatusCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskStatusCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaskStatusCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaskStatusCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaskStatusCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taskStatusCodes/search/{search}": {
      "get": {
        "tags": [
          "TaskStatusCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskStatusCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskStatusCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskStatusCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskStatusCodes/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskStatusCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskStatusCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskStatusCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskStatusCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskStatusCodes/{id}": {
      "get": {
        "tags": [
          "TaskStatusCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaskStatusCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskStatusCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskStatusCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems/forasset/{assetid}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "operationId": "TaskSystems_GetForAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems/forasset/{assetid}/search/{search}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "operationId": "TaskSystems_SearchByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems/forasset/{assetid}/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "operationId": "TaskSystems_SearchByAssetExact",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaskSystems_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskSystems"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaskSystems_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaskSystem"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taskSystems/search/{search}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskSystems_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems/searchexact/{search}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaskSystems_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taskSystems/{id}": {
      "get": {
        "tags": [
          "TaskSystems"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaskSystems_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaskSystem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaskSystem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taxSchemes": {
      "get": {
        "tags": [
          "TaxSchemes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TaxSchemes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaxScheme"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaxScheme"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaxSchemes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TaxSchemes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITaxScheme"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITaxScheme"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/taxSchemes/search/{search}": {
      "get": {
        "tags": [
          "TaxSchemes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaxSchemes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaxScheme"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaxScheme"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taxSchemes/searchexact/{search}": {
      "get": {
        "tags": [
          "TaxSchemes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TaxSchemes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaxScheme"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaxScheme"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/taxSchemes/{id}": {
      "get": {
        "tags": [
          "TaxSchemes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TaxSchemes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITaxScheme"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITaxScheme"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecPartsUsed": {
      "get": {
        "tags": [
          "TechSpecPartsUsed"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TechSpecPartsUsed_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecPartUsed"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TechSpecPartsUsed"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TechSpecPartsUsed_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITechSpecPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITechSpecPartUsed"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/techSpecPartsUsed/search/{search}": {
      "get": {
        "tags": [
          "TechSpecPartsUsed"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecPartsUsed_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecPartsUsed/searchexact/{search}": {
      "get": {
        "tags": [
          "TechSpecPartsUsed"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecPartsUsed_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecPartsUsed/{id}": {
      "get": {
        "tags": [
          "TechSpecPartsUsed"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TechSpecPartsUsed_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecPartUsed"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecPartUsed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techspecs/{techSpecId}/partsused": {
      "get": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "Get list of parts issued to an equipment type (FA only)",
        "operationId": "TechSpecs_GetPartsUsed",
        "parameters": [
          {
            "name": "techSpecId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Part[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techspecs": {
      "get": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TechSpecs_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpec"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpec"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TechSpecs_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITechSpec"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITechSpec"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/techspecs/search/{search}": {
      "get": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecs_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpec"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpec"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techspecs/searchexact/{search}": {
      "get": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecs_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpec"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpec"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techspecs/{id}": {
      "get": {
        "tags": [
          "TechSpecs"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TechSpecs_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpec"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpec"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardParts": {
      "get": {
        "tags": [
          "TechSpecStandardParts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TechSpecStandardParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TechSpecStandardParts"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TechSpecStandardParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITechSpecStandardPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITechSpecStandardPart"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/techSpecStandardParts/search/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecStandardParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardParts/searchexact/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecStandardParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardParts/{id}": {
      "get": {
        "tags": [
          "TechSpecStandardParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TechSpecStandardParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks/forasset/{assetid}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "operationId": "TechSpecStandardTasks_GetForAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks/forasset/{assetid}/search/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "operationId": "TechSpecStandardTasks_SearchByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks/forasset/{assetid}/searchexact/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "operationId": "TechSpecStandardTasks_SearchByAssetExact",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TechSpecStandardTasks_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TechSpecStandardTasks_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/techSpecStandardTasks/search/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecStandardTasks_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks/searchexact/{search}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TechSpecStandardTasks_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/techSpecStandardTasks/{id}": {
      "get": {
        "tags": [
          "TechSpecStandardTasks"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TechSpecStandardTasks_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITechSpecStandardTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITechSpecStandardTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testResultLineItems": {
      "get": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TestResultLineItems_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "TestResultLineItems_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "TestResultLineItems_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testResultLineItems/search/{search}": {
      "get": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestResultLineItems_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testResultLineItems/searchexact/{search}": {
      "get": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestResultLineItems_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testResultLineItems/{id}": {
      "get": {
        "tags": [
          "TestResultLineItems"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TestResultLineItems_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResultLineItem"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResultLineItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults/{testId}/notes": {
      "get": {
        "tags": [
          "TestResults"
        ],
        "summary": "Get test notes",
        "description": "Get a list of notes for the test",
        "operationId": "TestResults_GetNotes",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Note[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestResults"
        ],
        "summary": "Add a note for a given test ID.  (FA only)",
        "operationId": "TestResults_AddNote",
        "parameters": [
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "Note",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults/complete": {
      "put": {
        "tags": [
          "TestResults"
        ],
        "summary": "Complete a test.",
        "operationId": "TestResults_Cancel",
        "requestBody": {
          "x-name": "saveBody",
          "description": "TestResult",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "TestResult",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults": {
      "get": {
        "tags": [
          "TestResults"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TestResults_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestResults"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "TestResults_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestResults"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "TestResults_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults/search/{search}": {
      "get": {
        "tags": [
          "TestResults"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestResults_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults/searchexact/{search}": {
      "get": {
        "tags": [
          "TestResults"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestResults_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testresults/{id}": {
      "get": {
        "tags": [
          "TestResults"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TestResults_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestResult"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testTypes": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TestTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TestTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITestType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/testTypes/search/{search}": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TestTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/testTypes/{id}": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TestTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITestType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITestType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/netlabor": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "operationId": "TimeCards_NetLabor",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/timesummary": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "operationId": "TimeCards_GetTimeSummary",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/timesummary/{supervisorId}/subordinate": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "operationId": "TimeCards_GetSubordinateTimeSummary",
        "parameters": [
          {
            "name": "supervisorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TimeCards_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeCard"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "TimeCards_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITimeCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "TimeCards_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITimeCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/search/{search}": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeCards_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/searchexact/{search}": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeCards_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timecards/{id}": {
      "get": {
        "tags": [
          "TimeCards"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TimeCards_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeCard"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeCard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeSummaries": {
      "get": {
        "tags": [
          "TimeSummaries"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TimeSummaries_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeSummaries"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TimeSummaries_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITimeSummary"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/timeSummaries/search/{search}": {
      "get": {
        "tags": [
          "TimeSummaries"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeSummaries_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeSummaries/searchexact/{search}": {
      "get": {
        "tags": [
          "TimeSummaries"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeSummaries_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeSummaries/{id}": {
      "get": {
        "tags": [
          "TimeSummaries"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TimeSummaries_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeSummary"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeTypes": {
      "get": {
        "tags": [
          "TimeTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "TimeTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "TimeTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfITimeType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfITimeType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/timeTypes/search/{search}": {
      "get": {
        "tags": [
          "TimeTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "TimeTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "TimeTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timeTypes/{id}": {
      "get": {
        "tags": [
          "TimeTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "TimeTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfITimeType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfITimeType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/unitsofMeasure": {
      "get": {
        "tags": [
          "UnitsofMeasure"
        ],
        "summary": "Retrieves all items.",
        "operationId": "UnitsofMeasure_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUnitOfMeasure"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUnitOfMeasure"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UnitsofMeasure"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "UnitsofMeasure_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUnitOfMeasure"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUnitOfMeasure"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/unitsofMeasure/search/{search}": {
      "get": {
        "tags": [
          "UnitsofMeasure"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UnitsofMeasure_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUnitOfMeasure"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUnitOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/unitsofMeasure/searchexact/{search}": {
      "get": {
        "tags": [
          "UnitsofMeasure"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UnitsofMeasure_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUnitOfMeasure"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUnitOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/unitsofMeasure/{id}": {
      "get": {
        "tags": [
          "UnitsofMeasure"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "UnitsofMeasure_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUnitOfMeasure"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUnitOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses/bulk": {
      "post": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Create user classes, in bulk. These are required: userClassId, description.",
        "operationId": "UserClasses_PostCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIUserClass"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Update or create user classes, in bulk. These are required: userClassId, description.",
        "operationId": "UserClasses_PutCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIUserClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses": {
      "delete": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "UserClasses_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserClass"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "UserClasses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserClass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "UserClasses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserClass"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "UserClasses_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses/{id}": {
      "delete": {
        "tags": [
          "UserClasses"
        ],
        "operationId": "UserClasses_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserClass"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "UserClasses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses/search/{search}": {
      "get": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserClasses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses/searchexact/{search}": {
      "get": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserClasses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userclasses/lov/{search}": {
      "get": {
        "tags": [
          "UserClasses"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "UserClasses_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userGroups": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieves all items.",
        "operationId": "UserGroups_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserGroup"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "UserGroups_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserGroup"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/userGroups/search/{search}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserGroups_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userGroups/searchexact/{search}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserGroups_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userGroups/{id}": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "UserGroups_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/bulk": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Users_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUser"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Users_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Users_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/search/{search}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Users_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/searchexact/{search}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Users_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Users_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userUserGroups": {
      "get": {
        "tags": [
          "UserUserGroups"
        ],
        "summary": "Retrieves all items.",
        "operationId": "UserUserGroups_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserUserGroup"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserUserGroups"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "UserUserGroups_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIUserUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIUserUserGroup"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/userUserGroups/search/{search}": {
      "get": {
        "tags": [
          "UserUserGroups"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserUserGroups_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userUserGroups/searchexact/{search}": {
      "get": {
        "tags": [
          "UserUserGroups"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "UserUserGroups_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/userUserGroups/{id}": {
      "get": {
        "tags": [
          "UserUserGroups"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "UserUserGroups_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIUserUserGroup"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIUserUserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes/bulk": {
      "post": {
        "tags": [
          "VendorAttributes"
        ],
        "operationId": "VendorAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendorAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorAttributes"
        ],
        "operationId": "VendorAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendorAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes": {
      "delete": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "VendorAttributes_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "VendorAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "VendorAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "VendorAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes/{id}": {
      "delete": {
        "tags": [
          "VendorAttributes"
        ],
        "operationId": "VendorAttributes_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "VendorAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes/search/{search}": {
      "get": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorAttributes/lov/{search}": {
      "get": {
        "tags": [
          "VendorAttributes"
        ],
        "summary": "Generic search for LOVs.",
        "operationId": "VendorAttributes_LovSearch",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContractParts": {
      "get": {
        "tags": [
          "VendorContractParts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "VendorContractParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContractPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContractPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorContractParts"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "VendorContractParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorContractPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorContractPart"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/vendorContractParts/search/{search}": {
      "get": {
        "tags": [
          "VendorContractParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorContractParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContractPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContractPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContractParts/searchexact/{search}": {
      "get": {
        "tags": [
          "VendorContractParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorContractParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContractPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContractPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContractParts/{id}": {
      "get": {
        "tags": [
          "VendorContractParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "VendorContractParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContractPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContractPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContracts/bulk": {
      "post": {
        "tags": [
          "VendorContracts"
        ],
        "operationId": "VendorContracts_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendorContract"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorContracts"
        ],
        "operationId": "VendorContracts_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendorContract"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContracts": {
      "get": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Retrieves all items.",
        "operationId": "VendorContracts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContract"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "VendorContracts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorContract"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "VendorContracts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorContract"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContracts/search/{search}": {
      "get": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorContracts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContract"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContracts/searchexact/{search}": {
      "get": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorContracts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContract"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorContracts/{id}": {
      "get": {
        "tags": [
          "VendorContracts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "VendorContracts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorContract"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorContract"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/search/{search}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Search for fuzzy (like) terms",
        "description": "Search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Vendors_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/searchexact/{search}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Search for fuzzy (like) terms",
        "description": "Search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "Vendors_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/bulk": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Bulk Post Vendors to be Created only",
        "operationId": "Vendors_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendor"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendors"
        ],
        "summary": "Buil Put Vendors to be Created/Updated",
        "operationId": "Vendors_Update",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Retrieves all items.",
        "operationId": "Vendors_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendor"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "Vendors_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendor"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendors"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "Vendors_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "Vendors_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorTypes": {
      "get": {
        "tags": [
          "VendorTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "VendorTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "VendorTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/vendorTypes/search/{search}": {
      "get": {
        "tags": [
          "VendorTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "VendorTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorTypes/{id}": {
      "get": {
        "tags": [
          "VendorTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "VendorTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorVendorTypes": {
      "get": {
        "tags": [
          "VendorVendorTypes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "VendorVendorTypes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorVendorType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VendorVendorTypes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "VendorVendorTypes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIVendorVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIVendorVendorType"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/vendorVendorTypes/search/{search}": {
      "get": {
        "tags": [
          "VendorVendorTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorVendorTypes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorVendorTypes/searchexact/{search}": {
      "get": {
        "tags": [
          "VendorVendorTypes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "VendorVendorTypes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vendorVendorTypes/{id}": {
      "get": {
        "tags": [
          "VendorVendorTypes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "VendorVendorTypes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIVendorVendorType"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIVendorVendorType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCancelReasons": {
      "get": {
        "tags": [
          "WarrantyCancelReasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WarrantyCancelReasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCancelReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCancelReason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WarrantyCancelReasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WarrantyCancelReasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyCancelReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyCancelReason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/warrantyCancelReasons/search/{search}": {
      "get": {
        "tags": [
          "WarrantyCancelReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyCancelReasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCancelReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCancelReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCancelReasons/searchexact/{search}": {
      "get": {
        "tags": [
          "WarrantyCancelReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyCancelReasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCancelReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCancelReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCancelReasons/{id}": {
      "get": {
        "tags": [
          "WarrantyCancelReasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WarrantyCancelReasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCancelReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCancelReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCategories": {
      "get": {
        "tags": [
          "WarrantyCategories"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WarrantyCategories_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCategory"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WarrantyCategories"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WarrantyCategories_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyCategory"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/warrantyCategories/search/{search}": {
      "get": {
        "tags": [
          "WarrantyCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyCategories_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCategories/searchexact/{search}": {
      "get": {
        "tags": [
          "WarrantyCategories"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyCategories_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyCategories/{id}": {
      "get": {
        "tags": [
          "WarrantyCategories"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WarrantyCategories_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyCategory"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyClaimDetails": {
      "get": {
        "tags": [
          "WarrantyClaimDetails"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WarrantyClaimDetails_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaimDetail"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaimDetail"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WarrantyClaimDetails"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WarrantyClaimDetails_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyClaimDetail"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyClaimDetail"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/warrantyClaimDetails/search/{search}": {
      "get": {
        "tags": [
          "WarrantyClaimDetails"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyClaimDetails_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaimDetail"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaimDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyClaimDetails/searchexact/{search}": {
      "get": {
        "tags": [
          "WarrantyClaimDetails"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyClaimDetails_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaimDetail"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaimDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyClaimDetails/{id}": {
      "get": {
        "tags": [
          "WarrantyClaimDetails"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WarrantyClaimDetails_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaimDetail"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaimDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyclaims/bulk": {
      "put": {
        "tags": [
          "WarrantyClaims"
        ],
        "operationId": "WarrantyClaims_UpdateCollection",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWarrantyClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyclaims": {
      "get": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WarrantyClaims_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WarrantyClaims_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WarrantyClaims_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyclaims/search/{search}": {
      "get": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyClaims_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyclaims/searchexact/{search}": {
      "get": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyClaims_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyclaims/{id}": {
      "get": {
        "tags": [
          "WarrantyClaims"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WarrantyClaims_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyClaim"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyClaim"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyDenyReasons": {
      "get": {
        "tags": [
          "WarrantyDenyReasons"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WarrantyDenyReasons_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyDenyReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyDenyReason"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WarrantyDenyReasons"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WarrantyDenyReasons_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWarrantyDenyReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWarrantyDenyReason"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/warrantyDenyReasons/search/{search}": {
      "get": {
        "tags": [
          "WarrantyDenyReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyDenyReasons_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyDenyReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyDenyReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyDenyReasons/searchexact/{search}": {
      "get": {
        "tags": [
          "WarrantyDenyReasons"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WarrantyDenyReasons_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyDenyReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyDenyReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/warrantyDenyReasons/{id}": {
      "get": {
        "tags": [
          "WarrantyDenyReasons"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WarrantyDenyReasons_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWarrantyDenyReason"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWarrantyDenyReason"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes/forasset/{assetid}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "operationId": "WorkAccomplishedCodes_GetForAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes/forasset/{assetid}/search/{search}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "operationId": "WorkAccomplishedCodes_SearchByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes/forasset/{assetid}/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "operationId": "WorkAccomplishedCodes_SearchByAssetExact",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkAccomplishedCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkAccomplishedCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workAccomplishedCodes/search/{search}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkAccomplishedCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkAccomplishedCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAccomplishedCodes/{id}": {
      "get": {
        "tags": [
          "WorkAccomplishedCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkAccomplishedCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAccomplishedCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAccomplishedCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments/workorder/{workOrderId}/task/{taskId}/employee/{employeeId}": {
      "delete": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Delete an assignment for a employee for a given work order and task/job.",
        "description": "Does not return an error if the employee is not assigned.",
        "operationId": "WorkAssignments_DeleteTaskAssignment",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments/workorder/{workOrderId}/employee/{employeeId}": {
      "delete": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Delete an employee assignment at the work order level.  (FA only)",
        "operationId": "WorkAssignments_DeleteWorkOrderAssignment",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments": {
      "get": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkAssignments_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkAssignments_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkAssignments_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkAssignments_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments/search/{search}": {
      "get": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkAssignments_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkAssignments_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workAssignments/{id}": {
      "get": {
        "tags": [
          "WorkAssignments"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkAssignments_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkAssignment"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workClasses": {
      "get": {
        "tags": [
          "WorkClasses"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkClasses_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkClass"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkClasses"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkClasses_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkClass"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workClasses/search/{search}": {
      "get": {
        "tags": [
          "WorkClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkClasses_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workClasses/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkClasses"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkClasses_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workClasses/{id}": {
      "get": {
        "tags": [
          "WorkClasses"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkClasses_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkClass"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkClass"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelayCodes": {
      "get": {
        "tags": [
          "WorkDelayCodes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkDelayCodes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelayCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelayCode"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkDelayCodes"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkDelayCodes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkDelayCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkDelayCode"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workDelayCodes/search/{search}": {
      "get": {
        "tags": [
          "WorkDelayCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkDelayCodes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelayCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelayCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelayCodes/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkDelayCodes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkDelayCodes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelayCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelayCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelayCodes/{id}": {
      "get": {
        "tags": [
          "WorkDelayCodes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkDelayCodes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelayCode"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelayCode"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelays": {
      "get": {
        "tags": [
          "WorkDelays"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkDelays_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkDelays"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkDelays_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkDelay"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workDelays/search/{search}": {
      "get": {
        "tags": [
          "WorkDelays"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkDelays_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelays/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkDelays"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkDelays_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workDelays/{id}": {
      "get": {
        "tags": [
          "WorkDelays"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkDelays_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorderAttributes/bulk": {
      "post": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "operationId": "WorkOrderAttributes_CreatePost",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "operationId": "WorkOrderAttributes_CreatePut",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorderAttributes": {
      "get": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkOrderAttributes_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrderAttributes_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrderAttributes_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorderAttributes/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderAttributes_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorderAttributes/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderAttributes_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorderAttributes/{id}": {
      "get": {
        "tags": [
          "WorkOrderAttributes"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderAttributes_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderAttribute"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderAttribute"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordercommercials/bulk": {
      "post": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Create a work order commercial posting.",
        "operationId": "WorkOrderCommercials_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordercommercials": {
      "get": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkOrderCommercials_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrderCommercials_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrderCommercials_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordercommercials/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderCommercials_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordercommercials/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderCommercials_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordercommercials/{id}": {
      "get": {
        "tags": [
          "WorkOrderCommercials"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderCommercials_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderCommercial"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderCommercial"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderLabor": {
      "get": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkOrderLabor_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrderLabor_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrderLabor_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderLabor/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderLabor_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderLabor/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderLabor_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderLabor/{id}": {
      "get": {
        "tags": [
          "WorkOrderLabor"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderLabor_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderLabor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderLabor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts": {
      "get": {
        "tags": [
          "WorkOrderParts"
        ],
        "operationId": "WorkOrderParts_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrderParts_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrderParts_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/bulk": {
      "post": {
        "tags": [
          "WorkOrderParts"
        ],
        "operationId": "WorkOrderParts_Create",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/return": {
      "post": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Return the part charge from the body.",
        "operationId": "WorkOrderParts_Return",
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkOrderPart",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "WorkOrderPart",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/bulk/returnresults": {
      "post": {
        "tags": [
          "WorkOrderParts"
        ],
        "operationId": "WorkOrderParts_CollectionWithResults",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderParts_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderParts_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workOrderParts/{id}": {
      "get": {
        "tags": [
          "WorkOrderParts"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderParts_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "operationId": "WorkOrders_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrders_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrders_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrders_Delete",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/notes": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Get work order notes",
        "description": "Get a list of notes for the work order",
        "operationId": "WorkOrders_GetNotes",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Note[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Add a note to a work order",
        "operationId": "WorkOrders_AddNote",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "one Note",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Note",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/cancel": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Cancel or delete the work order",
        "description": "FA: Delete a work order, if possible, otherwise close it.  M5: Cancel the work order",
        "operationId": "WorkOrders_Cancel",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "WorkOrder",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/delays": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Get work order's delay records. (FA only)",
        "description": "Same as /workdelays?$filter=WorkOrderId eq 'the work order ID'",
        "operationId": "WorkOrders_GetDelays",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "WorkDelay[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Start a work order delay (FA) or suspension (M5)",
        "operationId": "WorkOrders_PostDelay",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkDelay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Stop a work order delay (FA) or suspension (M5)",
        "operationId": "WorkOrders_PutDelay",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkDelay",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkDelay"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkDelay"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/close": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Close a work order",
        "description": "Provide Work Order ID in url.",
        "operationId": "WorkOrders_Close",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/finish": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Finish (FA) or complete (M5) a work order",
        "operationId": "WorkOrders_Finish",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkOrder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/unfinish": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Unfinish a work order (FA only)",
        "operationId": "WorkOrders_UnFinish",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkOrder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/open": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Open a pending work order (FA only)",
        "operationId": "WorkOrders_Open",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkOrder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/updatemeters": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Update work order meters",
        "operationId": "WorkOrders_UpdateMeters",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "WorkOrder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/pmchecklist": {
      "put": {
        "tags": [
          "WorkOrders"
        ],
        "operationId": "WorkOrders_SavePmChecklist",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIPmChecklistItemOf"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIPmChecklistItemOf"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/standardjob": {
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Save Standard Job for a single work order (FA only)",
        "operationId": "WorkOrders_AddStandardJob",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "StandardJob",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIStandardJob"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIStandardJob"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/partreserves": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Get part reserves for a work order (M5 only).",
        "description": "Get a list of WorkOrderPart held in reserves for this work order.",
        "operationId": "WorkOrders_GetPartReserves",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderPart"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderPart"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/finishallowed": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Get finish Allowed PISCES-3356",
        "operationId": "WorkOrders_GetFinishAllowed",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICustomListValue"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/closeallowed": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Get finish Allowed PISCES-4992-GetCloseAllowed",
        "operationId": "WorkOrders_GetCloseAllowed",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfICustomListValue"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfICustomListValue"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/addsrs": {
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Post work order ServiceRequests -- functions as if it were a 'bulk' route even though",
        "operationId": "WorkOrders_AddServiceRequests",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{workOrderId}/removesrs": {
      "post": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Post to remove the posted values of the ServiceRequest from the WorkOrderCenter screen. Saves the",
        "operationId": "WorkOrders_RemoveServiceRequests",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfListOfIServiceRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfListOfIServiceRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/search/{search}": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrders_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrders_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workorders/{id}": {
      "get": {
        "tags": [
          "WorkOrders"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrders_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrder"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordertasks": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "operationId": "WorkOrderTasks_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Create item",
        "description": "Create a new item",
        "operationId": "WorkOrderTasks_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Edit item",
        "description": "Edit an existing item",
        "operationId": "WorkOrderTasks_Put",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordertasks/{workOrderId}/{taskId}/notes": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Get task (FA) or job (M5) notes",
        "operationId": "WorkOrderTasks_GetNotes",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfINote"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Note[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfINote"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Add a note to a task (FA) or job (M5)",
        "operationId": "WorkOrderTasks_AddNote",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "saveBody",
          "description": "Note",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfINote"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Note",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfINote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordertasks/{workOrderId}/{taskId}/jobbedonemployees": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "operationId": "WorkOrderTasks_GetJobbedOnEmployees",
        "parameters": [
          {
            "name": "workOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIEmployee"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIEmployee"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workordertasks/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderTasks_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordertasks/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderTasks_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordertasks/{id}": {
      "get": {
        "tags": [
          "WorkOrderTasks"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderTasks_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderTask"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordervendors": {
      "get": {
        "tags": [
          "WorkOrderVendors"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkOrderVendors_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderVendor"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrderVendors"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkOrderVendors_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkOrderVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkOrderVendor"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workordervendors/search/{search}": {
      "get": {
        "tags": [
          "WorkOrderVendors"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderVendors_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordervendors/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkOrderVendors"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkOrderVendors_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workordervendors/{id}": {
      "get": {
        "tags": [
          "WorkOrderVendors"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkOrderVendors_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkOrderVendor"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkOrderVendor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPlans": {
      "get": {
        "tags": [
          "WorkPlans"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkPlans_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPlan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPlan"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkPlans"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkPlans_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkPlan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkPlan"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workPlans/search/{search}": {
      "get": {
        "tags": [
          "WorkPlans"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPlans_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPlan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPlan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPlans/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkPlans"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPlans_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPlan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPlan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPlans/{id}": {
      "get": {
        "tags": [
          "WorkPlans"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkPlans_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPlan"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPlan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workpositions/fortask/{taskId}": {
      "get": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "For a given taskId, say all of the positions that are legal in M5.  For FA, all positions are returned.",
        "operationId": "WorkPositions_GetForTask",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "WorkPosition[]",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workpositions": {
      "get": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkPositions_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPosition"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkPositions_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkPosition"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workpositions/search/{search}": {
      "get": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPositions_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workpositions/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPositions_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workpositions/{id}": {
      "get": {
        "tags": [
          "WorkPositions"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkPositions_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPosition"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPosition"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPriorities": {
      "get": {
        "tags": [
          "WorkPriorities"
        ],
        "summary": "Retrieves all items.",
        "operationId": "WorkPriorities_Get",
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPriority"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "All available items.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPriority"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkPriorities"
        ],
        "summary": "DO NOT USE. Present only for Swagger to generate a document",
        "operationId": "WorkPriorities_Post",
        "requestBody": {
          "x-name": "saveBody",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBodyOfIWorkPriority"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/SaveResponseOfIWorkPriority"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/workPriorities/search/{search}": {
      "get": {
        "tags": [
          "WorkPriorities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPriorities_Search",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPriority"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPriority"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPriorities/searchexact/{search}": {
      "get": {
        "tags": [
          "WorkPriorities"
        ],
        "summary": "Generic search for fuzzy (like) terms",
        "description": "Generic search implementation. Naively queries for the search term against all columns flagged as searchable.",
        "operationId": "WorkPriorities_SearchExact",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPriority"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPriority"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workPriorities/{id}": {
      "get": {
        "tags": [
          "WorkPriorities"
        ],
        "summary": "Retrieves item by id.",
        "operationId": "WorkPriorities_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODataQueryOptionsOfIWorkPriority"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection with zero or one item",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "$ref": "#/components/schemas/QueryResponseOfIWorkPriority"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QueryResponseOfIAccident": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAccident"
                }
              }
            }
          }
        ]
      },
      "IAccident": {
        "type": "object",
        "description": "Accident",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccidentId": {
            "type": "string",
            "description": "Accident.AccidentId\n\nAccident number  \nVX_ACCIDENT.AccidentId string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "Accident.AssetId\n\nUnit number  \nVX_ACCIDENT.AssetId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Accident.Description\n\nAccident description  \nVX_ACCIDENT.Description string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Accident.InternalId\n\naccident_main.accident_id  \nVX_ACCIDENT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Accident.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ACCIDENT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueryResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "NextPage": {
                "type": "string",
                "nullable": true
              },
              "TotalCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BaseResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "HttpStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          }
        }
      },
      "HttpStatusCode": {
        "type": "integer",
        "description": "100 = Continue\n101 = SwitchingProtocols\n200 = OK\n201 = Created\n202 = Accepted\n203 = NonAuthoritativeInformation\n204 = NoContent\n205 = ResetContent\n206 = PartialContent\n300 = MultipleChoices\n300 = Ambiguous\n301 = MovedPermanently\n301 = Moved\n302 = Found\n302 = Redirect\n303 = SeeOther\n303 = RedirectMethod\n304 = NotModified\n305 = UseProxy\n306 = Unused\n307 = TemporaryRedirect\n307 = RedirectKeepVerb\n400 = BadRequest\n401 = Unauthorized\n402 = PaymentRequired\n403 = Forbidden\n404 = NotFound\n405 = MethodNotAllowed\n406 = NotAcceptable\n407 = ProxyAuthenticationRequired\n408 = RequestTimeout\n409 = Conflict\n410 = Gone\n411 = LengthRequired\n412 = PreconditionFailed\n413 = RequestEntityTooLarge\n414 = RequestUriTooLong\n415 = UnsupportedMediaType\n416 = RequestedRangeNotSatisfiable\n417 = ExpectationFailed\n426 = UpgradeRequired\n500 = InternalServerError\n501 = NotImplemented\n502 = BadGateway\n503 = ServiceUnavailable\n504 = GatewayTimeout\n505 = HttpVersionNotSupported",
        "x-enumNames": [
          "Continue",
          "SwitchingProtocols",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultipleChoices",
          "Ambiguous",
          "MovedPermanently",
          "Moved",
          "Found",
          "Redirect",
          "SeeOther",
          "RedirectMethod",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "RedirectKeepVerb",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "UpgradeRequired",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported"
        ],
        "enum": [
          100,
          101,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          300,
          300,
          301,
          301,
          302,
          302,
          303,
          303,
          304,
          305,
          306,
          307,
          307,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          426,
          500,
          501,
          502,
          503,
          504,
          505
        ]
      },
      "ODataQueryOptionsOfIAccident": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccident"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccident"
              }
            }
          }
        ]
      },
      "ETagOfIAccident": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "ETag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DynamicObject"
          },
          {
            "type": "object",
            "description": "The ETag parsed from request.",
            "additionalProperties": false,
            "properties": {
              "Item": {
                "nullable": true
              },
              "IsWellFormed": {
                "type": "boolean",
                "description": "Gets or sets whether the ETag is well-formed."
              },
              "EntityType": {
                "type": "string",
                "description": "Gets or sets an entity type of the ETag.",
                "nullable": true
              },
              "IsAny": {
                "type": "boolean",
                "description": "Gets or sets whether the ETag is corresponding to \"*\"."
              },
              "IsIfNoneMatch": {
                "type": "boolean",
                "description": "Gets or sets whether If-None-Match set in the request header."
              },
              "ConcurrencyProperties": {
                "type": "object",
                "nullable": true,
                "additionalProperties": {}
              }
            }
          }
        ]
      },
      "DynamicObject": {
        "type": "object",
        "additionalProperties": false
      },
      "ODataQueryOptions": {
        "type": "object",
        "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip, and $count.",
        "additionalProperties": false,
        "properties": {
          "Request": {
            "description": "Gets the request message associated with this instance.",
            "nullable": true,
            "$ref": "#/components/schemas/HttpRequestMessage"
          },
          "Context": {
            "description": "Gets the given ODataQueryContext\n            ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "RawValues": {
            "description": "Gets the raw string of all the OData query options",
            "nullable": true,
            "$ref": "#/components/schemas/ODataRawQueryOptions"
          },
          "SelectExpand": {
            "description": "Gets the SelectExpandQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/SelectExpandQueryOption"
          },
          "Apply": {
            "description": "Gets the ApplyQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/ApplyQueryOption"
          },
          "Filter": {
            "description": "Gets the FilterQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/FilterQueryOption"
          },
          "OrderBy": {
            "description": "Gets the OrderByQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/OrderByQueryOption"
          },
          "Skip": {
            "description": "Gets the SkipQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/SkipQueryOption"
          },
          "SkipToken": {
            "description": "Gets the SkipTokenQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/SkipTokenQueryOption"
          },
          "Top": {
            "description": "Gets the TopQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/TopQueryOption"
          },
          "Count": {
            "description": "Gets the CountQueryOption.",
            "nullable": true,
            "$ref": "#/components/schemas/CountQueryOption"
          },
          "Validator": {
            "description": "Gets or sets the query validator.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryValidator"
          },
          "IfMatch": {
            "description": "Gets the ETag from IfMatch header.",
            "nullable": true,
            "$ref": "#/components/schemas/ETag"
          },
          "IfNoneMatch": {
            "description": "Gets the ETag from IfNoneMatch header.",
            "nullable": true,
            "$ref": "#/components/schemas/ETag"
          }
        }
      },
      "HttpRequestMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Version": {
            "nullable": true,
            "$ref": "#/components/schemas/Version"
          },
          "Content": {
            "nullable": true,
            "$ref": "#/components/schemas/HttpContent"
          },
          "Method": {
            "nullable": true,
            "$ref": "#/components/schemas/HttpMethod"
          },
          "RequestUri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Headers": {
            "nullable": true,
            "$ref": "#/components/schemas/HttpRequestHeaders"
          },
          "Properties": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "Version": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Major": {
            "type": "integer",
            "format": "int32"
          },
          "Minor": {
            "type": "integer",
            "format": "int32"
          },
          "Build": {
            "type": "integer",
            "format": "int32"
          },
          "Revision": {
            "type": "integer",
            "format": "int32"
          },
          "MajorRevision": {
            "type": "integer"
          },
          "MinorRevision": {
            "type": "integer"
          }
        }
      },
      "HttpContent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Headers": {
            "nullable": true,
            "$ref": "#/components/schemas/HttpContentHeaders"
          }
        }
      },
      "HttpContentHeaders": {
        "allOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringAndIEnumerableOfString"
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Allow": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "ContentDisposition": {
                "nullable": true,
                "$ref": "#/components/schemas/ContentDispositionHeaderValue"
              },
              "ContentEncoding": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "ContentLanguage": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "ContentLength": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "ContentLocation": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "ContentMD5": {
                "type": "string",
                "format": "byte",
                "nullable": true
              },
              "ContentRange": {
                "nullable": true,
                "$ref": "#/components/schemas/ContentRangeHeaderValue"
              },
              "ContentType": {
                "nullable": true,
                "$ref": "#/components/schemas/MediaTypeHeaderValue"
              },
              "Expires": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "ContentDispositionHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "DispositionType": {
            "type": "string",
            "nullable": true
          },
          "Parameters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueHeaderValue"
            }
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "FileNameStar": {
            "type": "string",
            "nullable": true
          },
          "CreationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ModificationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ReadDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "NameValueHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentRangeHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "From": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "To": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Length": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "HasLength": {
            "type": "boolean"
          },
          "HasRange": {
            "type": "boolean"
          }
        }
      },
      "MediaTypeHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "CharSet": {
            "type": "string",
            "nullable": true
          },
          "Parameters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueHeaderValue"
            }
          },
          "MediaType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "KeyValuePairOfStringAndIEnumerableOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HttpMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Method": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HttpRequestHeaders": {
        "allOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringAndIEnumerableOfString"
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Accept": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MediaTypeWithQualityHeaderValue"
                }
              },
              "AcceptCharset": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/StringWithQualityHeaderValue"
                }
              },
              "AcceptEncoding": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/StringWithQualityHeaderValue"
                }
              },
              "AcceptLanguage": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/StringWithQualityHeaderValue"
                }
              },
              "Authorization": {
                "nullable": true,
                "$ref": "#/components/schemas/AuthenticationHeaderValue"
              },
              "Expect": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueWithParametersHeaderValue"
                }
              },
              "ExpectContinue": {
                "type": "boolean",
                "nullable": true
              },
              "From": {
                "type": "string",
                "nullable": true
              },
              "Host": {
                "type": "string",
                "nullable": true
              },
              "IfMatch": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EntityTagHeaderValue"
                }
              },
              "IfModifiedSince": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "IfNoneMatch": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EntityTagHeaderValue"
                }
              },
              "IfRange": {
                "nullable": true,
                "$ref": "#/components/schemas/RangeConditionHeaderValue"
              },
              "IfUnmodifiedSince": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "MaxForwards": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "ProxyAuthorization": {
                "nullable": true,
                "$ref": "#/components/schemas/AuthenticationHeaderValue"
              },
              "Range": {
                "nullable": true,
                "$ref": "#/components/schemas/RangeHeaderValue"
              },
              "Referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "TE": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/TransferCodingWithQualityHeaderValue"
                }
              },
              "UserAgent": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ProductInfoHeaderValue"
                }
              },
              "CacheControl": {
                "nullable": true,
                "$ref": "#/components/schemas/CacheControlHeaderValue"
              },
              "Connection": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "ConnectionClose": {
                "type": "boolean",
                "nullable": true
              },
              "Date": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "Pragma": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueHeaderValue"
                }
              },
              "Trailer": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "TransferEncoding": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/TransferCodingHeaderValue"
                }
              },
              "TransferEncodingChunked": {
                "type": "boolean",
                "nullable": true
              },
              "Upgrade": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ProductHeaderValue"
                }
              },
              "Via": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ViaHeaderValue"
                }
              },
              "Warning": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/WarningHeaderValue"
                }
              }
            }
          }
        ]
      },
      "MediaTypeWithQualityHeaderValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaTypeHeaderValue"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Quality": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "StringWithQualityHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Value": {
            "type": "string",
            "nullable": true
          },
          "Quality": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "AuthenticationHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Scheme": {
            "type": "string",
            "nullable": true
          },
          "Parameter": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NameValueWithParametersHeaderValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NameValueHeaderValue"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Parameters": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueHeaderValue"
                }
              }
            }
          }
        ]
      },
      "EntityTagHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Tag": {
            "type": "string",
            "nullable": true
          },
          "IsWeak": {
            "type": "boolean"
          }
        }
      },
      "RangeConditionHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EntityTag": {
            "nullable": true,
            "$ref": "#/components/schemas/EntityTagHeaderValue"
          }
        }
      },
      "RangeHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "Ranges": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RangeItemHeaderValue"
            }
          }
        }
      },
      "RangeItemHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "From": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "To": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "TransferCodingWithQualityHeaderValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TransferCodingHeaderValue"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Quality": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          }
        ]
      },
      "TransferCodingHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Value": {
            "type": "string",
            "nullable": true
          },
          "Parameters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueHeaderValue"
            }
          }
        }
      },
      "ProductInfoHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Product": {
            "nullable": true,
            "$ref": "#/components/schemas/ProductHeaderValue"
          },
          "Comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CacheControlHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "NoCache": {
            "type": "boolean"
          },
          "NoCacheHeaders": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "NoStore": {
            "type": "boolean"
          },
          "MaxAge": {
            "type": "string",
            "format": "duration",
            "nullable": true
          },
          "SharedMaxAge": {
            "type": "string",
            "format": "duration",
            "nullable": true
          },
          "MaxStale": {
            "type": "boolean"
          },
          "MaxStaleLimit": {
            "type": "string",
            "format": "duration",
            "nullable": true
          },
          "MinFresh": {
            "type": "string",
            "format": "duration",
            "nullable": true
          },
          "NoTransform": {
            "type": "boolean"
          },
          "OnlyIfCached": {
            "type": "boolean"
          },
          "Public": {
            "type": "boolean"
          },
          "Private": {
            "type": "boolean"
          },
          "PrivateHeaders": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "MustRevalidate": {
            "type": "boolean"
          },
          "ProxyRevalidate": {
            "type": "boolean"
          },
          "Extensions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueHeaderValue"
            }
          }
        }
      },
      "ViaHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ProtocolName": {
            "type": "string",
            "nullable": true
          },
          "ProtocolVersion": {
            "type": "string",
            "nullable": true
          },
          "ReceivedBy": {
            "type": "string",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WarningHeaderValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Agent": {
            "type": "string",
            "nullable": true
          },
          "Text": {
            "type": "string",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryContext": {
        "type": "object",
        "description": "This defines some context information used to perform query composition.",
        "additionalProperties": false,
        "properties": {
          "DefaultQuerySettings": {
            "description": "Gets the given DefaultQuerySettings.",
            "nullable": true,
            "$ref": "#/components/schemas/DefaultQuerySettings"
          },
          "Model": {
            "description": "Gets the given IEdmModel that contains the EntitySet.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmModel"
          },
          "ElementType": {
            "description": "Gets the IEdmType of the element.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmType"
          },
          "NavigationSource": {
            "description": "Gets the IEdmNavigationSource that contains the element.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmNavigationSource"
          },
          "ElementClrType": {
            "type": "string",
            "description": "Gets the CLR type of the element.",
            "nullable": true
          },
          "Path": {
            "description": "Gets the ODataPath.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataPath"
          },
          "RequestContainer": {
            "description": "Gets the request container.",
            "nullable": true,
            "$ref": "#/components/schemas/IServiceProvider"
          }
        }
      },
      "DefaultQuerySettings": {
        "type": "object",
        "description": "This class describes the default settings to use during query composition.",
        "additionalProperties": false,
        "properties": {
          "EnableExpand": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether navigation property can be expanded."
          },
          "EnableSelect": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether property can be selected."
          },
          "EnableCount": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether entity set and property can apply $count."
          },
          "EnableOrderBy": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether property can apply $orderby."
          },
          "EnableFilter": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether property can apply $filter."
          },
          "MaxTop": {
            "type": "integer",
            "description": "Gets or sets the max value of $top that a client can request.",
            "format": "int32",
            "nullable": true
          },
          "EnableSkipToken": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the service will use skiptoken or not."
          }
        }
      },
      "IEdmModel": {
        "type": "object",
        "description": "Semantic representation of an EDM model.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "SchemaElements": {
            "type": "array",
            "description": "Gets the collection of schema elements that are contained in this model.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmSchemaElement"
            }
          },
          "VocabularyAnnotations": {
            "type": "array",
            "description": "Gets the collection of vocabulary annotations that are contained in this model.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmVocabularyAnnotation"
            }
          },
          "ReferencedModels": {
            "type": "array",
            "description": "Gets the collection of models referred to by this model (mainly by the this.References).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmModel"
            }
          },
          "DeclaredNamespaces": {
            "type": "array",
            "description": "Gets the collection of namespaces that schema elements use contained in this model.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "DirectValueAnnotationsManager": {
            "description": "Gets the model's annotations manager.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmDirectValueAnnotationsManager"
          },
          "EntityContainer": {
            "description": "Gets the only one entity container of the model.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmEntityContainer"
          }
        }
      },
      "IEdmSchemaElement": {
        "type": "object",
        "description": "Common base interface for all named children of EDM schema.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "SchemaElementKind": {
            "description": "Gets the kind of this schema element.",
            "$ref": "#/components/schemas/EdmSchemaElementKind"
          },
          "Namespace": {
            "type": "string",
            "description": "Gets the namespace this schema element belongs to.",
            "nullable": true
          }
        }
      },
      "EdmSchemaElementKind": {
        "type": "integer",
        "description": "Defines EDM schema element types.\n\n0 = None\n1 = TypeDefinition\n2 = Term\n3 = Action\n4 = EntityContainer\n5 = Function",
        "x-enumNames": [
          "None",
          "TypeDefinition",
          "Term",
          "Action",
          "EntityContainer",
          "Function"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "IEdmVocabularyAnnotation": {
        "type": "object",
        "description": "Represents an EDM vocabulary annotation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Qualifier": {
            "type": "string",
            "description": "Gets the qualifier used to discriminate between multiple bindings of the same property or type.",
            "nullable": true
          },
          "Term": {
            "description": "Gets the term bound by the annotation.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmTerm"
          },
          "Target": {
            "description": "Gets the element the annotation applies to.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmVocabularyAnnotatable"
          },
          "Value": {
            "description": "Gets the expression producing the value of the annotation.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmExpression"
          }
        }
      },
      "IEdmTerm": {
        "type": "object",
        "description": "Represents an EDM term.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Type": {
            "description": "Gets the type of this term.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmTypeReference"
          },
          "AppliesTo": {
            "type": "string",
            "description": "Gets the AppliesTo of this term.",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "Gets the DefaultValue of this term.",
            "nullable": true
          }
        }
      },
      "IEdmTypeReference": {
        "type": "object",
        "description": "Represents a references to a type.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "IsNullable": {
            "type": "boolean",
            "description": "Gets a value indicating whether this type is nullable."
          },
          "Definition": {
            "description": "Gets the definition to which this type refers.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmType"
          }
        }
      },
      "IEdmType": {
        "type": "object",
        "description": "Represents the definition of an EDM type.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "TypeKind": {
            "description": "Gets the kind of this type.",
            "$ref": "#/components/schemas/EdmTypeKind"
          }
        }
      },
      "EdmTypeKind": {
        "type": "integer",
        "description": "Defines EDM metatypes.\n\n0 = None\n1 = Primitive\n2 = Entity\n3 = Complex\n4 = Collection\n5 = EntityReference\n6 = Enum\n7 = TypeDefinition\n8 = Untyped\n9 = Path",
        "x-enumNames": [
          "None",
          "Primitive",
          "Entity",
          "Complex",
          "Collection",
          "EntityReference",
          "Enum",
          "TypeDefinition",
          "Untyped",
          "Path"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ]
      },
      "IEdmVocabularyAnnotatable": {
        "type": "object",
        "description": "Represents an element that can be targeted by Vocabulary Annotations",
        "x-abstract": true,
        "additionalProperties": false
      },
      "IEdmExpression": {
        "type": "object",
        "description": "Represents an EDM expression.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ExpressionKind": {
            "description": "Gets the kind of this expression.",
            "$ref": "#/components/schemas/EdmExpressionKind"
          }
        }
      },
      "EdmExpressionKind": {
        "type": "integer",
        "description": "Defines EDM expression kinds.\n\n0 = None\n1 = BinaryConstant\n2 = BooleanConstant\n3 = DateTimeOffsetConstant\n4 = DecimalConstant\n5 = FloatingConstant\n6 = GuidConstant\n7 = IntegerConstant\n8 = StringConstant\n9 = DurationConstant\n10 = Null\n11 = Record\n12 = Collection\n13 = Path\n14 = If\n15 = Cast\n16 = IsType\n17 = FunctionApplication\n18 = LabeledExpressionReference\n19 = Labeled\n20 = PropertyPath\n21 = NavigationPropertyPath\n22 = DateConstant\n23 = TimeOfDayConstant\n24 = EnumMember\n25 = AnnotationPath",
        "x-enumNames": [
          "None",
          "BinaryConstant",
          "BooleanConstant",
          "DateTimeOffsetConstant",
          "DecimalConstant",
          "FloatingConstant",
          "GuidConstant",
          "IntegerConstant",
          "StringConstant",
          "DurationConstant",
          "Null",
          "Record",
          "Collection",
          "Path",
          "If",
          "Cast",
          "IsType",
          "FunctionApplication",
          "LabeledExpressionReference",
          "Labeled",
          "PropertyPath",
          "NavigationPropertyPath",
          "DateConstant",
          "TimeOfDayConstant",
          "EnumMember",
          "AnnotationPath"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25
        ]
      },
      "IEdmDirectValueAnnotationsManager": {
        "type": "object",
        "description": "Manages getting and setting direct annotations on EDM elements.",
        "x-abstract": true,
        "additionalProperties": false
      },
      "IEdmEntityContainer": {
        "type": "object",
        "description": "Represents an EDM entity container.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Elements": {
            "type": "array",
            "description": "Gets a collection of the elements of this entity container.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmEntityContainerElement"
            }
          }
        }
      },
      "IEdmEntityContainerElement": {
        "type": "object",
        "description": "Represents the common elements of all EDM entity container elements.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ContainerElementKind": {
            "description": "Gets the kind of element of this container element.",
            "$ref": "#/components/schemas/EdmContainerElementKind"
          },
          "Container": {
            "description": "Gets the container that contains this element.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmEntityContainer"
          }
        }
      },
      "EdmContainerElementKind": {
        "type": "integer",
        "description": "Defines EDM container element types.\n\n0 = None\n1 = EntitySet\n2 = ActionImport\n3 = FunctionImport\n4 = Singleton",
        "x-enumNames": [
          "None",
          "EntitySet",
          "ActionImport",
          "FunctionImport",
          "Singleton"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "IEdmNavigationSource": {
        "type": "object",
        "description": "Represents an EDM navigation source.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "NavigationPropertyBindings": {
            "type": "array",
            "description": "Gets the navigation property bindings of this navigation source.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmNavigationPropertyBinding"
            }
          },
          "Path": {
            "description": "Gets the path of this navigation source.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmPathExpression"
          },
          "Type": {
            "description": "Gets the type of this navigation source.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmType"
          }
        }
      },
      "IEdmNavigationPropertyBinding": {
        "type": "object",
        "description": "Represents a binding from an EDM navigation property to a navigation source.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "NavigationProperty": {
            "description": "Gets the navigation property.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmNavigationProperty"
          },
          "Target": {
            "description": "Gets the target navigation source.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmNavigationSource"
          },
          "Path": {
            "description": "Get the path that a navigation property targets.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmPathExpression"
          }
        }
      },
      "IEdmNavigationProperty": {
        "type": "object",
        "description": "Represents an EDM navigation property.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Partner": {
            "description": "Gets the partner of this navigation property.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmNavigationProperty"
          },
          "OnDelete": {
            "description": "Gets the action to execute on the deletion of this end of a bidirectional association.",
            "$ref": "#/components/schemas/EdmOnDeleteAction"
          },
          "ContainsTarget": {
            "type": "boolean",
            "description": "Gets a value indicating whether the navigation target is contained inside the navigation source."
          },
          "ReferentialConstraint": {
            "description": "Gets the referential constraint for this navigation, returning null if this is the principal end or if there is no referential constraint.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmReferentialConstraint"
          }
        }
      },
      "EdmOnDeleteAction": {
        "type": "integer",
        "description": "Enumerates the actions EDM can apply on deletes.\n\n0 = None\n1 = Cascade",
        "x-enumNames": [
          "None",
          "Cascade"
        ],
        "enum": [
          0,
          1
        ]
      },
      "IEdmReferentialConstraint": {
        "type": "object",
        "description": "Represents an EDM referential constraint on a navigation property.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "PropertyPairs": {
            "type": "array",
            "description": "Gets the set of property pairs from the referential constraint. No particular ordering should be assumed.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EdmReferentialConstraintPropertyPair"
            }
          }
        }
      },
      "EdmReferentialConstraintPropertyPair": {
        "type": "object",
        "description": "Represents a pair of properties as part of a referential constraint.",
        "additionalProperties": false,
        "properties": {
          "DependentProperty": {
            "description": "The local or dependent property in the referential constraint property pair. Will never be null.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmStructuralProperty"
          },
          "PrincipalProperty": {
            "description": "The foreign or principal property in the referential constraint property pair. Will never be null.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmStructuralProperty"
          }
        }
      },
      "IEdmStructuralProperty": {
        "type": "object",
        "description": "Represents an EDM structural (i.e. non-navigation) property.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "DefaultValueString": {
            "type": "string",
            "description": "Gets the default value of this property.",
            "nullable": true
          }
        }
      },
      "IEdmPathExpression": {
        "type": "object",
        "description": "Represents an EDM path expression.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "PathSegments": {
            "type": "array",
            "description": "Gets the path segments as a decomposed qualified name. \"A.B/C/D.E\" is { \"A.B\", \"C\", \"D.E\" }.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "Path": {
            "type": "string",
            "description": "Gets the path string, like \"A.B/C/D.E\".",
            "nullable": true
          }
        }
      },
      "ODataPath": {
        "type": "object",
        "description": "Provides an object representation for an OData path with additional information about the EDM type and entity set for the path.",
        "additionalProperties": false,
        "properties": {
          "EdmType": {
            "description": "Gets the EDM type of the path.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmType"
          },
          "NavigationSource": {
            "description": "Gets the navigation source of the path.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmNavigationSource"
          },
          "Segments": {
            "type": "array",
            "description": "Gets the path segments for the OData path.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ODataPathSegment"
            }
          },
          "PathTemplate": {
            "type": "string",
            "description": "Gets the path template describing the types of segments in the path.",
            "nullable": true
          },
          "Path": {
            "type": "array",
            "description": "Gets the ODL path.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ODataPathSegment"
            }
          }
        }
      },
      "ODataPathSegment": {
        "type": "object",
        "description": "The semantic representation of a segment in a path.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Identifier": {
            "type": "string",
            "description": "Returns the identifier for this segment i.e. string part without the keys.",
            "nullable": true
          }
        }
      },
      "IServiceProvider": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataRawQueryOptions": {
        "type": "object",
        "description": "Represents the raw query values in the string format from the incoming request.",
        "additionalProperties": false,
        "properties": {
          "Filter": {
            "type": "string",
            "description": "Gets the raw $filter query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Apply": {
            "type": "string",
            "description": "Gets the raw $apply query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "OrderBy": {
            "type": "string",
            "description": "Gets the raw $orderby query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Top": {
            "type": "string",
            "description": "Gets the raw $top query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Skip": {
            "type": "string",
            "description": "Gets the raw $skip query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Select": {
            "type": "string",
            "description": "Gets the raw $select query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Expand": {
            "type": "string",
            "description": "Gets the raw $expand query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Count": {
            "type": "string",
            "description": "Gets the raw $count query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "Format": {
            "type": "string",
            "description": "Gets the raw $format query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "SkipToken": {
            "type": "string",
            "description": "Gets the raw $skiptoken query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          },
          "DeltaToken": {
            "type": "string",
            "description": "Gets the raw $deltatoken query value from the incoming request Uri if exists.\n            ",
            "nullable": true
          }
        }
      },
      "SelectExpandQueryOption": {
        "type": "object",
        "description": "Represents the OData $select and $expand query options.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.\n            ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "RawSelect": {
            "type": "string",
            "description": "Gets the raw $select value.",
            "nullable": true
          },
          "RawExpand": {
            "type": "string",
            "description": "Gets the raw $expand value.",
            "nullable": true
          },
          "Validator": {
            "description": "Gets or sets the $select and $expand query validator.",
            "nullable": true,
            "$ref": "#/components/schemas/SelectExpandQueryValidator"
          },
          "SelectExpandClause": {
            "description": "Gets the parsed SelectExpandClause for this query option.",
            "nullable": true,
            "$ref": "#/components/schemas/SelectExpandClause"
          },
          "LevelsMaxLiteralExpansionDepth": {
            "type": "integer",
            "description": "Gets or sets the number of levels that a top level $expand=NavigationProperty($levels=max)\nwill be expanded.\nThis value will decrease by one with each nesting level in the $expand clause.\nFor example, with a property value 5, the following query $expand=A($expand=B($expand=C($levels=max)))\nwill be interpreted as $expand=A($expand=B($expand=C($levels=3))).\nIf the query gets validated, the MaxExpansionDepth value\nmust be greater than or equal to this value.",
            "format": "int32"
          }
        }
      },
      "SelectExpandQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a SelectExpandQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "SelectExpandClause": {
        "type": "object",
        "description": "Class representing the combined semantic meaning of any select or expand clauses in the uri.",
        "additionalProperties": false,
        "properties": {
          "SelectedItems": {
            "type": "array",
            "description": "Gets the selected properties and operations.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SelectItem"
            }
          },
          "AllSelected": {
            "type": "boolean",
            "description": "Gets a flag indicating that everything at this level has been selected."
          }
        }
      },
      "SelectItem": {
        "type": "object",
        "description": "An item that has been selected by the query at the current level of the tree.",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ApplyQueryOption": {
        "type": "object",
        "description": "This defines a $apply OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.\n            ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "ResultClrType": {
            "type": "string",
            "description": "ClrType for result of transformations",
            "nullable": true
          },
          "ApplyClause": {
            "description": "Gets the parsed ApplyClause for this query option.",
            "nullable": true,
            "$ref": "#/components/schemas/ApplyClause"
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $apply value.\n            ",
            "nullable": true
          }
        }
      },
      "ApplyClause": {
        "type": "object",
        "description": "Represents the set of transformations to perform as part of $apply.",
        "additionalProperties": false,
        "properties": {
          "Transformations": {
            "type": "array",
            "description": "The collection of transformations to perform.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransformationNode"
            }
          }
        }
      },
      "TransformationNode": {
        "type": "object",
        "description": "Base class for all transformation nodes.",
        "x-abstract": true,
        "additionalProperties": false
      },
      "FilterQueryOption": {
        "type": "object",
        "description": "This defines a $filter OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.\n            ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "Validator": {
            "description": "Gets or sets the Filter Query Validator",
            "nullable": true,
            "$ref": "#/components/schemas/FilterQueryValidator"
          },
          "FilterClause": {
            "description": "Gets the parsed FilterClause for this query option.",
            "nullable": true,
            "$ref": "#/components/schemas/FilterClause"
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $filter value.\n            ",
            "nullable": true
          }
        }
      },
      "FilterQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a FilterQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "FilterClause": {
        "type": "object",
        "description": "The result of parsing a $filter query option.",
        "additionalProperties": false,
        "properties": {
          "Expression": {
            "description": "Gets the filter expression - this should evaluate to a single boolean value.",
            "nullable": true,
            "$ref": "#/components/schemas/SingleValueNode"
          },
          "RangeVariable": {
            "description": "Gets the parameter for the expression which represents a single value from the collection.",
            "nullable": true,
            "$ref": "#/components/schemas/RangeVariable"
          },
          "ItemType": {
            "description": "Gets the type of item returned by this clause.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "SingleValueNode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryNode"
          },
          {
            "type": "object",
            "description": "Base class for all semantic metadata bound nodes which represent a single composable value.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "Kind": {
                "description": "Gets the kind of this node.",
                "$ref": "#/components/schemas/QueryNodeKind"
              }
            }
          }
        ]
      },
      "QueryNodeKind": {
        "type": "integer",
        "description": "Public enumeration of kinds of query nodes. A subset of InternalQueryNodeKind\n\n0 = None\n1 = Constant\n2 = Convert\n3 = NonResourceRangeVariableReference\n4 = BinaryOperator\n5 = UnaryOperator\n6 = SingleValuePropertyAccess\n7 = CollectionPropertyAccess\n8 = SingleValueFunctionCall\n9 = Any\n10 = CollectionNavigationNode\n11 = SingleNavigationNode\n12 = SingleValueOpenPropertyAccess\n13 = SingleResourceCast\n14 = All\n15 = CollectionResourceCast\n16 = ResourceRangeVariableReference\n17 = SingleResourceFunctionCall\n18 = CollectionFunctionCall\n19 = CollectionResourceFunctionCall\n20 = NamedFunctionParameter\n21 = ParameterAlias\n22 = EntitySet\n23 = KeyLookup\n24 = SearchTerm\n25 = CollectionOpenPropertyAccess\n26 = CollectionComplexNode\n27 = SingleComplexNode\n28 = Count\n29 = SingleValueCast\n30 = CollectionPropertyNode\n31 = AggregatedCollectionPropertyNode\n32 = In\n33 = CollectionConstant",
        "x-enumNames": [
          "None",
          "Constant",
          "Convert",
          "NonResourceRangeVariableReference",
          "BinaryOperator",
          "UnaryOperator",
          "SingleValuePropertyAccess",
          "CollectionPropertyAccess",
          "SingleValueFunctionCall",
          "Any",
          "CollectionNavigationNode",
          "SingleNavigationNode",
          "SingleValueOpenPropertyAccess",
          "SingleResourceCast",
          "All",
          "CollectionResourceCast",
          "ResourceRangeVariableReference",
          "SingleResourceFunctionCall",
          "CollectionFunctionCall",
          "CollectionResourceFunctionCall",
          "NamedFunctionParameter",
          "ParameterAlias",
          "EntitySet",
          "KeyLookup",
          "SearchTerm",
          "CollectionOpenPropertyAccess",
          "CollectionComplexNode",
          "SingleComplexNode",
          "Count",
          "SingleValueCast",
          "CollectionPropertyNode",
          "AggregatedCollectionPropertyNode",
          "In",
          "CollectionConstant"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33
        ]
      },
      "QueryNode": {
        "type": "object",
        "description": "Base class for all semantic metadata bound nodes.",
        "x-abstract": true,
        "additionalProperties": false
      },
      "RangeVariable": {
        "type": "object",
        "description": "A RangeVariable, which represents an iterator variable either over a collection, either of entities or not.\nExists outside of the main SemanticAST, but hooked in via a RangeVariableReferenceNode (either Non-Entity or Entity).",
        "x-abstract": true,
        "additionalProperties": false
      },
      "OrderByQueryOption": {
        "type": "object",
        "description": "This defines a $orderby OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.\n            ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "OrderByNodes": {
            "type": "array",
            "description": "Gets the mutable list of OrderByPropertyNode instances for this query option.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrderByNode"
            }
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $orderby value.\n            ",
            "nullable": true
          },
          "Validator": {
            "description": "Gets or sets the OrderBy Query Validator.",
            "nullable": true,
            "$ref": "#/components/schemas/OrderByQueryValidator"
          },
          "OrderByClause": {
            "description": "Gets the parsed OrderByClause for this query option.",
            "nullable": true,
            "$ref": "#/components/schemas/OrderByClause"
          }
        }
      },
      "OrderByNode": {
        "type": "object",
        "description": "Represents a single order by expression in the $orderby clause.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Direction": {
            "description": "Gets the OrderByDirection for the current node.",
            "$ref": "#/components/schemas/OrderByDirection"
          }
        }
      },
      "OrderByDirection": {
        "type": "integer",
        "description": "Enumeration of order by directions.\n\n0 = Ascending\n1 = Descending",
        "x-enumNames": [
          "Ascending",
          "Descending"
        ],
        "enum": [
          0,
          1
        ]
      },
      "OrderByQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate an OrderByQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "OrderByClause": {
        "type": "object",
        "description": "Represents the result of parsing the $orderby query option.",
        "additionalProperties": false,
        "properties": {
          "ThenBy": {
            "description": "Gets the next orderby to perform after performing this orderby, can be null in the case of only a single orderby expression.",
            "nullable": true,
            "$ref": "#/components/schemas/OrderByClause"
          },
          "Expression": {
            "description": "Gets the order-by expression.",
            "nullable": true,
            "$ref": "#/components/schemas/SingleValueNode"
          },
          "Direction": {
            "description": "Gets the direction to order.",
            "$ref": "#/components/schemas/OrderByDirection"
          },
          "RangeVariable": {
            "description": "Gets the rangeVariable for the expression which represents a single value from the collection we iterate over.",
            "nullable": true,
            "$ref": "#/components/schemas/RangeVariable"
          },
          "ItemType": {
            "description": "Gets the type of a single item from the collection returned after ordering.",
            "nullable": true,
            "$ref": "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "SkipQueryOption": {
        "type": "object",
        "description": "This defines a $skip OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $skip value.",
            "nullable": true
          },
          "Value": {
            "type": "integer",
            "description": "Gets the value of the $skip as a parsed integer.",
            "format": "int32"
          },
          "Validator": {
            "description": "Gets or sets the Skip Query Validator.",
            "nullable": true,
            "$ref": "#/components/schemas/SkipQueryValidator"
          }
        }
      },
      "SkipQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a SkipQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "SkipTokenQueryOption": {
        "type": "object",
        "description": "This defines a $skiptoken OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $skiptoken value.",
            "nullable": true
          },
          "Context": {
            "description": "Gets and sets the given ODataQueryContext.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "Validator": {
            "description": "Gets or sets the SkipToken Query Validator.",
            "nullable": true,
            "$ref": "#/components/schemas/SkipTokenQueryValidator"
          },
          "QuerySettings": {
            "description": "Gets or sets the query setting ",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQuerySettings"
          },
          "QueryOptions": {
            "description": "Gets or sets the QueryOptions",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryOptions"
          }
        }
      },
      "SkipTokenQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a SkipTokenQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "ODataQuerySettings": {
        "type": "object",
        "description": "This class describes the settings to use during query composition.",
        "additionalProperties": false,
        "properties": {
          "EnsureStableOrdering": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether query composition should\nalter the original query when necessary to ensure a stable sort order."
          },
          "HandleNullPropagation": {
            "description": "Gets or sets a value indicating how null propagation should\nbe handled during query composition.",
            "$ref": "#/components/schemas/HandleNullPropagationOption"
          },
          "EnableConstantParameterization": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants\nwould result in better performance with Entity framework."
          },
          "EnableCorrelatedSubqueryBuffering": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether queries with expanded navigations should be formulated\nto encourage correlated subquery results to be buffered.\nBuffering correlated subquery results can reduce the number of queries from N + 1 to 2\nby buffering results from the subquery."
          },
          "PageSize": {
            "type": "integer",
            "description": "Gets or sets the maximum number of query results to return.",
            "format": "int32",
            "nullable": true
          },
          "HandleReferenceNavigationPropertyExpandFilter": {
            "type": "boolean",
            "description": "Honor $filter inside $expand of non-collection navigation property.\nThe expanded property is only populated when the filter evaluates to true.\nThis setting is false by default."
          }
        }
      },
      "HandleNullPropagationOption": {
        "type": "integer",
        "description": "This enum defines how to handle null propagation in queryable support.\n\n0 = Default\n1 = True\n2 = False",
        "x-enumNames": [
          "Default",
          "True",
          "False"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "TopQueryOption": {
        "type": "object",
        "description": "This defines a $top OData query option for querying.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $top value.",
            "nullable": true
          },
          "Value": {
            "type": "integer",
            "description": "Gets the value of the $top as a parsed integer.",
            "format": "int32"
          },
          "Validator": {
            "description": "Gets or sets the Top Query Validator.",
            "nullable": true,
            "$ref": "#/components/schemas/TopQueryValidator"
          }
        }
      },
      "TopQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a TopQueryOption based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "CountQueryOption": {
        "type": "object",
        "description": "Represents the value of the $count query option and exposes a way to retrieve the number of entities that satisfy a query.",
        "additionalProperties": false,
        "properties": {
          "Context": {
            "description": "Gets the given ODataQueryContext.",
            "nullable": true,
            "$ref": "#/components/schemas/ODataQueryContext"
          },
          "RawValue": {
            "type": "string",
            "description": "Gets the raw $count value.",
            "nullable": true
          },
          "Value": {
            "type": "boolean",
            "description": "Gets the value of the $count in a parsed form."
          },
          "Validator": {
            "description": "Gets or sets the $count query validator.",
            "nullable": true,
            "$ref": "#/components/schemas/CountQueryValidator"
          }
        }
      },
      "CountQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate a CountQueryOption \nbased on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "ODataQueryValidator": {
        "type": "object",
        "description": "Represents a validator used to validate OData queries based on the ODataValidationSettings.",
        "additionalProperties": false
      },
      "SaveResponseOfIAccident": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAccident"
              }
            }
          }
        ]
      },
      "SaveResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ErrorObject": {
                "nullable": true,
                "$ref": "#/components/schemas/BaseResponseError"
              }
            }
          }
        ]
      },
      "BaseResponseError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Error": {
            "nullable": true
          }
        }
      },
      "SaveBodyOfIAccident": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAccident"
          }
        }
      },
      "QueryResponseOfIAccountPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAccountPartIssue"
                }
              }
            }
          }
        ]
      },
      "IAccountPartIssue": {
        "type": "object",
        "description": "AccountPartIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "AccountPartIssue.AccountId\n\nDirect account being charged.  \nVX_ACCOUNTPARTISSUE.AccountId string 125 \n\nSearchable: True ",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "AccountPartIssue.BinId\n\nUsed for the hose for M5 fluids  \nVX_ACCOUNTPARTISSUE.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "AccountPartIssue.Comments\n\nIssue notes  \nVX_ACCOUNTPARTISSUE.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "AccountPartIssue.Cost\n\nTotal value of issue, including tax  \nVX_ACCOUNTPARTISSUE.Cost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AccountPartIssue.Description\n\nPart number description  \nVX_ACCOUNTPARTISSUE.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "AccountPartIssue.EmployeeId\n\nThe employee who issued the part  \nVX_ACCOUNTPARTISSUE.EmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "AccountPartIssue.EmployeeName\n\nThe employee name who issued the part.  \nVX_ACCOUNTPARTISSUE.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "AccountPartIssue.FailureDesc\n\nFailure code description  \nVX_ACCOUNTPARTISSUE.FailureDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "AccountPartIssue.FailureId\n\nFailure code for part  \nVX_ACCOUNTPARTISSUE.FailureId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "AccountPartIssue.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_ACCOUNTPARTISSUE.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "AccountPartIssue.InternalId\n\nDACC_PART_CHG.dacc_part_id  \nVX_ACCOUNTPARTISSUE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "AccountPartIssue.InvoiceDate\n\nInvoice date  \nVX_ACCOUNTPARTISSUE.InvoiceDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "AccountPartIssue.InvoiceNumber\n\nInvoice number for the part issue  \nVX_ACCOUNTPARTISSUE.InvoiceNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "AccountPartIssue.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_ACCOUNTPARTISSUE.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "AccountPartIssue.IsReturnable\n\nIsn't a non-stock part, etc.  \nVX_ACCOUNTPARTISSUE.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "AccountPartIssue.IssueDateTime\n\nIssue Date Time of part  \nVX_ACCOUNTPARTISSUE.IssueDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueLocationDesc": {
            "type": "string",
            "description": "AccountPartIssue.IssueLocationDesc\n\nIssue location description of the part  \nVX_ACCOUNTPARTISSUE.IssueLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueLocationId": {
            "type": "string",
            "description": "AccountPartIssue.IssueLocationId\n\nIssue location of the part  \nVX_ACCOUNTPARTISSUE.IssueLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "AccountPartIssue.IssueQty\n\nQuantity of part issued  \nVX_ACCOUNTPARTISSUE.IssueQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AccountPartIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ACCOUNTPARTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "AccountPartIssue.ManufacturerId\n\nPart manufacturer  \nVX_ACCOUNTPARTISSUE.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "AccountPartIssue.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_ACCOUNTPARTISSUE.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "AccountPartIssue.PartInternalId\n\nPart master's row_id  \nVX_ACCOUNTPARTISSUE.PartInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "AccountPartIssue.PartOrFluid\n\nPART or FLUID  \nVX_ACCOUNTPARTISSUE.PartOrFluid string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "AccountPartIssue.PoLineItem\n\nPO Line number  \nVX_ACCOUNTPARTISSUE.PoLineItem int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "AccountPartIssue.PoNumber\n\nPurchase Order number for the part issue  \nVX_ACCOUNTPARTISSUE.PoNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "AccountPartIssue.ProNumber\n\nPRO Number for part  \nVX_ACCOUNTPARTISSUE.ProNumber string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "AccountPartIssue.ReferenceNumber\n\nReference number for part issue  \nVX_ACCOUNTPARTISSUE.ReferenceNumber string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonComment": {
            "type": "string",
            "description": "AccountPartIssue.ReturnReasonComment\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "AccountPartIssue.Serialized\n\nDid the issued part have a serial number?  \nVX_ACCOUNTPARTISSUE.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "AccountPartIssue.SerialNumber\n\nPart's serial number  \nVX_ACCOUNTPARTISSUE.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "AccountPartIssue.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_ACCOUNTPARTISSUE.UniqueId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "AccountPartIssue.UnitCost\n\nVX_ACCOUNTPARTISSUE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "AccountPartIssue.UnitOfIssue\n\nUnit of issue for part  \nVX_ACCOUNTPARTISSUE.UnitOfIssue string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "AccountPartIssue.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_ACCOUNTPARTISSUE.VendorContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AccountPartIssue.VendorId\n\nVendor number the part was received and issued from  \nVX_ACCOUNTPARTISSUE.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorName": {
            "type": "string",
            "description": "AccountPartIssue.VendorName\n\nVendor name  \nVX_ACCOUNTPARTISSUE.VendorName string 20 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAccountPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccountPartIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccountPartIssue"
              }
            }
          }
        ]
      },
      "ETagOfIAccountPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAccountPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAccountPartIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAccountPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAccountPartIssue"
          }
        }
      },
      "SaveResponseOfListOfIAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAccount"
                }
              }
            }
          }
        ]
      },
      "IAccount": {
        "type": "object",
        "description": "Account",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "Account.AccountId\n\nDirect Account Number  \nVX_ACCOUNT.AccountId string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Account.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  \nVX_ACCOUNT.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AllowAllTasks": {
            "type": "boolean",
            "description": "Account.AllowAllTasks\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowEntityAssignment": {
            "type": "boolean",
            "description": "Account.AllowEntityAssignment\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowPartsIssues": {
            "type": "boolean",
            "description": "Account.AllowPartsIssues\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowPurchaseOrders": {
            "type": "boolean",
            "description": "Account.AllowPurchaseOrders\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Account.Description\n\nDirect Account Number Description  \nVX_ACCOUNT.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Account.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ACCOUNT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIAccount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAccount"
            }
          }
        }
      },
      "QueryResponseOfIAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAccount"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccount"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAccount"
              }
            }
          }
        ]
      },
      "ETagOfIAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAccount"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAccount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAccount"
          }
        }
      },
      "QueryResponseOfIAppointmentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAppointmentRequest"
                }
              }
            }
          }
        ]
      },
      "IAppointmentRequest": {
        "type": "object",
        "description": "AppointmentRequest",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AppointmentEndDateTime": {
            "type": "string",
            "description": "AppointmentRequest.AppointmentEndDateTime\n\nAppointment End Date Time  \nVX_APPOINTMENTREQUEST.AppointmentEndDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AppointmentId": {
            "type": "integer",
            "description": "AppointmentRequest.AppointmentId\n\nMaintenance Appointment Id.  \nVX_APPOINTMENTREQUEST.AppointmentId int 10 \n\nSearchable: True ",
            "format": "int32",
            "nullable": true
          },
          "AppointmentNote": {
            "type": "string",
            "description": "AppointmentRequest.AppointmentNote\n\nAppointment Note  \nVX_APPOINTMENTREQUEST.AppointmentNote string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "AppointmentStartDateTime": {
            "type": "string",
            "description": "AppointmentRequest.AppointmentStartDateTime\n\nAppointment Start Date Time  \nVX_APPOINTMENTREQUEST.AppointmentStartDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AppointmentSubject": {
            "type": "string",
            "description": "AppointmentRequest.AppointmentSubject\n\nAppointment Subject  \nVX_APPOINTMENTREQUEST.AppointmentSubject string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "ApprovedBy": {
            "type": "string",
            "description": "AppointmentRequest.ApprovedBy\n\nPerson approving the request.  \nVX_APPOINTMENTREQUEST.ApprovedBy string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "ApprovedDateTime": {
            "type": "string",
            "description": "AppointmentRequest.ApprovedDateTime\n\nDate and time of request approval.  \nVX_APPOINTMENTREQUEST.ApprovedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "AppointmentRequest.AssetDesc\n\nUnit Number Description  \nVX_APPOINTMENTREQUEST.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "integer",
            "description": "AppointmentRequest.AssetId\n\nUnit Id  \nVX_APPOINTMENTREQUEST.AssetId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CanceledBy": {
            "type": "string",
            "description": "AppointmentRequest.CanceledBy\n\nPerson who cancelled the request.  \nVX_APPOINTMENTREQUEST.CanceledBy string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "CanceledDateTime": {
            "type": "string",
            "description": "AppointmentRequest.CanceledDateTime\n\nDate and time when request was cancelled.  \nVX_APPOINTMENTREQUEST.CanceledDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "AppointmentRequest.ContactEmail\n\nEmail Id of the contact person  \nVX_APPOINTMENTREQUEST.ContactEmail string 128 \n\nSearchable: False ",
            "nullable": true
          },
          "ContactExt": {
            "type": "string",
            "description": "AppointmentRequest.ContactExt\n\nPhone extension of the contact person  \nVX_APPOINTMENTREQUEST.ContactExt string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "AppointmentRequest.ContactName\n\nName of the contact person  \nVX_APPOINTMENTREQUEST.ContactName string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "ContactPhone": {
            "type": "string",
            "description": "AppointmentRequest.ContactPhone\n\nPhone number of the contact person  \nVX_APPOINTMENTREQUEST.ContactPhone string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DeniedBy": {
            "type": "string",
            "description": "AppointmentRequest.DeniedBy\n\nPerson who denied the request  \nVX_APPOINTMENTREQUEST.DeniedBy string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "DeniedDateTime": {
            "type": "string",
            "description": "AppointmentRequest.DeniedDateTime\n\nDate and time of denying the request.  \nVX_APPOINTMENTREQUEST.DeniedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AppointmentRequest.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_APPOINTMENTREQUEST.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "description": "AppointmentRequest.Location\n\nMaintenance Appointment Location  \nVX_APPOINTMENTREQUEST.Location string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "LocationDesc": {
            "type": "string",
            "description": "AppointmentRequest.LocationDesc\n\nMaintenance Appointment Location Description.  \nVX_APPOINTMENTREQUEST.LocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "integer",
            "description": "AppointmentRequest.Meter1Reading\n\nUnit's Meter 1 Reading  \nVX_APPOINTMENTREQUEST.Meter1Reading int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1Type": {
            "type": "string",
            "description": "AppointmentRequest.Meter1Type\n\nUnit's Meter 1 Type  \nVX_APPOINTMENTREQUEST.Meter1Type string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Occurrence": {
            "type": "integer",
            "description": "AppointmentRequest.Occurrence\n\nWork Occurence.  \nVX_APPOINTMENTREQUEST.Occurrence int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "RequestDateTime": {
            "type": "string",
            "description": "AppointmentRequest.RequestDateTime\n\nRequest Date Time  \nVX_APPOINTMENTREQUEST.RequestDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Requestor": {
            "type": "string",
            "description": "AppointmentRequest.Requestor\n\nApplication User Who Requested The Appointment.  \nVX_APPOINTMENTREQUEST.Requestor string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "SchedulerNote": {
            "type": "string",
            "description": "AppointmentRequest.SchedulerNote\n\nScheduler Note.  \nVX_APPOINTMENTREQUEST.SchedulerNote string 2000 \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "integer",
            "description": "AppointmentRequest.ServiceRequestId\n\nWork Request Number.  \nVX_APPOINTMENTREQUEST.ServiceRequestId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "AppointmentRequest.Status\n\nStatus of the appointment.  \nVX_APPOINTMENTREQUEST.Status string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkPlanId": {
            "type": "integer",
            "description": "AppointmentRequest.WorkPlanId\n\nWork Plan Id.  \nVX_APPOINTMENTREQUEST.WorkPlanId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAppointmentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAppointmentRequest"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAppointmentRequest"
              }
            }
          }
        ]
      },
      "ETagOfIAppointmentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAppointmentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAppointmentRequest"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAppointmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAppointmentRequest"
          }
        }
      },
      "SaveResponseOfListOfIAssetAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetAttribute"
                }
              }
            }
          }
        ]
      },
      "IAssetAttribute": {
        "type": "object",
        "description": "AssetAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "AttributeId",
          "Source"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetAttribute.AssetId\n\nAsset number  \nVX_ASSETATTRIBUTE.AssetId string 30 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Attachments": {
            "description": "AssetAttribute.Attachments\n\nItem master's attachments  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "AttributeId": {
            "type": "string",
            "description": "AssetAttribute.AttributeId\n\nItem description  \nVX_ASSETATTRIBUTE.AttributeId string 24 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "AssetAttribute.Comments\n\nType of data value  \nVX_ASSETATTRIBUTE.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "AssetAttribute.DataType\n\nType of data value  \nVX_ASSETATTRIBUTE.DataType string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "AssetAttribute.DisplayOrder\n\nAlphabetical order  \nVX_ASSETATTRIBUTE.DisplayOrder int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "AssetAttribute.HasAttachments\n\nDoes the unit item have attachments?  This is a helper so that the query handler does whether to go through the trouble of digging them out  \nVX_ASSETATTRIBUTE.HasAttachments bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "AssetAttribute.LabelText\n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetAttribute.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MaxValue": {
            "type": "string",
            "description": "AssetAttribute.MaxValue\n\nMaximum value allowed, as a string  \nVX_ASSETATTRIBUTE.MaxValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "MinValue": {
            "type": "string",
            "description": "AssetAttribute.MinValue\n\nMaximum value allowed, as a string  \nVX_ASSETATTRIBUTE.MaxValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "AssetAttribute.Source\n\nASSET, SPEC  \nVX_ASSETATTRIBUTE.Source string  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "AssetAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_ASSETATTRIBUTE.ValidateAgainstList bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ValidateAgainstMinMax": {
            "type": "boolean",
            "description": "AssetAttribute.ValidateAgainstMinMax\n\nRequire entry to be between MinValue and MaxValue?  \nVX_ASSETATTRIBUTE.ValidateAgainstMinMax bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "AssetAttribute.ValidList\n\nList of valid values  \nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "AssetAttribute.Value\n\nItem value  \nVX_ASSETATTRIBUTE.Value string 50 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "AssetAttribute.ValueRequired\n\nIs a value required?  \nVX_ASSETATTRIBUTE.ValueRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Visible": {
            "type": "boolean",
            "description": "AssetAttribute.Visible\n\nVX_ASSETATTRIBUTE.Visible bool  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIAttachment": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAttachment"
            }
          }
        }
      },
      "IAttachment": {
        "type": "object",
        "description": "Attachment",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Path",
          "Source",
          "SourceId"
        ],
        "properties": {
          "AllowDelete": {
            "type": "boolean",
            "description": "Attachment.AllowDelete\n\nCan this attachment be deleted?  \nVX_ATTACHMENT.AllowDelete bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AttachmentType": {
            "type": "string",
            "description": "Attachment.AttachmentType\n\nF = File, L = Link (URL)  \nVX_ATTACHMENT.AttachmentType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Base64String": {
            "type": "string",
            "description": "Attachment.Base64String\n\nbase64 representation of the binary object  \nVX_ATTACHMENT.Base64String string  \n\nSearchable: False ",
            "nullable": true
          },
          "CreateDateTime": {
            "type": "string",
            "description": "Attachment.CreateDateTime\n\nUpload Date  \nVX_ATTACHMENT.CreateDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CreatedUser": {
            "type": "string",
            "description": "Attachment.CreatedUser\n\nUpload User  \nVX_ATTACHMENT.CreatedUser string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "CreatedUserName": {
            "type": "string",
            "description": "Attachment.CreatedUserName\n\nName of the user who created the attachment.  \nVX_ATTACHMENT.CreatedUserName string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Attachment.Description\n\nAttachment description  \nVX_ATTACHMENT.Description string 512 \n\nSearchable: False ",
            "nullable": true
          },
          "FileName": {
            "type": "string",
            "description": "Attachment.FileName\n\nFile name portion of the path, or the URL  \nVX_ATTACHMENT.FileName string 256 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Attachment.InternalId\n\nVX_ATTACHMENT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Attachment.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ATTACHMENT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Attachment.Path\n\nAttachment file or url  \nVX_ATTACHMENT.Path string 256 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "Attachment.Source\n\nInterface model of the attachment, ie. IWorkOrder, IAsset  \nVX_ATTACHMENT.Source string 100 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "SourceDescription": {
            "type": "string",
            "description": "Attachment.SourceDescription\n\nTask description, etc.  \nVX_ATTACHMENT.SourceDescription string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "SourceId": {
            "type": "string",
            "description": "Attachment.SourceId\n\nWorkOrder~Job, AssetId, etc  \nVX_ATTACHMENT.SourceId string 256 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfICustomListValue": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ICustomListValue"
            }
          }
        }
      },
      "ICustomListValue": {
        "type": "object",
        "description": "CustomListValue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "CustomListValue.Description\n\nVX_CUSTOMLISTVALUE.Description string  \n\nSearchable: True ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "CustomListValue.InternalId\n\nVX_CUSTOMLISTVALUE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "ListId": {
            "type": "string",
            "description": "CustomListValue.ListId\n\nVX_CUSTOMLISTVALUE.ListId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "CustomListValue.Value\n\nVX_CUSTOMLISTVALUE.Value string  \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIAssetAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetAttribute"
            }
          }
        }
      },
      "QueryResponseOfIAssetAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAssetAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIAssetAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetAttribute"
          }
        }
      },
      "QueryResponseOfIAssetCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetCategory"
                }
              }
            }
          }
        ]
      },
      "IAssetCategory": {
        "type": "object",
        "description": "AssetCategory",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIAssetCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetCategory"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetCategory"
              }
            }
          }
        ]
      },
      "ETagOfIAssetCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetCategory"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetCategory"
          }
        }
      },
      "QueryResponseOfIAssetChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetChangeLog"
                }
              }
            }
          }
        ]
      },
      "IAssetChangeLog": {
        "type": "object",
        "description": "AssetChangeLog",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "IsNewLifeCycleStatusId": {
            "type": "boolean",
            "description": "AssetChangeLog.IsNewLifeCycleStatusId\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "LifeCycleStatusId": {
            "type": "string",
            "description": "AssetChangeLog.LifeCycleStatusId\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetChangeLog"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetChangeLog"
              }
            }
          }
        ]
      },
      "ETagOfIAssetChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetChangeLog"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetChangeLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetChangeLog"
          }
        }
      },
      "QueryResponseOfIAssetClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetClass"
                }
              }
            }
          }
        ]
      },
      "IAssetClass": {
        "type": "object",
        "description": "AssetClass",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "IsMaintenanceClass": {
            "type": "boolean",
            "description": "AssetClass.IsMaintenanceClass\n\n.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetClass.LastChangedDateTime\n\nLast changed date and time on main record.  \n.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetClass"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetClass"
              }
            }
          }
        ]
      },
      "ETagOfIAssetClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetClass"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetClass"
          }
        }
      },
      "QueryResponseOfIAssetComponentWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetComponentWarranty"
                }
              }
            }
          }
        ]
      },
      "IAssetComponentWarranty": {
        "type": "object",
        "description": "AssetComponentWarranty",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetComponentWarranty.AssetId\n\nUnit number for the warranty  \nVX_ASSETCOMPONENTWARRANTY.AssetId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetComponentWarranty.Description\n\nDescription of system assembly code  \nVX_ASSETCOMPONENTWARRANTY.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Duration": {
            "type": "number",
            "description": "AssetComponentWarranty.Duration\n\nDuration in months  \nVX_ASSETCOMPONENTWARRANTY.Duration decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ExclusiveWarranty": {
            "type": "boolean",
            "description": "AssetComponentWarranty.ExclusiveWarranty\n\nDoes this override high-level warranties, so that when this expires, higher-level ones don't apply? M5 screens say 'Excludes' for this.  \nVX_ASSETCOMPONENTWARRANTY.ExclusiveWarranty bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ExpireDate": {
            "type": "string",
            "description": "AssetComponentWarranty.ExpireDate\n\nDate warranty expires  \nVX_ASSETCOMPONENTWARRANTY.ExpireDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ExpireUsage": {
            "type": "integer",
            "description": "AssetComponentWarranty.ExpireUsage\n\nUsage warranty expires  \nVX_ASSETCOMPONENTWARRANTY.ExpireUsage long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetComponentWarranty.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETCOMPONENTWARRANTY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SystemAssemblyId": {
            "type": "string",
            "description": "AssetComponentWarranty.SystemAssemblyId\n\nSystem or System Assembly code  \nVX_ASSETCOMPONENTWARRANTY.SystemAssemblyId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "Usage": {
            "type": "number",
            "description": "AssetComponentWarranty.Usage\n\nAmount of usage in meter1 before it expires  \nVX_ASSETCOMPONENTWARRANTY.Usage decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "AssetComponentWarranty.VendorDesc\n\nVendor short name  \nVX_ASSETCOMPONENTWARRANTY.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AssetComponentWarranty.VendorId\n\nVendor for the warranty  \nVX_ASSETCOMPONENTWARRANTY.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyType": {
            "type": "string",
            "description": "AssetComponentWarranty.WarrantyType\n\nM5 Forced to: \"SUB-UNIT\" \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetComponentWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetComponentWarranty"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetComponentWarranty"
              }
            }
          }
        ]
      },
      "ETagOfIAssetComponentWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetComponentWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetComponentWarranty"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetComponentWarranty": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetComponentWarranty"
          }
        }
      },
      "SaveResponseOfListOfIAssetCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetCreditCard"
                }
              }
            }
          }
        ]
      },
      "IAssetCreditCard": {
        "type": "object",
        "description": "AssetCreditCard",
        "x-abstract": true,
        "additionalProperties": false
      },
      "SaveBodyOfListOfIAssetCreditCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetCreditCard"
            }
          }
        }
      },
      "QueryResponseOfIAssetCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetCreditCard"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAssetCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetCreditCard"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetCreditCard"
              }
            }
          }
        ]
      },
      "ETagOfIAssetCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetCreditCard"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetCreditCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetCreditCard"
          }
        }
      },
      "QueryResponseOfIAssetHistoryByMonth": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetHistoryByMonth"
                }
              }
            }
          }
        ]
      },
      "IAssetHistoryByMonth": {
        "type": "object",
        "description": "AssetHistoryByMonth",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetHistoryByMonth.AssetId\n\nUnit number  \nVX_ASSETHISTORYBYMONTH.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetInternalId": {
            "type": "integer",
            "description": "AssetHistoryByMonth.AssetInternalId\n\nInternal unit ID  \nVX_ASSETHISTORYBYMONTH.AssetInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "CalendarMonth": {
            "type": "integer",
            "description": "AssetHistoryByMonth.CalendarMonth\n\nCalendar month  \nVX_ASSETHISTORYBYMONTH.CalendarMonth long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "CalendarYear": {
            "type": "integer",
            "description": "AssetHistoryByMonth.CalendarYear\n\nCalendar year  \nVX_ASSETHISTORYBYMONTH.CalendarYear long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "CommercialCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.CommercialCost\n\nCommercial charge cost  \nVX_ASSETHISTORYBYMONTH.CommercialCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DepreciationValue": {
            "type": "number",
            "description": "AssetHistoryByMonth.DepreciationValue\n\nMonth's depreciation amount  \nVX_ASSETHISTORYBYMONTH.DepreciationValue decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DowntimeShopHours": {
            "type": "number",
            "description": "AssetHistoryByMonth.DowntimeShopHours\n\nDowntime hours according to the maintenance location's shift  \nVX_ASSETHISTORYBYMONTH.DowntimeShopHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DowntimeUserHours": {
            "type": "number",
            "description": "AssetHistoryByMonth.DowntimeUserHours\n\nDowntime hours according to the unit's shift, maintenance downtime  \nVX_ASSETHISTORYBYMONTH.DowntimeUserHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ElectricFuelCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.ElectricFuelCost\n\nElectric fuel cost  \nVX_ASSETHISTORYBYMONTH.ElectricFuelCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ElectricFuelQty": {
            "type": "number",
            "description": "AssetHistoryByMonth.ElectricFuelQty\n\nElectric fuel quantity  \nVX_ASSETHISTORYBYMONTH.ElectricFuelQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FiscalMonth": {
            "type": "integer",
            "description": "AssetHistoryByMonth.FiscalMonth\n\nFiscal month  \nVX_ASSETHISTORYBYMONTH.FiscalMonth long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "FiscalYear": {
            "type": "integer",
            "description": "AssetHistoryByMonth.FiscalYear\n\nFiscal year  \nVX_ASSETHISTORYBYMONTH.FiscalYear long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "FuelCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.FuelCost\n\nFuel cost  \nVX_ASSETHISTORYBYMONTH.FuelCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FuelQty": {
            "type": "number",
            "description": "AssetHistoryByMonth.FuelQty\n\nFuel quantity  \nVX_ASSETHISTORYBYMONTH.FuelQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.LaborCost\n\nLabor charge cost  \nVX_ASSETHISTORYBYMONTH.LaborCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "AssetHistoryByMonth.LaborHours\n\nLabor charge hours  \nVX_ASSETHISTORYBYMONTH.LaborHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MaintenanceCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.MaintenanceCost\n\nTotal maintenance cost  \nVX_ASSETHISTORYBYMONTH.MaintenanceCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter1Usage": {
            "type": "number",
            "description": "AssetHistoryByMonth.Meter1Usage\n\nUsage on first meter  \nVX_ASSETHISTORYBYMONTH.Meter1Usage decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter2Usage": {
            "type": "number",
            "description": "AssetHistoryByMonth.Meter2Usage\n\nUsage on second meter  \nVX_ASSETHISTORYBYMONTH.Meter2Usage decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.MiscellaneousCost\n\nMiscellaneous cost  \nVX_ASSETHISTORYBYMONTH.MiscellaneousCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OilCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.OilCost\n\nOil cost  \nVX_ASSETHISTORYBYMONTH.OilCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OilQty": {
            "type": "number",
            "description": "AssetHistoryByMonth.OilQty\n\nOil quantity  \nVX_ASSETHISTORYBYMONTH.OilQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartCost": {
            "type": "number",
            "description": "AssetHistoryByMonth.PartCost\n\nPart charge cost  \nVX_ASSETHISTORYBYMONTH.PartCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderCount": {
            "type": "integer",
            "description": "AssetHistoryByMonth.WorkOrderCount\n\nNumber of work orders opened  \nVX_ASSETHISTORYBYMONTH.WorkOrderCount long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetHistoryByMonth": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetHistoryByMonth"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetHistoryByMonth"
              }
            }
          }
        ]
      },
      "ETagOfIAssetHistoryByMonth": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetHistoryByMonth": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetHistoryByMonth"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetHistoryByMonth": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetHistoryByMonth"
          }
        }
      },
      "QueryResponseOfIAssetMake": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetMake"
                }
              }
            }
          }
        ]
      },
      "IAssetMake": {
        "type": "object",
        "description": "AssetMake",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "AssetMake.Active\n\nVX_ASSETMAKE.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetMakeId": {
            "type": "string",
            "description": "AssetMake.AssetMakeId\n\nMake ID  \nVX_ASSETMAKE.AssetMakeId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetManufacturerId": {
            "type": "string",
            "description": "AssetMake.AssetManufacturerId\n\nManufacturer ID  \nVX_ASSETMAKE.AssetManufacturerId string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetMake.Description\n\nM5 doesn't have a separate description; this is the code again  \nVX_ASSETMAKE.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetMake.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETMAKE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetMake": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetMake"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetMake"
              }
            }
          }
        ]
      },
      "ETagOfIAssetMake": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetMake": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetMake"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetMake": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetMake"
          }
        }
      },
      "QueryResponseOfIAssetManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetManufacturer"
                }
              }
            }
          }
        ]
      },
      "IAssetManufacturer": {
        "type": "object",
        "description": "AssetManufacturer",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "AssetManufacturer.Active\n\nVX_ASSETMANUFACTURER.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetManufacturerId": {
            "type": "string",
            "description": "AssetManufacturer.AssetManufacturerId\n\nManufacturer ID  \nVX_ASSETMANUFACTURER.AssetManufacturerId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetManufacturer.Description\n\nM5 doesn't have a separate description; this is the code again  \nVX_ASSETMANUFACTURER.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetManufacturer.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETMANUFACTURER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetManufacturer"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetManufacturer"
              }
            }
          }
        ]
      },
      "ETagOfIAssetManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetManufacturer"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetManufacturer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetManufacturer"
          }
        }
      },
      "QueryResponseOfIAssetModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetModel"
                }
              }
            }
          }
        ]
      },
      "IAssetModel": {
        "type": "object",
        "description": "AssetModel",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "AssetModel.Active\n\nVX_ASSETMODEL.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetMakeId": {
            "type": "string",
            "description": "AssetModel.AssetMakeId\n\nMake ID  \nVX_ASSETMODEL.AssetMakeId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetManufacturerId": {
            "type": "string",
            "description": "AssetModel.AssetManufacturerId\n\nManufacturer ID  \nVX_ASSETMODEL.AssetManufacturerId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetModelId": {
            "type": "string",
            "description": "AssetModel.AssetModelId\n\nModel ID  \nVX_ASSETMODEL.AssetModelId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetModel.Description\n\nM5 doesn't have a separate description; this is the code again  \nVX_ASSETMODEL.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetModel.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETMODEL.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetModel"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetModel"
              }
            }
          }
        ]
      },
      "ETagOfIAssetModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetModel"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetModel"
          }
        }
      },
      "SaveResponseOfListOfIAssetPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPartIssue"
                }
              }
            }
          }
        ]
      },
      "IAssetPartIssue": {
        "type": "object",
        "description": "AssetPartIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetPartIssue.AssetId\n\nUnit number  \nVX_ASSETPARTISSUE.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetInternalId": {
            "type": "integer",
            "description": "AssetPartIssue.AssetInternalId\n\nInternal unit ID  \nVX_ASSETPARTISSUE.AssetInternalId long 30 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "AssetPartIssue.BinId\n\nUsed for the hose for M5 fluids  \nVX_ASSETPARTISSUE.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "AssetPartIssue.Comments\n\nIssue notes  \nVX_ASSETPARTISSUE.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "CoreCost": {
            "type": "number",
            "description": "AssetPartIssue.CoreCost\n\nCore cost  \nVX_ASSETPARTISSUE.CoreCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "AssetPartIssue.Cost\n\nTotal value of issue, including tax  \nVX_ASSETPARTISSUE.Cost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DiscountPct": {
            "type": "number",
            "description": "AssetPartIssue.DiscountPct\n\nPart discount percent  \nVX_ASSETPARTISSUE.DiscountPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "AssetPartIssue.EmployeeId\n\nThe employee who issued the part  \nVX_ASSETPARTISSUE.EmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "AssetPartIssue.EmployeeName\n\nThe employee name who issued the part.  \nVX_ASSETPARTISSUE.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "AssetPartIssue.FailureDesc\n\nFailure code description  \nVX_ASSETPARTISSUE.FailureDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "AssetPartIssue.FailureId\n\nFailure code for part  \nVX_ASSETPARTISSUE.FailureId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "AssetPartIssue.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_ASSETPARTISSUE.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "HasCoreCharge": {
            "type": "boolean",
            "description": "AssetPartIssue.HasCoreCharge\n\nFlag to denote if the core cost is added to the total cost  \nVX_ASSETPARTISSUE.HasCoreCharge bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "AssetPartIssue.InternalId\n\nUNIT_PART_CHG.unit_part_chg_id  \nVX_ASSETPARTISSUE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "AssetPartIssue.InvoiceDate\n\nInvoice date  \nVX_ASSETPARTISSUE.InvoiceDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "AssetPartIssue.InvoiceNumber\n\nInvoice number for the part issue  \nVX_ASSETPARTISSUE.InvoiceNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "AssetPartIssue.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_ASSETPARTISSUE.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "AssetPartIssue.IsReturnable\n\nIsn't a non-stock part, etc.  \nVX_ASSETPARTISSUE.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "AssetPartIssue.IssueDateTime\n\nIssue Date Time of part  \nVX_ASSETPARTISSUE.IssueDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueLocationDesc": {
            "type": "string",
            "description": "AssetPartIssue.IssueLocationDesc\n\nIssue location description of the part  \nVX_ASSETPARTISSUE.IssueLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueLocationId": {
            "type": "string",
            "description": "AssetPartIssue.IssueLocationId\n\nIssue location of the part  \nVX_ASSETPARTISSUE.IssueLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "AssetPartIssue.IssueQty\n\nQuantity of part issued  \nVX_ASSETPARTISSUE.IssueQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IssueTicketNumber": {
            "type": "string",
            "description": "AssetPartIssue.IssueTicketNumber\n\nIssue ticket number  \nVX_ASSETPARTISSUE.IssueTicketNumber string  \n\nSearchable: True ",
            "nullable": true
          },
          "IsWarrantyViolation": {
            "type": "boolean",
            "description": "AssetPartIssue.IsWarrantyViolation\n\nWas the part issued due to a warranty violation?  \nVX_ASSETPARTISSUE.IsWarrantyViolation bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetPartIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETPARTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "AssetPartIssue.ManufacturerId\n\nPart manufacturer  \nVX_ASSETPARTISSUE.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "NewSerialNumbers": {
            "description": "AssetPartIssue.NewSerialNumbers\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "PartDesc": {
            "type": "string",
            "description": "AssetPartIssue.PartDesc\n\nPart number description  \nVX_ASSETPARTISSUE.PartDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "AssetPartIssue.PartDescLanguage1\n\nPart number description, primary language  \nVX_ASSETPARTISSUE.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "AssetPartIssue.PartDescLanguage2\n\nPart number description, second language  \nVX_ASSETPARTISSUE.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "AssetPartIssue.PartDescLanguage3\n\nPart number description, third language  \nVX_ASSETPARTISSUE.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "AssetPartIssue.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_ASSETPARTISSUE.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "AssetPartIssue.PartInternalId\n\nPart master's row_id  \nVX_ASSETPARTISSUE.PartInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "AssetPartIssue.PartOrFluid\n\nPART or FLUID  \nVX_ASSETPARTISSUE.PartOrFluid string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoItem": {
            "type": "string",
            "description": "AssetPartIssue.PoItem\n\nPO Item  \nVX_ASSETPARTISSUE.PoItem string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "AssetPartIssue.PoLineItem\n\nPO Line number  \nVX_ASSETPARTISSUE.PoLineItem int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "AssetPartIssue.PoNumber\n\nPurchase Order number for the part issue  \nVX_ASSETPARTISSUE.PoNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDesc": {
            "type": "string",
            "description": "AssetPartIssue.PositionDesc\n\nPosition Code Description  \nVX_ASSETPARTISSUE.PositionDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage1": {
            "type": "string",
            "description": "AssetPartIssue.PositionDescLanguage1\n\nPosition description, primary language  \nVX_ASSETPARTISSUE.PositionDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage2": {
            "type": "string",
            "description": "AssetPartIssue.PositionDescLanguage2\n\nPosition description, second language  \nVX_ASSETPARTISSUE.PositionDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage3": {
            "type": "string",
            "description": "AssetPartIssue.PositionDescLanguage3\n\nPosition description, third language  \nVX_ASSETPARTISSUE.PositionDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "AssetPartIssue.PositionId\n\nPositon Code  \nVX_ASSETPARTISSUE.PositionId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "AssetPartIssue.ProNumber\n\nPRO Number for part  \nVX_ASSETPARTISSUE.ProNumber string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "AssetPartIssue.ReferenceNumber\n\nReference number for part issue  \nVX_ASSETPARTISSUE.ReferenceNumber string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonComment": {
            "type": "string",
            "description": "AssetPartIssue.ReturnReasonComment\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonDesc": {
            "type": "string",
            "description": "AssetPartIssue.ReturnReasonDesc\n\nReturn reason's description  \nVX_ASSETPARTISSUE.ReturnReasonDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonId": {
            "type": "string",
            "description": "AssetPartIssue.ReturnReasonId\n\nReturn reason code  \nVX_ASSETPARTISSUE.ReturnReasonId string 4 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonStatus": {
            "type": "string",
            "description": "AssetPartIssue.ReturnReasonStatus\n\nNull for M5 because there's no return-request; it just happens  \nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "AssetPartIssue.Serialized\n\nDid the issued part have a serial number?  \nVX_ASSETPARTISSUE.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "AssetPartIssue.SerialNumber\n\nPart's serial number  \nVX_ASSETPARTISSUE.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "AssetPartIssue.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_ASSETPARTISSUE.UniqueId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "AssetPartIssue.UnitCost\n\nVX_ASSETPARTISSUE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "AssetPartIssue.UnitOfIssue\n\nUnit of issue for part  \nVX_ASSETPARTISSUE.UnitOfIssue string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "AssetPartIssue.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_ASSETPARTISSUE.VendorContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AssetPartIssue.VendorId\n\nVendor number the part was received and issued from  \nVX_ASSETPARTISSUE.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorName": {
            "type": "string",
            "description": "AssetPartIssue.VendorName\n\nVendor name  \nVX_ASSETPARTISSUE.VendorName string 20 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPartSerialNumber": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartSerialNumber"
            }
          }
        }
      },
      "IPartSerialNumber": {
        "type": "object",
        "description": "PartSerialNumber",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "PartSerialNumber.Active\n\nIndicator if serial number for part is active or not.  \nVX_PARTSERIALNUMBER.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "BaseStatus": {
            "type": "string",
            "description": "PartSerialNumber.BaseStatus\n\nWhether in stock or installed, etc. Values = DISPOSED, INSTALLED, IN-TRANSIT, INACTIVE, STOCKED  \nVX_PARTSERIALNUMBER.BaseStatus string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "PartSerialNumber.CreatedDateTime\n\nWhen the part was first known to the system  \nVX_PARTSERIALNUMBER.CreatedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FromLocationDesc": {
            "type": "string",
            "description": "PartSerialNumber.FromLocationDesc\n\nLocation it's coming from  \nVX_PARTSERIALNUMBER.FromLocationDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "FromLocationId": {
            "type": "string",
            "description": "PartSerialNumber.FromLocationId\n\nLocation transferred from  \nVX_PARTSERIALNUMBER.FromLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "InstalledDateTime": {
            "type": "string",
            "description": "PartSerialNumber.InstalledDateTime\n\nWhen installed on the asset  \nVX_PARTSERIALNUMBER.InstalledDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InstalledOnAssetDesc": {
            "type": "string",
            "description": "PartSerialNumber.InstalledOnAssetDesc\n\nAsset it's installed on  \nVX_PARTSERIALNUMBER.InstalledOnAssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "InstalledOnAssetId": {
            "type": "string",
            "description": "PartSerialNumber.InstalledOnAssetId\n\nIf status = INSTALLED, the unit it's installed on  \nVX_PARTSERIALNUMBER.InstalledOnAssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartSerialNumber.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTESERIALNUMBER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PartSerialNumber.LocationId\n\nIf status is STOCKED, where it is  \nVX_PARTSERIALNUMBER.LocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartSerialNumber.PartId\n\nPart Number  \nVX_PARTSERIALNUMBER.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "string",
            "description": "PartSerialNumber.PartSeq\n\nInternal part ID  \nVX_PARTESERIALNUMBER.PartSeq int  \n\nSearchable: False ",
            "nullable": true
          },
          "PartTransferId": {
            "type": "string",
            "description": "PartSerialNumber.PartTransferId\n\nInternal transfer ID, not ticket number  \nVX_PARTTRANSFERLINE.PartTransferId int  \n\nSearchable: True ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "PartSerialNumber.SerialNumber\n\nPart Serial Number  \nVX_PARTSERIALNUMBER.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "PartSerialNumber.Status\n\nINSTALLED, INVENTORY, IN TRANSFER  \nVX_PARTSERIALNUMBER.Status string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "ToLocationDesc": {
            "type": "string",
            "description": "PartSerialNumber.ToLocationDesc\n\nLocation it's going to  \nVX_PARTSERIALNUMBER.ToLocationDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "ToLocationId": {
            "type": "string",
            "description": "PartSerialNumber.ToLocationId\n\nLocation transferred to  \nVX_PARTSERIALNUMBER.ToLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TransferDateTime": {
            "type": "string",
            "description": "PartSerialNumber.TransferDateTime\n\nWhen transferred  \nVX_PARTSERIALNUMBER.TransferDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PartSerialNumber.VendorDesc\n\nVendor description  \nVX_PARTSERIALNUMBER.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PartSerialNumber.VendorId\n\nPart's vendor  \nVX_PARTSERIALNUMBER.VendorId string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIAssetPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetPartIssue"
            }
          }
        }
      },
      "QueryResponseOfIAssetPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPartIssue"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAssetPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPartIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPartIssue"
              }
            }
          }
        ]
      },
      "ETagOfIAssetPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetPartIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetPartIssue"
          }
        }
      },
      "QueryResponseOfIAssetPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPartUsed"
                }
              }
            }
          }
        ]
      },
      "IAssetPartUsed": {
        "type": "object",
        "description": "AssetPartUsed",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetPartUsed.AssetId\n\nEquipment number  \nVX_ASSETPARTSUSED.AssetId string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "KeywordId": {
            "type": "string",
            "description": "AssetPartUsed.KeywordId\n\nStoring Job code in the keyword  \nVX_ASSETPARTSUSED.KeywordId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "AssetPartUsed.ManufacturerId\n\nPart manufacturer  \nVX_ASSETPARTSUSED.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "type": "string",
            "description": "AssetPartUsed.ManufacturerPartNumber\n\nPart xref number  \nVX_ASSETPARTSUSED.ManufacturerPartNumber string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "AssetPartUsed.PartDesc\n\nThe part description  \nVX_ASSETPARTSUSED.PartDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "AssetPartUsed.PartDescLanguage1\n\nPart description, primary language  \nVX_ASSETPARTSUSED.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "AssetPartUsed.PartDescLanguage2\n\nPart description, second language  \nVX_ASSETPARTSUSED.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "AssetPartUsed.PartDescLanguage3\n\nPart description, third language  \nVX_ASSETPARTSUSED.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "AssetPartUsed.PartId\n\nPart Number  \nVX_ASSETPARTSUSED.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "description": "AssetPartUsed.Qty\n\nQuantity issued  \nVX_ASSETPARTSUSED.Qty double 10 \n\nSearchable: False ",
            "format": "double",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPartUsed"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPartUsed"
              }
            }
          }
        ]
      },
      "ETagOfIAssetPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetPartUsed"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetPartUsed": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetPartUsed"
          }
        }
      },
      "QueryResponseOfIAssetPmInspection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPmInspection"
                }
              }
            }
          }
        ]
      },
      "IAssetPmInspection": {
        "type": "object",
        "description": "AssetPmInspection",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIAssetPmInspection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPmInspection"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPmInspection"
              }
            }
          }
        ]
      },
      "ETagOfIAssetPmInspection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetPmInspection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetPmInspection"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetPmInspection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetPmInspection"
          }
        }
      },
      "QueryResponseOfIAssetPmService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPmService"
                }
              }
            }
          }
        ]
      },
      "IAssetPmService": {
        "type": "object",
        "description": "AssetPmService",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIAssetPmService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPmService"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPmService"
              }
            }
          }
        ]
      },
      "ETagOfIAssetPmService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetPmService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetPmService"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetPmService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetPmService"
          }
        }
      },
      "QueryResponseOfIAssetPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPosition"
                }
              }
            }
          }
        ]
      },
      "IAssetPosition": {
        "type": "object",
        "description": "AssetPosition",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "Latitude",
          "Longitude"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetPosition.AssetId\n\nAsset number  \nVX_ASSETPOSITION.AssetId string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "DataSource": {
            "type": "string",
            "description": "AssetPosition.DataSource\n\nSource  \nVX_ASSETPOSITION.DataSource string 25 \n\nSearchable: False ",
            "nullable": true
          },
          "EffectiveDateTime": {
            "type": "string",
            "description": "AssetPosition.EffectiveDateTime\n\nVX_ASSETPOSITION.EffectiveDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Latitude": {
            "type": "string",
            "description": "AssetPosition.Latitude\n\nLatitude value of Unit  \nVX_ASSETPOSITION.Latitude string 24 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "Longitude": {
            "type": "string",
            "description": "AssetPosition.Longitude\n\nLongitude value of Unit  \nVX_ASSETPOSITION.Longitude string 24 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPosition"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetPosition"
              }
            }
          }
        ]
      },
      "ETagOfIAssetPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetPosition"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetPosition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetPosition"
          }
        }
      },
      "SaveResponseOfListOfIAssetPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetPosition"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIAssetPosition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetPosition"
            }
          }
        }
      },
      "SaveResponseOfListOfIAssetProductIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetProductIssue"
                }
              }
            }
          }
        ]
      },
      "IAssetProductIssue": {
        "type": "object",
        "description": "AssetProductIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "AssetInternalId",
          "IssueDateTime",
          "IssueQty",
          "LocationId",
          "PoNumber",
          "ProductId",
          "VendorId"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetProductIssue.AssetId\n\nUnit number  \nVX_ASSETPRODUCTISSUE.AssetId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "AssetInternalId": {
            "type": "integer",
            "description": "AssetProductIssue.AssetInternalId\n\nInternal unit ID  \nVX_ASSETPRODUCTISSUE.AssetInternalId long  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "int64",
            "nullable": true
          },
          "CardNumber": {
            "type": "string",
            "description": "AssetProductIssue.CardNumber\n\nFuel card number  \nVX_ASSETPRODUCTISSUE.CardNumber string 25 \n\nSearchable: False ",
            "nullable": true
          },
          "ConnectionType": {
            "type": "string",
            "description": "AssetProductIssue.ConnectionType\n\nPhysical plug type used for the session: NEMA 5-20R, Type 1, Type 2 Socket, Type 2 Cable Attached, CCS Combo Type 1, CCS Combo Type 2, CHAdeMO, Tesla, ETC.  \nVX_ASSETPRODUCTISSUE.ConnectionType string  \n\nSearchable: False ",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "AssetProductIssue.Cost\n\nTotal value of issue, including tax  \nVX_ASSETPRODUCTISSUE.Cost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "AssetProductIssue.CreatedDateTime\n\nWhen the transaction was inserted  \nVX_ASSETPRODUCTISSUE.CreatedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "AssetProductIssue.EmployeeId\n\nThe employee who issued the fuel  \nVX_ASSETPRODUCTISSUE.EmployeeId string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "AssetProductIssue.EmployeeName\n\nThe employee name who issued the fuel  \nVX_ASSETPRODUCTISSUE.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "EndDateTime": {
            "type": "string",
            "description": "AssetProductIssue.EndDateTime\n\nWhen charging session ended  \nVX_ASSETPRODUCTISSUE.EndDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ExternalTransactionId": {
            "type": "integer",
            "description": "AssetProductIssue.ExternalTransactionId\n\nOther system's transaction ID  \nVX_ASSETPRODUCTISSUE.ExternalTransactionId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "AssetProductIssue.FromStock\n\nFrom internal tanks?  \nVX_ASSETPRODUCTISSUE.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "FuelCost": {
            "type": "number",
            "description": "AssetProductIssue.FuelCost\n\nTotal value of issue, including tax  \nVX_ASSETPRODUCTISSUE.Cost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FuelingSeconds": {
            "type": "integer",
            "description": "AssetProductIssue.FuelingSeconds\n\nTotal time that the vehicle was charging during the session or fueling  \nVX_ASSETPRODUCTISSUE.FuelingSeconds int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "HoseId": {
            "type": "string",
            "description": "AssetProductIssue.HoseId\n\nHose number converted to string  \nVX_ASSETPRODUCTISSUE.HoseId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "AssetProductIssue.InternalId\n\nf_unit_prod_chg.f_unit_chg_id  \nVX_ASSETPRODUCTISSUE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "AssetProductIssue.InvoiceNumber\n\nInvoice number for the product issue  \nVX_ASSETPRODUCTISSUE.InvoiceNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "AssetProductIssue.IsReturn\n\nWrite-only:  When set to true, this tells the server to treat it like a return  \nVX_ASSETPRODUCTISSUE.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "AssetProductIssue.IsReturnable\n\nCan it be reversed?  \nVX_ASSETPRODUCTISSUE.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "AssetProductIssue.IssueDateTime\n\nDate and time fluid was issued.  \nVX_ASSETPRODUCTISSUE.IssueDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "AssetProductIssue.IssueQty\n\nQuantity issued  \nVX_ASSETPRODUCTISSUE.IssueQty decimal  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetProductIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETPRODUCTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LicenseNumber": {
            "type": "string",
            "description": "AssetProductIssue.LicenseNumber\n\nLicense Number  \nVX_ASSETPRODUCTISSUE.LicenseNumber string 17 \n\nSearchable: True ",
            "nullable": true
          },
          "LocationDesc": {
            "type": "string",
            "description": "AssetProductIssue.LocationDesc\n\nDescription of location responsible for the fluid  \nVX_ASSETPRODUCTISSUE.LocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "AssetProductIssue.LocationId\n\nIssuing location if from stock, or responsible location  \nVX_ASSETPRODUCTISSUE.LocationId string 6 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "MerchantAddress": {
            "type": "string",
            "description": "AssetProductIssue.MerchantAddress\n\nCommercial merchant address  \nVX_ASSETPRODUCTISSUE.MerchantAddress string  \n\nSearchable: False ",
            "nullable": true
          },
          "MerchantId": {
            "type": "string",
            "description": "AssetProductIssue.MerchantId\n\nCommercial merchant ID  \nVX_ASSETPRODUCTISSUE.MerchantId string  \n\nSearchable: False ",
            "nullable": true
          },
          "MerchantName": {
            "type": "string",
            "description": "AssetProductIssue.MerchantName\n\nCommercial merchant name  \nVX_ASSETPRODUCTISSUE.MerchantName string  \n\nSearchable: False ",
            "nullable": true
          },
          "MerchantPostalCode": {
            "type": "string",
            "description": "AssetProductIssue.MerchantPostalCode\n\nCommercial merchant postal/ZIP code  \nVX_ASSETPRODUCTISSUE.MerchantPostalCode string  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1Good": {
            "type": "boolean",
            "description": "AssetProductIssue.Meter1Good\n\nWas meter1 valid and accepted?  \nVX_ASSETPRODUCTISSUE.Meter1Good bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "number",
            "description": "AssetProductIssue.Meter1Reading\n\nNew first meter reading, accepted or not  \nVX_ASSETPRODUCTISSUE.Meter1Reading decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter1TypeId": {
            "type": "string",
            "description": "AssetProductIssue.Meter1TypeId\n\nMiles, Hours, Kilometers, Count, No Meter  \nVX_ASSETPRODUCTISSUE.Meter1TypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2Good": {
            "type": "boolean",
            "description": "AssetProductIssue.Meter2Good\n\nWas meter 2 valid and accepted?  \nVX_ASSETPRODUCTISSUE.Meter2Good bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2Reading": {
            "type": "number",
            "description": "AssetProductIssue.Meter2Reading\n\nNew second meter reading, accepted or not  \nVX_ASSETPRODUCTISSUE.Meter2Reading decimal 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter2TypeId": {
            "type": "string",
            "description": "AssetProductIssue.Meter2TypeId\n\nMiles, Hours, Kilometers, Count, No Meter  \nVX_ASSETPRODUCTISSUE.Meter2TypeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "AssetProductIssue.PoNumber\n\nPurchase Order number for the product issue  \nVX_ASSETPRODUCTISSUE.PoNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ProductDesc": {
            "type": "string",
            "description": "AssetProductIssue.ProductDesc\n\nFluid description  \nVX_ASSETPRODUCTISSUE.ProductDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductDescLanguage1": {
            "type": "string",
            "description": "AssetProductIssue.ProductDescLanguage1\n\nFluid description, primary language  \nVX_ASSETPRODUCTISSUE.ProductDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductDescLanguage2": {
            "type": "string",
            "description": "AssetProductIssue.ProductDescLanguage2\n\nFluid description, second language  \nVX_ASSETPRODUCTISSUE.ProductDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductDescLanguage3": {
            "type": "string",
            "description": "AssetProductIssue.ProductDescLanguage3\n\nFluid description, third language  \nVX_ASSETPRODUCTISSUE.ProductDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "description": "AssetProductIssue.ProductId\n\nProduct/fluid/fuel code  \nVX_ASSETPRODUCTISSUE.ProductId string 2 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ProductTypeId": {
            "type": "string",
            "description": "AssetProductIssue.ProductTypeId\n\nProduct type  \nVX_ASSETPRODUCT.ProductTypeId string 2 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "AssetProductIssue.ReferenceNumber\n\nReference number  \nVX_ASSETPRODUCTISSUE.ReferenceNumber string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "AssetProductIssue.SerialNumber\n\nSerial number or VIN of the asset  \nVX_ASSETPRODUCTISSUE.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "description": "AssetProductIssue.StartDateTime\n\nWhen charging session began  \nVX_ASSETPRODUCTISSUE.StartDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "StateProvince": {
            "type": "string",
            "description": "AssetProductIssue.StateProvince\n\nState/province related to fueling, such as for tax purposes  \nVX_ASSETPRODUCTISSUE.StateProvince string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TankId": {
            "type": "string",
            "description": "AssetProductIssue.TankId\n\nTank number connected to the hose  \nVX_ASSETPRODUCTISSUE.TankId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "Tax": {
            "type": "number",
            "description": "AssetProductIssue.Tax\n\nTax amount, all sources  \nVX_ASSETPRODUCTISSUE.Tax decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "AssetProductIssue.UnitCost\n\nUnit price  \nVX_ASSETPRODUCTISSUE.UnitCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "AssetProductIssue.UnitOfIssue\n\nUnit of issue for fluid  \nVX_ASSETPRODUCTISSUE.UnitOfIssue string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "UserData1": {
            "type": "string",
            "description": "AssetProductIssue.UserData1\n\nCustomer-specific data 1  \nVX_ASSETPRODUCTISSUE.UserData1 string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData2": {
            "type": "string",
            "description": "AssetProductIssue.UserData2\n\nCustomer-specific data 2  \nVX_ASSETPRODUCTISSUE.UserData2 string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData3": {
            "type": "string",
            "description": "AssetProductIssue.UserData3\n\nCustomer-specific data 3  \nVX_ASSETPRODUCTISSUE.UserData3 string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData4": {
            "type": "string",
            "description": "AssetProductIssue.UserData4\n\nCustomer-specific data 4  \nVX_ASSETPRODUCTISSUE.UserData4 string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData5": {
            "type": "string",
            "description": "AssetProductIssue.UserData5\n\nCustomer-specific data 5  \nVX_ASSETPRODUCTISSUE.UserData5 string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData6": {
            "type": "string",
            "description": "AssetProductIssue.UserData6\n\nCustomer-specific data 6  \nVX_ASSETPRODUCTISSUE.UserData6 string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AssetProductIssue.VendorId\n\nVendor number the product was received and issued from  \nVX_ASSETPRODUCTISSUE.VendorId string 12 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "VendorName": {
            "type": "string",
            "description": "AssetProductIssue.VendorName\n\nVendor name  \nVX_ASSETPRODUCTISSUE.VendorName string 20 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIAssetProductIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetProductIssue"
            }
          }
        }
      },
      "SaveResponseOfIAssetProductIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetProductIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetProductIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetProductIssue"
          }
        }
      },
      "QueryResponseOfIAssetProductIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetProductIssue"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAssetProductIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetProductIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetProductIssue"
              }
            }
          }
        ]
      },
      "ETagOfIAssetProductIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfICustomListValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ICustomListValue"
                }
              }
            }
          }
        ]
      },
      "SaveResponseOfListOfIAssetProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetProduct"
                }
              }
            }
          }
        ]
      },
      "IAssetProduct": {
        "type": "object",
        "description": "AssetProduct",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "ProductId"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetProduct.AssetId\n\nAsset number  \nVX_ASSETPRODUCT.AssetId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetProduct.Description\n\nProduct description  \nVX_ASSETPRODUCT.Description string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "AssetProduct.DescriptionLanguage1\n\nProduct description, primary language  \nVX_ASSETPRODUCT.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "AssetProduct.DescriptionLanguage2\n\nProduct description, second language  \nVX_ASSETPRODUCT.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "AssetProduct.DescriptionLanguage3\n\nProduct description, third language  \nVX_ASSETPRODUCT.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "EnforceValidMeter": {
            "type": "boolean",
            "description": "AssetProduct.EnforceValidMeter\n\nEnforce Valid Meter?  \nVX_ASSETPRODUCT.EnforceValidMeter bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsEmployeeRequired": {
            "type": "boolean",
            "description": "AssetProduct.IsEmployeeRequired\n\nRequire Employee Card at ICU?  \nVX_ASSETPRODUCT.IsEmployeeRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetProduct.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETPRODUCT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastIssueDateTime": {
            "type": "string",
            "description": "AssetProduct.LastIssueDateTime\n\nLast issue date of the product  \nVX_ASSETPRODUCT.LastIssueDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "description": "AssetProduct.ProductId\n\nProduct number  \nVX_ASSETPRODUCT.ProductId string 2 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ProductTypeId": {
            "type": "string",
            "description": "AssetProduct.ProductTypeId\n\nProduct type  \nVX_ASSETPRODUCT.ProductTypeId string 2 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "RestrictToShift": {
            "type": "boolean",
            "description": "AssetProduct.RestrictToShift\n\nRestrict to Shift?  \nVX_ASSETPRODUCT.RestrictToShift bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RetryMeter1Count": {
            "type": "integer",
            "description": "AssetProduct.RetryMeter1Count\n\nRetry Meter1 Count  \nVX_ASSETPRODUCT.RetryMeter1Count int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "RetryMeter2Count": {
            "type": "integer",
            "description": "AssetProduct.RetryMeter2Count\n\nRetry Meter2 Count  \nVX_ASSETPRODUCT.RetryMeter2Count int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TankMax": {
            "type": "number",
            "description": "AssetProduct.TankMax\n\nTank capacity  \nVX_ASSETPRODUCT.TankMax int 8, 2 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "double",
            "nullable": true
          },
          "ValidateEmployee": {
            "type": "boolean",
            "description": "AssetProduct.ValidateEmployee\n\nValidate Employee Card at ICU?  \nVX_ASSETPRODUCT.ValidateEmployee bool  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIAssetProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetProduct"
            }
          }
        }
      },
      "QueryResponseOfIAssetProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetProduct"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAssetProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetProduct"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetProduct"
              }
            }
          }
        ]
      },
      "ETagOfIAssetProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetProduct"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetProduct"
          }
        }
      },
      "QueryResponseOfIAssetRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetRelationship"
                }
              }
            }
          }
        ]
      },
      "IAssetRelationship": {
        "type": "object",
        "description": "AssetRelationship",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetRelationship.AssetId\n\nParent unit/component no.  \nVX_ASSETRELATIONSHIP.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "ChildAssetDesc": {
            "type": "string",
            "description": "AssetRelationship.ChildAssetDesc\n\nChild unit/component description  \nVX_ASSETRELATIONSHIP.ChildAssetDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "ChildAssetId": {
            "type": "string",
            "description": "AssetRelationship.ChildAssetId\n\nChild unit/component no.  \nVX_ASSETRELATIONSHIP.ChildAssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "InstallDate": {
            "type": "string",
            "description": "AssetRelationship.InstallDate\n\nDate of association  \nVX_ASSETRELATIONSHIP.InstallDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetRelationship.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETRELATIONSHIP.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Usage": {
            "type": "integer",
            "description": "AssetRelationship.Usage\n\nDifference between base unit's meter1 at time of association and now  \nVX_ASSETRELATIONSHIP.Usage int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetRelationship"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetRelationship"
              }
            }
          }
        ]
      },
      "ETagOfIAssetRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetRelationship"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetRelationship": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetRelationship"
          }
        }
      },
      "QueryResponseOfIAssetScheduledService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetScheduledService"
                }
              }
            }
          }
        ]
      },
      "IAssetScheduledService": {
        "type": "object",
        "description": "AssetScheduledService",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AllowTaskReasonChange": {
            "type": "boolean",
            "description": "AssetScheduledService.AllowTaskReasonChange\n\nWhether job reason can be changed.  \nVX_ASSETSCHEDULEDSERVICE.AllowTaskReasonChange bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "AssetScheduledService.AssetId\n\nAsset number, can be a unit, department or component.  \nVX_ASSETSCHEDULEDSERVICE.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "DateJobLastDone": {
            "type": "string",
            "description": "AssetScheduledService.DateJobLastDone\n\nDate job was last done.  \nVX_ASSETSCHEDULEDSERVICE.DateJobLastDone DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DateJobNextDue": {
            "type": "string",
            "description": "AssetScheduledService.DateJobNextDue\n\nDate job is due next.  \nVX_ASSETSCHEDULEDSERVICE.DateJobNextDue DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Fluid": {
            "type": "number",
            "description": "AssetScheduledService.Fluid\n\nFluid Interval of task  \nVX_ASSETSCHEDULEDSERVICE.Fluid decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetScheduledService.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETSCHEDULEDSERVICE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MeterWhenJobLastDone": {
            "type": "integer",
            "description": "AssetScheduledService.MeterWhenJobLastDone\n\nMeter when job was last done.  \nVX_ASSETSCHEDULEDSERVICE.MeterWhenJobLastDone long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "AssetScheduledService.Source\n\nSource either MCC or UNIT  \nVX_ASSETSCHEDULEDSERVICE.Source string 4 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "AssetScheduledService.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_ASSETSCHEDULEDSERVICE.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "AssetScheduledService.TaskId\n\nWac-System-System/Assembly code  \nVX_ASSETSCHEDULEDSERVICE.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Time": {
            "type": "number",
            "description": "AssetScheduledService.Time\n\nTime interval when the job can be done again.  \nVX_ASSETSCHEDULEDSERVICE.Time decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TimeSinceJobLastDone": {
            "type": "integer",
            "description": "AssetScheduledService.TimeSinceJobLastDone\n\nTime Since job was last done in months.  \nVX_ASSETSCHEDULEDSERVICE.TimeSinceJobLastDone long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "AssetScheduledService.Type\n\nAbsolute or Relative  \nVX_ASSETSCHEDULEDSERVICE.Type string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Usage": {
            "type": "number",
            "description": "AssetScheduledService.Usage\n\nUsage interval when the job can be done again.  \nVX_ASSETSCHEDULEDSERVICE.Usage decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetScheduledService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetScheduledService"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetScheduledService"
              }
            }
          }
        ]
      },
      "ETagOfIAssetScheduledService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetScheduledService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetScheduledService"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetScheduledService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetScheduledService"
          }
        }
      },
      "QueryResponseOfIAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          }
        ]
      },
      "IAsset": {
        "type": "object",
        "description": "Asset",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AcquisitionDate",
          "Active",
          "AssetId",
          "BillingId",
          "MaintenanceLocationId",
          "OwningDeptId"
        ],
        "properties": {
          "AcquisitionDate": {
            "type": "string",
            "description": "Asset.AcquisitionDate\n\nAcquisition Date  \nVX_ASSET.AcquisitionDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "Asset.Active\n\nM5 status \"A\"active, \"I\"nactive and flagged for \"D\"isposal.  \nVX_ASSET.Active bool  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ActivityDesc": {
            "type": "string",
            "description": "Asset.ActivityDesc\n\nActivity Description  \nVX_ASSET.ActivityDesc string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "ActivityId": {
            "type": "string",
            "description": "Asset.ActivityId\n\nActivity Id  \nVX_ASSET.ActivityId string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "AllowAllFluidTypes": {
            "type": "boolean",
            "description": "Asset.AllowAllFluidTypes\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowWorkOrders": {
            "type": "boolean",
            "description": "Asset.AllowWorkOrders\n\nFlag to indicate whether work orders are allowed on the asset.  \nVX_ASSET.AllowWorkOrders bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AlternateUnitNumber": {
            "type": "string",
            "description": "Asset.AlternateUnitNumber\n\nAlternate Unit Number  \nVX_ASSET.AlternateUnitNumber string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "nullable": true
          },
          "AssetCategoryId": {
            "type": "string",
            "description": "Asset.AssetCategoryId\n\nCategory from unit, and if none, from tech spec  \nVX_ASSET.AssetCategoryId string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "Asset.AssetId\n\nAsset number, can be a unit, department or component.  \nVX_ASSET.AssetId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "AssetNumber": {
            "type": "string",
            "description": "Asset.AssetNumber\n\nAsset number (not to be confused with AssetId)  \nVX_ASSET.AssetNumber string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetTypeId": {
            "type": "string",
            "description": "Asset.AssetTypeId\n\nAsset type  \nvx_asset.AssetTypeId string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "Asset.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "Attributes": {
            "description": "Asset.Attributes\n\nUnit items  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAssetAttribute"
          },
          "AvailabilityStatusId": {
            "type": "string",
            "description": "Asset.AvailabilityStatusId\n\nAvailability Status  \nVX_ASSET.AvailabilityStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingId": {
            "type": "string",
            "description": "Asset.BillingId\n\nUnit's Billing Code  \nVX_ASSET.BillingId string 8 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "BookValue": {
            "type": "number",
            "description": "Asset.BookValue\n\nBook value:  capitalized value - LTD depreciation  \nVX_ASSET.BookValue decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CapitalAdjustmentValue": {
            "type": "number",
            "description": "Asset.CapitalAdjustmentValue\n\nLife-to-date capital adjustments (unit_dept_comp_main.ltd_cap_adj + cap_adj)  \nVX_ASSET.CapitalAdjustmentValue decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CapitalValue": {
            "type": "number",
            "description": "Asset.CapitalValue\n\nCapitalized value:  Purchase cost + accessory cost + acquisition prep + capital adjustments + PO change orders  \nVX_ASSET.CapitalValue decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CategoryClassId": {
            "type": "string",
            "description": "Asset.CategoryClassId\n\nUnit's category class.  \nVX_ASSET.CategoryClassId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CheckInOutStatus": {
            "type": "string",
            "description": "Asset.CheckInOutStatus\n\nCheckInOut Status  \nVX_ASSET.CheckInOutStatus string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "Asset.Comments\n\nAsset notes  \nvx_asset.Comments string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ConditionId": {
            "type": "string",
            "description": "Asset.ConditionId\n\nCondition Code  \nVX_ASSET.ConditionId string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "description": "Asset.Country\n\nCountry  \nVX_ASSET.Country string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "CreationDate": {
            "type": "string",
            "description": "Asset.CreationDate\n\nWhen record created  \nVX_ASSET.CreationDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CreditCards": {
            "description": "Asset.CreditCards\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAssetCreditCard"
          },
          "CurrentLocationId": {
            "type": "string",
            "description": "Asset.CurrentLocationId\n\nUnit's Current Location  \nVX_ASSET.CurrentLocationId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CustomerNotes": {
            "type": "string",
            "description": "Asset.CustomerNotes\n\nAsset's 'customer notes'  \nvx_asset.CustomerNotes string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DataScienceGroup": {
            "type": "string",
            "description": "Asset.DataScienceGroup\n\nData science provider  \nVX_ASSET.DataScienceGroup string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "DataScienceProvider": {
            "type": "string",
            "description": "Asset.DataScienceProvider\n\nData science provider  \nVX_ASSET.DataScienceProvider string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DeliveryDate": {
            "type": "string",
            "description": "Asset.DeliveryDate\n\nActual delivery date  \nVX_ASSET.DeliveryDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DepreciatedMonths": {
            "type": "integer",
            "description": "Asset.DepreciatedMonths\n\nNumber of months depreciated  \nVX_ASSET.DepreciatedMonths int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DepreciationRemainingMonths": {
            "type": "integer",
            "description": "Asset.DepreciationRemainingMonths\n\nMonths left to depreciate  \nVX_ASSET.DepreciationRemainingMonths int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DepreciationTermMonths": {
            "type": "integer",
            "description": "Asset.DepreciationTermMonths\n\nDepreciation term in months  \n.DepreciationTermMonths int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DepreciationType": {
            "type": "string",
            "description": "Asset.DepreciationType\n\nSTRAIGHT LINE, NONE  \nVX_ASSET.DepreciationType string  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Asset.Description\n\nDescription  \nvx_asset.Description string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLong": {
            "type": "string",
            "description": "Asset.DescriptionLong\n\nSame as 'Description'  \nvx_asset.DescriptionLong string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "DisposalAuctionPrepAmount": {
            "type": "number",
            "description": "Asset.DisposalAuctionPrepAmount\n\nDisposal auction prep amount  \nVX_ASSET.DisposalAuctionPrepAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalBankIssuingCheck": {
            "type": "string",
            "description": "Asset.DisposalBankIssuingCheck\n\nDisposal bank issuing check  \nVX_ASSET.DisposalBankIssuingCheck string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalCashReceivedBy": {
            "type": "string",
            "description": "Asset.DisposalCashReceivedBy\n\nDisposal cash received by  \nVX_ASSET.DisposalCashReceivedBy string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalCheckAmount": {
            "type": "number",
            "description": "Asset.DisposalCheckAmount\n\nDisposal check amount  \nVX_ASSET.DisposalCheckAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalComments": {
            "type": "string",
            "description": "Asset.DisposalComments\n\nDisposal notes  \nVX_ASSET.DisposalComments string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalCommissionAmount": {
            "type": "number",
            "description": "Asset.DisposalCommissionAmount\n\nDisposal commission amount  \nVX_ASSET.DisposalCommissionAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalDate": {
            "type": "string",
            "description": "Asset.DisposalDate\n\nDisposal (sale) date  \nVX_ASSET.DisposalDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DisposalDeleteWorkRequests": {
            "type": "boolean",
            "description": "Asset.DisposalDeleteWorkRequests\n\nDelete Work Requests for Asset being sold? Set if needed for PUTs; always false on a GET.  \nVX_ASSET.DisposalDeleteWorkRequests bool  \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalEstimatedDate": {
            "type": "string",
            "description": "Asset.DisposalEstimatedDate\n\nDisposal estimated date  \nVX_ASSET.DisposalEstimatedDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DisposalFinancier": {
            "type": "string",
            "description": "Asset.DisposalFinancier\n\nDisposal financier  \nVX_ASSET.DisposalFinancier string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalFlagDate": {
            "type": "string",
            "description": "Asset.DisposalFlagDate\n\nDisposal flagged date  \nVX_ASSET.DisposalFlagDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DisposalMethodDesc": {
            "type": "string",
            "description": "Asset.DisposalMethodDesc\n\nDisposal method description  \nVX_ASSET.DisposalMethodDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalMethodId": {
            "type": "string",
            "description": "Asset.DisposalMethodId\n\nDisposal method code  \nVX_ASSET.DisposalMethodId string 24 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalOtherProceedsAmount": {
            "type": "number",
            "description": "Asset.DisposalOtherProceedsAmount\n\nDisposal other proceeds amount  \nVX_ASSET.DisposalOtherProceedsAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalPrepAmount": {
            "type": "number",
            "description": "Asset.DisposalPrepAmount\n\nDisposal prep amount  \nVX_ASSET.DisposalPrepAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalReasonDesc": {
            "type": "string",
            "description": "Asset.DisposalReasonDesc\n\nDisposal reason's description  \nVX_ASSET.DisposalReasonDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalReasonId": {
            "type": "string",
            "description": "Asset.DisposalReasonId\n\nDisposal reason code  \nVX_ASSET.DisposalReasonId string 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalReferenceNumber": {
            "type": "string",
            "description": "Asset.DisposalReferenceNumber\n\nDisposal reference number  \nVX_ASSET.DisposalReferenceNumber string 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalRemoveOperator": {
            "type": "boolean",
            "description": "Asset.DisposalRemoveOperator\n\nDo you want to remove the assigned operator for Asset being Sold? Set if needed for PUTs; always false on a GET.  \nVX_ASSET.DisposalRemoveOperator bool  \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalSaleProceedAmount": {
            "type": "number",
            "description": "Asset.DisposalSaleProceedAmount\n\nDisposal sale proceeds amount  \nVX_ASSET.DisposalSaleProceedAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalSellAssociatedAssets": {
            "type": "boolean",
            "description": "Asset.DisposalSellAssociatedAssets\n\nSell associated assets defined by tech spec? Set if needed for PUTs; always false on a GET.  \nVX_ASSET.DisposalSellAssociatedAssets bool  \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalStatus": {
            "type": "string",
            "description": "Asset.DisposalStatus\n\nDisposal status: spelled out as defined by label field in unit_status table.  \nVX_ASSET.DisposalStatus string 16 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalStatusDesc": {
            "type": "string",
            "description": "Asset.DisposalStatusDesc\n\nDisposal status description  \nVX_ASSET.DisposalStatusDesc string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "DisposalStorageAmount": {
            "type": "number",
            "description": "Asset.DisposalStorageAmount\n\nDisposal storage amount  \nVX_ASSET.DisposalStorageAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalTo": {
            "type": "string",
            "description": "Asset.DisposalTo\n\nAdditional information about where or who asset is disposed to  \nVX_ASSET.DisposalTo string 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DisposalTradeCreditAmount": {
            "type": "number",
            "description": "Asset.DisposalTradeCreditAmount\n\nDisposal trade credit amount  \nVX_ASSET.DisposalTradeCreditAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DisposalTransportationAmount": {
            "type": "number",
            "description": "Asset.DisposalTransportationAmount\n\nDisposal transportation amount  \nVX_ASSET.DisposalTransportationAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EstimatedReplacementCost": {
            "type": "number",
            "description": "Asset.EstimatedReplacementCost\n\nEstimated replacement cost  \nVX_ASSET.EstimatedReplacementCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EstimatedReplacementDate": {
            "type": "string",
            "description": "Asset.EstimatedReplacementDate\n\nEstimated replacement date  \nVX_ASSET.EstimatedReplacementDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EstimatedReplacementMeter": {
            "type": "integer",
            "description": "Asset.EstimatedReplacementMeter\n\nEstimated replacement at this usage  \nVX_ASSET.EstimatedReplacementMeter decimal  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "EstimatedReplacementMonth": {
            "type": "integer",
            "description": "Asset.EstimatedReplacementMonth\n\nEstimated replacement month  \nVX_ASSET.EstimatedReplacementMonth int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "EstimatedReplacementYear": {
            "type": "integer",
            "description": "Asset.EstimatedReplacementYear\n\nEstimated replacement year  \nVX_ASSET.EstimatedReplacementYear int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ExpectedLifeMonths": {
            "type": "integer",
            "description": "Asset.ExpectedLifeMonths\n\nExpected life in months  \nVX_ASSET.ExpectedLifeMonths int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ExpectedLifeUsage1": {
            "type": "integer",
            "description": "Asset.ExpectedLifeUsage1\n\nExpected life usage for meter 1  \nVX_ASSET.ExpectedLifeUsage1 long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "FuelCards": {
            "description": "Asset.FuelCards\n\nList of fuel cards for the asset  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIFuelCard"
          },
          "GrossSalePrice": {
            "type": "number",
            "description": "Asset.GrossSalePrice\n\nGross sale price  \nVX_ASSET.GrossSalePrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ImageUrl": {
            "type": "string",
            "description": "Asset.ImageUrl\n\nUrl path to Image  \nVX_ASSET.ImageUrl string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "InServiceDate": {
            "type": "string",
            "description": "Asset.InServiceDate\n\nIn-Service Date  \nVX_ASSET.InServiceDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InServiceMeter": {
            "type": "integer",
            "description": "Asset.InServiceMeter\n\nIn Service Meter1  \nVX_ASSET.InServiceMeter int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InServiceMeter2": {
            "type": "integer",
            "description": "Asset.InServiceMeter2\n\nIn Service Meter2  \nVX_ASSET.InServiceMeter2 int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Asset.InternalId\n\nUnit ID  \nVX_ASSET.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsElectric": {
            "type": "boolean",
            "description": "Asset.IsElectric\n\nDoes this have an electric product type?  \nVX_ASSET.IsElectric bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Asset.LastChangedDateTime\n\nDate the unit_dept_comp_main record last changed  \nVX_ASSET.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastMeter1DateTime": {
            "type": "string",
            "description": "Asset.LastMeter1DateTime\n\nDate the meter was last updated  \nVX_ASSET.LastMeter1DateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastMeter2DateTime": {
            "type": "string",
            "description": "Asset.LastMeter2DateTime\n\nDate the 2nd meter was last updated  \nVX_ASSET.LastMeter2DateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPmDate": {
            "type": "string",
            "description": "Asset.LastPmDate\n\nDate of most recent PM  \nVX_ASSET.LastPmDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPmId": {
            "type": "string",
            "description": "Asset.LastPmId\n\nJob code for most recent PM  \nVX_ASSET.LastPmId string  \n\nSearchable: False ",
            "nullable": true
          },
          "LastPmLifeMeter1": {
            "type": "integer",
            "description": "Asset.LastPmLifeMeter1\n\nPrimary meter at most recent PM  \nVX_ASSET.LastPmLifeMeter1 long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastPmWorkOrderLocationId": {
            "type": "string",
            "description": "Asset.LastPmWorkOrderLocationId\n\nLocation where most recent PM was performed  \nVX_ASSET.LastPmWorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "LastYardCheckDateTime": {
            "type": "string",
            "description": "Asset.LastYardCheckDateTime\n\nDate and time of last yard check (physical inventory)  \nVX_ASSET.LastYardCheckDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Latitude": {
            "type": "string",
            "description": "Asset.Latitude\n\nDEPRECATED -- Use /assetpositions/assetid/X  \nVX_ASSET.Latitude decimal  \n\nSearchable: False ",
            "nullable": true
          },
          "LeaseExpirationDate": {
            "type": "string",
            "description": "Asset.LeaseExpirationDate\n\nLease expiration date  \nVX_ASSET.LeaseExpirationDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LicenseExpirationDate": {
            "type": "string",
            "description": "Asset.LicenseExpirationDate\n\nLicense/registration expiration date  \nVX_ASSET.LicenseExpirationDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LicenseGovernment": {
            "type": "string",
            "description": "Asset.LicenseGovernment\n\nGovernment which issued the license  \nVX_ASSET.LicenseGovernment string  \n\nSearchable: False ",
            "nullable": true
          },
          "LicenseNumber": {
            "type": "string",
            "description": "Asset.LicenseNumber\n\nLicense Number  \nVX_ASSET.LicenseNumber string 17 \n\nSearchable: True ",
            "nullable": true
          },
          "LicenseTypeId": {
            "type": "string",
            "description": "Asset.LicenseTypeId\n\nType of primary license  \nVX_ASSET.LicenseTypeId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LifeCycleStatusCategory": {
            "type": "string",
            "description": "Asset.LifeCycleStatusCategory\n\nUnit status's description  \nVX_ASSET.LifeCycleStatusCategory string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LifeCycleStatusDesc": {
            "type": "string",
            "description": "Asset.LifeCycleStatusDesc\n\nLife Cycle Status Description  \nVX_ASSET.LifeCycleStatusDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "LifeCycleStatusId": {
            "type": "string",
            "description": "Asset.LifeCycleStatusId\n\nLife Cycle Status ID  \nVX_ASSET.LifeCycleStatusId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Longitude": {
            "type": "string",
            "description": "Asset.Longitude\n\nDEPRECATED -- Use /assetpositions/assetid/X  \nVX_ASSET.Longitude decimal  \n\nSearchable: False ",
            "nullable": true
          },
          "MaintenanceClassId": {
            "type": "string",
            "description": "Asset.MaintenanceClassId\n\nMaintenance class (MCC)  \nVX_ASSET.MaintenanceClassId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MaintenanceLocationDesc": {
            "type": "string",
            "description": "Asset.MaintenanceLocationDesc\n\nMaintenance location description  \nVX_ASSET.MaintenanceLocationDesc string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "MaintenanceLocationId": {
            "type": "string",
            "description": "Asset.MaintenanceLocationId\n\nMaintenance Location  \nVX_ASSET.MaintenanceLocationId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "MakeId": {
            "type": "string",
            "description": "Asset.MakeId\n\nMake of the asset  \nVX_ASSET.MakeId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "Asset.ManufacturerId\n\nManufacturer of the asset  \nVX_ASSET.ManufacturerId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Messages": {
            "type": "string",
            "description": "Asset.Messages\n\nnotes added to newly opened work orders  \nVX_ASSET.Messages string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Meter1AtDelivery": {
            "type": "integer",
            "description": "Asset.Meter1AtDelivery\n\nAcquisition meter 1  \nVX_ASSET.Meter1AtDelivery int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1LifeTotal": {
            "type": "integer",
            "description": "Asset.Meter1LifeTotal\n\nmeter ltd usage  \nVX_ASSET.Meter1LifeTotal long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "integer",
            "description": "Asset.Meter1Reading\n\nmeter reading  \nVX_ASSET.Meter1Reading long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Meter1Source": {
            "type": "string",
            "description": "Asset.Meter1Source\n\nMeter1 Source  \nVX_ASSET.Meter1Source string  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1TypeId": {
            "type": "string",
            "description": "Asset.Meter1TypeId\n\n(H, K, M, C = Count, N or Null = no meter)  \nVX_ASSET.Meter1TypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2AtDelivery": {
            "type": "integer",
            "description": "Asset.Meter2AtDelivery\n\nAcquisition meter 2  \nVX_ASSET.Meter2AtDelivery int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2LifeTotal": {
            "type": "integer",
            "description": "Asset.Meter2LifeTotal\n\nmeter2 ltd usage  \nVX_ASSET.Meter2LifeTotal long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Meter2Reading": {
            "type": "integer",
            "description": "Asset.Meter2Reading\n\nmeter2 reading  \nVX_ASSET.Meter2Reading long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Meter2Source": {
            "type": "string",
            "description": "Asset.Meter2Source\n\nMeter2 Source  \nVX_ASSET.Meter2Source string  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2TypeId": {
            "type": "string",
            "description": "Asset.Meter2TypeId\n\n(H, K, M, C = Count, N or Null = no meter)  \nVX_ASSET.Meter2TypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ModelId": {
            "type": "string",
            "description": "Asset.ModelId\n\nModel of the asset  \nVX_ASSET.ModelId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "MotorPoolLocationId": {
            "type": "string",
            "description": "Asset.MotorPoolLocationId\n\nUnit's Motor Pool Location  \nVX_ASSET.MotorPoolLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "NetSalePrice": {
            "type": "number",
            "description": "Asset.NetSalePrice\n\nNet sale proceeds  \nVX_ASSET.NetSalePrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "NextPmDueDate": {
            "type": "string",
            "description": "Asset.NextPmDueDate\n\nDue date of next PM job  \nVX_ASSET.NextPmDueDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "NextPmServiceId": {
            "type": "string",
            "description": "Asset.NextPmServiceId\n\nNext due PM job code  \nVX_ASSET.NextPmServiceId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Notes": {
            "description": "Asset.Notes\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "OffRoad": {
            "type": "boolean",
            "description": "Asset.OffRoad\n\nIs this an off-road asset?  \nVX_ASSET.OffRoad bool  \n\nSearchable: False ",
            "nullable": true
          },
          "OffRoadPct": {
            "type": "number",
            "description": "Asset.OffRoadPct\n\nOff-road percentage  \nVX_ASSET.OffRoadPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OpenWorkOrders": {
            "description": "Asset.OpenWorkOrders\n\nOpen Work Orders  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWorkOrder"
          },
          "OperationalClassDesc": {
            "type": "string",
            "description": "Asset.OperationalClassDesc\n\nUnit's operational class's description  \nVX_ASSET.OperationalClassDesc string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalClassId": {
            "type": "string",
            "description": "Asset.OperationalClassId\n\nUnit's Operational Class  \nVX_ASSET.OperationalClassId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalStatusDesc": {
            "type": "string",
            "description": "Asset.OperationalStatusDesc\n\nCurrent operational status code description  \nVX_ASSET.OperationalStatusDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalStatusId": {
            "type": "string",
            "description": "Asset.OperationalStatusId\n\nCurrent operational (availability) status code  \nVX_ASSET.OperationalStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "OperatorDeptDesc": {
            "type": "string",
            "description": "Asset.OperatorDeptDesc\n\nOperator's department name  \nVX_ASSET.OperatorDeptDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "OperatorDeptId": {
            "type": "string",
            "description": "Asset.OperatorDeptId\n\nOperator's Department Number  \nVX_ASSET.OperatorDeptId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "OperatorEmail": {
            "type": "string",
            "description": "Asset.OperatorEmail\n\nOperator's Email Address  \nVX_ASSET.OperatorEmail string 128 \n\nSearchable: False ",
            "nullable": true
          },
          "OperatorId": {
            "type": "string",
            "description": "Asset.OperatorId\n\nOperator employee ID  \nVX_ASSET.OperatorId string  \n\nSearchable: False ",
            "nullable": true
          },
          "OperatorName": {
            "type": "string",
            "description": "Asset.OperatorName\n\nUnit's Operator  \nVX_ASSET.OperatorName string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "OperatorPhone": {
            "type": "string",
            "description": "Asset.OperatorPhone\n\nOperator's Phone Number  \nVX_ASSET.OperatorPhone string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "OriginalCost": {
            "type": "number",
            "description": "Asset.OriginalCost\n\nOriginal purchase price  \nVX_ASSET.OriginalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Ownership": {
            "type": "string",
            "description": "Asset.Ownership\n\nOwnership type:  OWNED, LEASED, CUSTOMER OWNED, etc.  \nVX_ASSET.Ownership string  \n\nSearchable: False ",
            "nullable": true
          },
          "OwningDeptDesc": {
            "type": "string",
            "description": "Asset.OwningDeptDesc\n\nOwning Department Description  \nVX_ASSET.OwningDeptDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "OwningDeptId": {
            "type": "string",
            "description": "Asset.OwningDeptId\n\nOwning Department, required if Owning Department Requires it  \nVX_ASSET.OwningDeptId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ParkingLocationDesc": {
            "type": "string",
            "description": "Asset.ParkingLocationDesc\n\nUnit's parking location name  \nVX_ASSET.ParkingLocationDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "ParkingLocationId": {
            "type": "string",
            "description": "Asset.ParkingLocationId\n\nUnit's Parking Location  \nVX_ASSET.ParkingLocationId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PoolClassId": {
            "type": "string",
            "description": "Asset.PoolClassId\n\nMotor pool rental class  \nVX_ASSET.PoolClassId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PreviousAssetId": {
            "type": "string",
            "description": "Asset.PreviousAssetId\n\nMost recent previous unit number  \nVX_ASSET.PreviousAssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Products": {
            "description": "Asset.Products\n\nAsset's products  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAssetProduct"
          },
          "QtyFuelUsedSinceLastPm": {
            "type": "number",
            "description": "Asset.QtyFuelUsedSinceLastPm\n\nFuel used since most recent PM  \nVX_ASSET.QtyFuelUsedSinceLastPm decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RecordType": {
            "type": "string",
            "description": "Asset.RecordType\n\nType of Asset (U-Unit, D-Dept, C-Component).  Controls special entry of data on work order  \nVX_ASSET.RecordType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RentalRates": {
            "description": "Asset.RentalRates\n\nMotor pool rates for the asset, based on its billing code  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIRentalRatesClassRate"
          },
          "ReplacedByAssetId": {
            "type": "string",
            "description": "Asset.ReplacedByAssetId\n\nReplaced by this unit number  \nVX_ASSET.ReplacedByAssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ReplacesAssetId": {
            "type": "string",
            "description": "Asset.ReplacesAssetId\n\nReplaces unit number  \nVX_ASSET.ReplacesAssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ResourceClassId": {
            "type": "string",
            "description": "Asset.ResourceClassId\n\nUnit's tech spec number  \nVX_ASSET.ResourceClassId string 13 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "RetireDate": {
            "type": "string",
            "description": "Asset.RetireDate\n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SaleExpense": {
            "type": "number",
            "description": "Asset.SaleExpense\n\nSale expenses  \nVX_ASSET.SaleExpense decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "SalvagePct": {
            "type": "number",
            "description": "Asset.SalvagePct\n\nSalvage percent  \nVX_ASSET.SalvagePct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "SalvageValue": {
            "type": "number",
            "description": "Asset.SalvageValue\n\nSalvage value  \nVX_ASSET.SalvageValue decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "Asset.SerialNumber\n\nSerial number of the asset  \nVX_ASSET.SerialNumber string 32 \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "nullable": true
          },
          "Sku": {
            "type": "string",
            "description": "Asset.Sku\n\nSku  \nVX_ASSET.Sku string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsAvailability": {
            "type": "boolean",
            "description": "Asset.SupportsAvailability\n\nDoes the asset track operational/service/availability status?  \nVX_ASSET.SupportsAvailability bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsDriverBehavior": {
            "type": "boolean",
            "description": "Asset.SupportsDriverBehavior\n\nIs the asset enabled for Driver Behavior?  \nVX_ASSET.SupportsDriverBehavior bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsTelematicsCloud": {
            "type": "boolean",
            "description": "Asset.SupportsTelematicsCloud\n\nDoes the asset use the telematics cloud?  \nVX_ASSET.SupportsTelematicsCloud bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TechSpecDesc": {
            "type": "string",
            "description": "Asset.TechSpecDesc\n\nUnit's tech spec description  \nVX_ASSET.TechSpecDesc string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "TechSpecId": {
            "type": "string",
            "description": "Asset.TechSpecId\n\nUnit's Tech Spec Number  \nVX_ASSET.TechSpecId string 13 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TelematicsDataSource": {
            "type": "string",
            "description": "Asset.TelematicsDataSource\n\nTelematics data source  \nVX_ASSET.TelematicsDataSource string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "description": "Asset.Title\n\nAsset title number  \nVX_ASSET.Title string  \n\nSearchable: False ",
            "nullable": true
          },
          "ToolTypeId": {
            "type": "string",
            "description": "Asset.ToolTypeId\n\nequipment type  \nVX_ASSET.ToolTypeId string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UnitShiftId": {
            "type": "string",
            "description": "Asset.UnitShiftId\n\nUnit's Shift Code  \nVX_ASSET.UnitShiftId int 6 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitStatus": {
            "type": "string",
            "description": "Asset.UnitStatus\n\nM5 unit status code: (B)udgeted, (O)rdered, (I)nactive, (A)ctive, (D)isposal process, (S)old  \nVX_ASSET.UnitStatus string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "UserClass1": {
            "type": "string",
            "description": "Asset.UserClass1\n\nUserClass1  \nVX_ASSET.UserClass1 string 14 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserClass1Desc": {
            "type": "string",
            "description": "Asset.UserClass1Desc\n\nUserClass1 Description  \nVX_ASSET.UserClass1Desc string 14 \n\nSearchable: False ",
            "nullable": true
          },
          "UserClass2": {
            "type": "string",
            "description": "Asset.UserClass2\n\nUserClass2  \nVX_ASSET.UserClass2 string 14 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserClass2Desc": {
            "type": "string",
            "description": "Asset.UserClass2Desc\n\nUserClass2 Description  \nVX_ASSET.UserClass2Desc string 14 \n\nSearchable: False ",
            "nullable": true
          },
          "UserClass3": {
            "type": "string",
            "description": "Asset.UserClass3\n\nUserClass3  \nVX_ASSET.UserClass3 string 14 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserClass3Desc": {
            "type": "string",
            "description": "Asset.UserClass3Desc\n\nUserClass3 Description  \nVX_ASSET.UserClass3Desc string 14 \n\nSearchable: False ",
            "nullable": true
          },
          "UserClass4": {
            "type": "string",
            "description": "Asset.UserClass4\n\nUserClass4  \nVX_ASSET.UserClass4 string 14 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserClass4Desc": {
            "type": "string",
            "description": "Asset.UserClass4Desc\n\nUserClass4 Description  \nVX_ASSET.UserClass4Desc string 14 \n\nSearchable: False ",
            "nullable": true
          },
          "UserClass5": {
            "type": "string",
            "description": "Asset.UserClass5\n\nUserClass5  \nVX_ASSET.UserClass5 string 14 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserClass5Desc": {
            "type": "string",
            "description": "Asset.UserClass5Desc\n\nUserClass5 Description  \nVX_ASSET.UserClass5Desc string 14 \n\nSearchable: False ",
            "nullable": true
          },
          "UseTelematicsMeterWhenFueling": {
            "type": "boolean",
            "description": "Asset.UseTelematicsMeterWhenFueling\n\nVX_ASSET.UseTelematicsMeterWhenFueling bool  \n\nSearchable: False ",
            "nullable": true
          },
          "UsingDeptDesc": {
            "type": "string",
            "description": "Asset.UsingDeptDesc\n\nUsing Department Description  \nVX_ASSET.UsingDeptDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "UsingDeptId": {
            "type": "string",
            "description": "Asset.UsingDeptId\n\nUsing Department  \nVX_ASSET.UsingDeptId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "WeightGross": {
            "type": "integer",
            "description": "Asset.WeightGross\n\nTech spec's gross vehicle weight  \nVX_ASSET.WeightGross int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "YardCheckDateTime": {
            "type": "string",
            "description": "Asset.YardCheckDateTime\n\nLast physical inventory (aka yard check) done when  \nVX_ASSET.YardCheckDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "YardCheckEmployeeId": {
            "type": "string",
            "description": "Asset.YardCheckEmployeeId\n\nLast physical inventory (aka yard check) done by whom  \nVX_ASSET.YardCheckEmployeeId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Asset.Year\n\nYear of the asset  \nVX_ASSET.Year int 4 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIAssetAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetAttribute"
            }
          }
        }
      },
      "ILookupItemOfIAssetCreditCard": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetCreditCard"
            }
          }
        }
      },
      "ILookupItemOfIFuelCard": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IFuelCard"
            }
          }
        }
      },
      "IFuelCard": {
        "type": "object",
        "description": "FuelCard",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "CardholderType",
          "CardId",
          "EffectiveDate"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "FuelCard.Active\n\nM5 Disable_fl null is active, Y is not active  \nVX_FUELCARD.Active bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "FuelCard.AssetId\n\nIf assigned to an asset, the asset ID  \nVX_FUELCARD.AssetId string 2 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "AssetInternalId": {
            "type": "integer",
            "description": "FuelCard.AssetInternalId\n\nIf assigned to an asset, the unit_id  \nVX_FUELCARD.AssetInternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "CardholderType": {
            "type": "string",
            "description": "FuelCard.CardholderType\n\nEMPLOYEE, UNIT, DEPARTMENT, UNKNOWN  \nVX_FUELCARD.CardholderType string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "CardId": {
            "type": "string",
            "description": "FuelCard.CardId\n\nFuel Card Number  \nVX_FUELCARD.CardId string  \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "FuelCard.DepartmentId\n\nIf assigned to a department, the department ID  \nVX_FUELCARD.DepartmentId string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "nullable": true
          },
          "DepartmentInternalId": {
            "type": "integer",
            "description": "FuelCard.DepartmentInternalId\n\nIf assigned to an department, the dept_id  \nVX_FUELCARD.DepartmentInternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "EffectiveDate": {
            "type": "string",
            "description": "FuelCard.EffectiveDate\n\nEffective Date  \nVX_FUELCARD.EffectiveDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "format": "date-time",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "FuelCard.EmployeeId\n\nIf assigned to an employee, the employee ID  \nVX_FUELCARD.EmployeeId string  \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "nullable": true
          },
          "EmployeeInternalId": {
            "type": "integer",
            "description": "FuelCard.EmployeeInternalId\n\nIf assigned to an employee, the emp_id  \nVX_FUELCARD.EmployeeInternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "description": "FuelCard.EndDate\n\nEnd Date  \nVX_FUELCARD.EndDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "FuelCard.Message\n\nMessage  \nVX_FUELCARD.Message string 90 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "description": "FuelCard.Note\n\nNote  \nVX_FUELCARD.Note string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Pin": {
            "type": "string",
            "description": "FuelCard.Pin\n\nPin  \nVX_FUELCARD.Pin string 4 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PromptId": {
            "type": "string",
            "description": "FuelCard.PromptId\n\nPrompt Id  \nVX_FUELCARD.PromptId string 12 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "FuelCard.Status\n\nISSUED (end date has not past, or is assigned and no effective or end date), RETURNED (end date has past), NOT ASSIGNED (otherwise)  \nVX_FUELCARD.Status string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData1": {
            "type": "string",
            "description": "FuelCard.UserData1\n\nCustomer-specific data 1  \nVX_FUELCARD.UserData1 string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "UserData2": {
            "type": "string",
            "description": "FuelCard.UserData2\n\nCustomer-specific data 2  \nVX_FUELCARD.UserData2 string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "UserData3": {
            "type": "string",
            "description": "FuelCard.UserData3\n\nCustomer-specific data 3  \nVX_FUELCARD.UserData3 string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "FuelCard.VendorId\n\nVendor Number  \nVX_FUELCARD.VendorId string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "FuelCard.VendorInternalId\n\nVendor_Id  \nVX_FUELCARD.VendorInternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfINote": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/INote"
            }
          }
        }
      },
      "INote": {
        "type": "object",
        "description": "Note",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AuthorEmployeeId": {
            "type": "string",
            "description": "Note.AuthorEmployeeId\n\nEmployee Number of application user who made change to note  \nVX_NOTE.AuthorEmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "AuthorEmployeeImageUrl": {
            "type": "string",
            "description": "Note.AuthorEmployeeImageUrl\n\nHolds null, controller has to join the image data type and base64 data.  \nVX_NOTE.AuthorEmployeeImageUrl string  \n\nSearchable: False ",
            "nullable": true
          },
          "AuthorEmployeeName": {
            "type": "string",
            "description": "Note.AuthorEmployeeName\n\nEmployee Name of application user who made change to note  \nVX_NOTE.AuthorEmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AuthorUserId": {
            "type": "string",
            "description": "Note.AuthorUserId\n\nUnique ID of application user who made change to note  \nVX_NOTE.AuthorUserId string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "Exception": {
            "type": "boolean",
            "description": "Note.Exception\n\nFlag for indicating if the job note is an exception note or not.  \nVX_NOTE.Exception bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Note.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_NOTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Locked": {
            "type": "boolean",
            "description": "Note.Locked\n\nDenotes if the note is locked for edit.  \nVX_NOTE.LOCKED bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "NoteText": {
            "type": "string",
            "description": "Note.NoteText\n\nWork Order Note, in chunks of 4000 characters, ordered by seq column.  \nVX_NOTE.NoteText string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "PostDateTime": {
            "type": "string",
            "description": "Note.PostDateTime\n\nDate Note was created or updated  \nVX_NOTE.PostDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Seq": {
            "type": "integer",
            "description": "Note.Seq\n\nnotes.seq - Note Sequence, used to chunk long notes. Concat text from multiple notes together in implementation layer, return as single string to common model.  \"Seq\" rather than \"Sequence\" to avoid Oracle keyword  \nVX_NOTE.Seq int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "Note.Source\n\nUsed to store source of note null in the view so it can be set in controllers  \nVX_NOTE.SOURCE string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "SourceId": {
            "type": "string",
            "description": "Note.SourceId\n\nSequential note id, 10 digits  \nVX_NOTE.SourceId long 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIWorkOrder": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrder"
            }
          }
        }
      },
      "IWorkOrder": {
        "type": "object",
        "description": "WorkOrder",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "RepairReasonId",
          "RequisitionId",
          "UnitInDateTime",
          "WorkOrderId",
          "WorkOrderLocationId"
        ],
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "WorkOrder.AssetDesc\n\nUnit Description  \nVX_WORKORDER.AssetDesc string 100 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WorkOrder.AssetId\n\nUnit number  \nVX_WORKORDER.AssetId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "AssetImageUrl": {
            "type": "string",
            "description": "WorkOrder.AssetImageUrl\n\nUrl path to Image  \nVX_WORKORDER.AssetImageUrl string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetStatus": {
            "type": "string",
            "description": "WorkOrder.AssetStatus\n\nUnit Status  \nVX_WORKORDER.AssetStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssignedEmployees": {
            "description": "WorkOrder.AssignedEmployees\n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIEmployee"
          },
          "AssignedVendors": {
            "description": "WorkOrder.AssignedVendors\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendor"
          },
          "Attachments": {
            "description": "WorkOrder.Attachments\n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "Attributes": {
            "description": "WorkOrder.Attributes\n\nWork Order Items  \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWorkOrderAttribute"
          },
          "CanFinish": {
            "type": "boolean",
            "description": "WorkOrder.CanFinish\n\nCan the work order be completed?  \nVX_WORKORDER.CanFinish bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "CanWorkDelay": {
            "type": "boolean",
            "description": "WorkOrder.CanWorkDelay\n\nCan the work order be suspended?  \nVX_WORKORDER.CanWorkDelay bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ClosedAdjustmentReasonId": {
            "type": "string",
            "description": "WorkOrder.ClosedAdjustmentReasonId\n\nFor M5, o_wo.closed_wo_reason to go get the closed adjustment reason.  \nVX_WORKORDER.ClosedAdjustmentReasonId string  \n\nSearchable: False ",
            "nullable": true
          },
          "CloseDateTime": {
            "type": "string",
            "description": "WorkOrder.CloseDateTime\n\nWork Order Close Date  \nVX_WORKORDER.CloseDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CommercialCost": {
            "type": "number",
            "description": "WorkOrder.CommercialCost\n\nSum Actual WO Comm Amount  \nVX_WORKORDER.CommercialCost decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CompleteDateTime": {
            "type": "string",
            "description": "WorkOrder.CompleteDateTime\n\nWork Order Completed Date  \nVX_WORKORDER.CompleteDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "WorkOrder.ContactEmail\n\nWho to email with questions about the asset or work; work finished confirmations  \nVX_WORKORDER.ContactEmail string 128 \n\nSearchable: False ",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "WorkOrder.ContactName\n\nWho to talk to about asset issues; who to release to when work is done  \nVX_WORKORDER.ContactName string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ContactPhone": {
            "type": "string",
            "description": "WorkOrder.ContactPhone\n\nWho to call with questions about the asset or work  \nVX_WORKORDER.ContactPhone string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ContactPhoneExtension": {
            "type": "string",
            "description": "WorkOrder.ContactPhoneExtension\n\nPhone Extension of contact  \nVX_WORKORDER.ContactPhoneExtension string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CostLimit": {
            "type": "number",
            "description": "WorkOrder.CostLimit\n\nAssets Cost Limit on a Work Order.  \nVX_WORKORDER.CostLimit decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CreationDateTime": {
            "type": "string",
            "description": "WorkOrder.CreationDateTime\n\nWhen the work order was created  \nVX_WORKORDER.CreationDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DataScienceProvider": {
            "type": "string",
            "description": "WorkOrder.DataScienceProvider\n\nData science provider  \nVX_WORKORDER.DataScienceProvider string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DefaultStockLocationId": {
            "type": "string",
            "description": "WorkOrder.DefaultStockLocationId\n\nUse work order location's stock location  \nVX_LOCATION.DefaultStockLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DefaultStockLocationName": {
            "type": "string",
            "description": "WorkOrder.DefaultStockLocationName\n\nUse work order location's stock location  \nVX_WORKORDER.DefaultStockLocationName string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DelayStartDateTime": {
            "type": "string",
            "description": "WorkOrder.DelayStartDateTime\n\nIf the work order suspend indicator is Y the work o_wo.suspend_dt is returned, otherwise the unit_downtime.start_dt is returned.  \nVX_WORKORDER.DelayStartDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "WorkOrder.DepartmentDesc\n\nVX_WORKORDER.DepartmentDesc string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "WorkOrder.DepartmentId\n\nVX_WORKORDER.DepartmentId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DueDateTime": {
            "type": "string",
            "description": "WorkOrder.DueDateTime\n\nExpected completion date, duplicate of ExpCompleteDateTime  \nVX_WORKORDER.DueDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EstLaborHours": {
            "type": "number",
            "description": "WorkOrder.EstLaborHours\n\nSum of all job hours on the work order.  Excludes jobs with a status of CAN and WR.  \nVX_WORKORDER.EstLaborHours decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ExpCompleteDateTime": {
            "type": "string",
            "description": "WorkOrder.ExpCompleteDateTime\n\nWO Due Date  \nVX_WORKORDER.ExpCompleteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FluidCost": {
            "type": "number",
            "description": "WorkOrder.FluidCost\n\nSum Actual WO Fluid Amount  \nVX_WORKORDER.FluidCost decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "WorkOrder.HasAttachments\n\nDoes the work order have attachments?  \nVX_WORKORDER.HasAttachments bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "WorkOrder.LaborCost\n\nSum Actual WO Labor Amount  \nVX_WORKORDER.LaborCost decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "WorkOrder.LaborHours\n\nSum Actual WO Labor Hours  \nVX_WORKORDER.LaborHours decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrder.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKORDER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Meter1LifeTotal": {
            "type": "number",
            "description": "WorkOrder.Meter1LifeTotal\n\nMeter1 reading on the work order  \nVX_WORKORDER.Meter1Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "number",
            "description": "WorkOrder.Meter1Reading\n\nMeter1 reading on the work order  \nVX_WORKORDER.Meter1Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter1Validation": {
            "type": "string",
            "description": "WorkOrder.Meter1Validation\n\n\"ACCEPT\" on PUT to update with bad meter  \nVX_WORKORDER.Meter1Validation string  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2LifeTotal": {
            "type": "number",
            "description": "WorkOrder.Meter2LifeTotal\n\nMeter2 reading on the work order  \nVX_WORKORDER.Meter2Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter2Reading": {
            "type": "number",
            "description": "WorkOrder.Meter2Reading\n\nMeter2 reading on the work order  \nVX_WORKORDER.Meter2Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Meter2Validation": {
            "type": "string",
            "description": "WorkOrder.Meter2Validation\n\n\"ACCEPT\" on PUT to update with bad meter  \nVX_WORKORDER.Meter2Validation string  \n\nSearchable: False ",
            "nullable": true
          },
          "Notes": {
            "description": "WorkOrder.Notes\n\nNote Index Number (links to NOTES table, notes are sequenced in 4000 character chunks)  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "OpenDateTime": {
            "type": "string",
            "description": "WorkOrder.OpenDateTime\n\nWork Order Open Date  \nVX_WORKORDER.OpenDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OperationalStatusDesc": {
            "type": "string",
            "description": "WorkOrder.OperationalStatusDesc\n\nOperational (availability) status description  \nVX_WORKORDER.OperationalStatusDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalStatusId": {
            "type": "string",
            "description": "WorkOrder.OperationalStatusId\n\nOperational (Availability) Status  \nVX_WORKORDER.OperationalStatusId string  \n\nSearchable: False ",
            "nullable": true
          },
          "OwningDeptId": {
            "type": "string",
            "description": "WorkOrder.OwningDeptId\n\nAsset owning department number  \nVX_WORKORDER.OwningDeptId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ParkingLocationId": {
            "type": "string",
            "description": "WorkOrder.ParkingLocationId\n\nParking Lot (not spot) Location  \nVX_WORKORDER.ParkingLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "ParkingSpot": {
            "type": "string",
            "description": "WorkOrder.ParkingSpot\n\nParking Spot Number  \nVX_WORKORDER.ParkingSpot string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PartsCost": {
            "type": "number",
            "description": "WorkOrder.PartsCost\n\nSum Actual WO Part Amount, add sum of act_fluid_do to total.  \nVX_WORKORDER.PartsCost decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PickupDateTime": {
            "type": "string",
            "description": "WorkOrder.PickupDateTime\n\nDate Asset Picked up  \nVX_WORKORDER.PickupDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PickupName": {
            "type": "string",
            "description": "WorkOrder.PickupName\n\nPickup Person Name  \nVX_WORKORDER.PickupName string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "WorkOrder.PriorityId\n\nMax job priority.  \nVX_WORKORDER.PriorityId string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RecordType": {
            "type": "string",
            "description": "WorkOrder.RecordType\n\nU - Unit, D - Department, C - Component.  \nVX_WORKORDER.RecordType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDesc": {
            "type": "string",
            "description": "WorkOrder.RepairReasonDesc\n\nVisit Reason Description  \nVX_WORKORDER.RepairReasonDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage1": {
            "type": "string",
            "description": "WorkOrder.RepairReasonDescLanguage1\n\nVisit Reason Description, primary language  \nVX_WORKORDER.RepairReasonDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage2": {
            "type": "string",
            "description": "WorkOrder.RepairReasonDescLanguage2\n\nVisit Reason Description, second language  \nVX_WORKORDER.RepairReasonDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage3": {
            "type": "string",
            "description": "WorkOrder.RepairReasonDescLanguage3\n\nVisit Reason Description, third language  \nVX_WORKORDER.RepairReasonDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonId": {
            "type": "string",
            "description": "WorkOrder.RepairReasonId\n\nWork Order Visit Reason  \nVX_WORKORDER.RepairReasonId string 1 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "RequisitionId": {
            "type": "string",
            "description": "WorkOrder.RequisitionId\n\nRequisition for Dept WO  \nVX_WORKORDER.RequisitionId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ServiceRequests": {
            "description": "WorkOrder.ServiceRequests\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIServiceRequest"
          },
          "Signature": {
            "type": "string",
            "description": "WorkOrder.Signature\n\nWork order signature, saved as an base64 image  \nVX_WORKORDER.Signature string  \n\nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "WorkOrder.Status\n\nWork Order Status (O (open),D (complete),C (closed),X (cancel))  \nVX_WORKORDER.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "StoredLocationId": {
            "type": "string",
            "description": "WorkOrder.StoredLocationId\n\nWhere the asset is parked after contact is notified of completed work  \nVX_WORKORDER.StoredLocationId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Tasks": {
            "description": "WorkOrder.Tasks\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWorkOrderTask"
          },
          "Title": {
            "type": "string",
            "description": "WorkOrder.Title\n\nUse visit reason description  \nVX_WORKORDER.Title string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "WorkOrder.TotalCost\n\nSum Actual WO Amount  \nVX_WORKORDER.TotalCost decimal 28,6 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitInDateTime": {
            "type": "string",
            "description": "WorkOrder.UnitInDateTime\n\nWhen the unit appeared at the shop, same as o_wo.open_dt  \nVX_WORKORDER.UnitInDateTime DateTime  \n\nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "WorkDelayDesc": {
            "type": "string",
            "description": "WorkOrder.WorkDelayDesc\n\n\"SUSPENDED\" if the work order is suspended.  \nVX_WORKORDER.WorkDelayDesc string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkDelayId": {
            "type": "string",
            "description": "WorkOrder.WorkDelayId\n\n\"SUSPENDED\" if suspended  \nVX_WORKORDER.WorkDelayId string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrder.WorkOrderId\n\nWork Order Number  \nVX_WORKORDER.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationDesc": {
            "type": "string",
            "description": "WorkOrder.WorkOrderLocationDesc\n\nLocation Description  \nVX_WORKORDER.WorkOrderLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkOrder.WorkOrderLocationId\n\nMaintenance Location  \nVX_WORKORDER.WorkOrderLocationId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "WorkOrderNoteId": {
            "type": "string",
            "description": "WorkOrder.WorkOrderNoteId\n\nFor M5, o_wo.note_id to go get the notes.  \nVX_WORKORDER.WorkOrderNoteId int  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIEmployee": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEmployee"
            }
          }
        }
      },
      "IEmployee": {
        "type": "object",
        "description": "Employee",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "EmployeeId",
          "LocationId",
          "Name"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Employee.Active\n\nFlag denoting if the employee is active.  (A - Active, T - Terminated or I - Inactive)  \nVX_EMPLOYEE.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartRequestDepartment": {
            "type": "boolean",
            "description": "Employee.AllowPartRequestDepartment\n\nAllow request parts for issue to department.  \nVX_EMPLOYEE.AllowPartRequestDepartment bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartRequestDirect": {
            "type": "boolean",
            "description": "Employee.AllowPartRequestDirect\n\nAllow request parts for issue to direct account.  \nVX_EMPLOYEE.AllowPartRequestDirect bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartRequestIndirect": {
            "type": "boolean",
            "description": "Employee.AllowPartRequestIndirect\n\nAllow request parts for issue to indirect account.  \nVX_EMPLOYEE.AllowPartRequestIndirect bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartRequestUnit": {
            "type": "boolean",
            "description": "Employee.AllowPartRequestUnit\n\nAllow request parts for issue to unit.  \nVX_EMPLOYEE.AllowPartRequestUnit bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartRequestWorkOrder": {
            "type": "boolean",
            "description": "Employee.AllowPartRequestWorkOrder\n\nAllow request parts for issue to work order.  \nVX_EMPLOYEE.AllowPartRequestWorkOrder bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Attributes": {
            "description": "Employee.Attributes\n\nList of attributes for the employee  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIEmployeeAttribute"
          },
          "BirthDate": {
            "type": "string",
            "description": "Employee.BirthDate\n\nBirthday  \nVX_EMPLOYEE.BirthDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CanAddJobsOnLabor": {
            "type": "boolean",
            "description": "Employee.CanAddJobsOnLabor\n\nWhether the employee can add jobs on labor  \nVX_EMPLOYEE.CanAddJobsOnLabor bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CanBeScheduled": {
            "type": "boolean",
            "description": "Employee.CanBeScheduled\n\nWhether the employee can work on assigned tasks/jobs  \nVX_EMPLOYEE.CanBeScheduled bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CanDoLabor": {
            "type": "boolean",
            "description": "Employee.CanDoLabor\n\nWhether the employee can charge labor  \nVX_EMPLOYEE.CanDoLabor bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ClassificationId": {
            "type": "string",
            "description": "Employee.ClassificationId\n\nJob title  \nVX_EMPLOYEE.ClassificationId string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "Employee.Comments\n\nEmployee notes  \nVX_EMPLOYEE.Comments string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CrewId": {
            "type": "string",
            "description": "Employee.CrewId\n\nCrew the employee is assigned to.  Foreign key emp_id used to select emp_group_employee.emp_group.  \nVX_EMPLOYEE.CrewId string 11 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DeptId": {
            "type": "string",
            "description": "Employee.DeptId\n\nDepartment the employee is assigned to.  Foreign key dept_id, used to select dept_main.dept_no.  \nVX_EMPLOYEE.DeptId string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DriverNumber": {
            "type": "string",
            "description": "Employee.DriverNumber\n\nCorresponding driver/operator number  \nVX_EMPLOYEE.DriverNumber string 9 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Employee.Email\n\nEmail address for the employee.  Required for email-based notifications  \nVX_EMPLOYEE.Email string 128 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "Employee.EmployeeId\n\nUnique Employee Number  \nVX_EMPLOYEE.EmployeeId string 11 \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "EmploymentDate": {
            "type": "string",
            "description": "Employee.EmploymentDate\n\nStart date  \nVX_EMPLOYEE.EmploymentDate DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FuelCard": {
            "type": "string",
            "description": "Employee.FuelCard\n\nFuel card (possibly one of many)  \nVX_EMPLOYEE.FuelCard string 25 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FuelCardPIN": {
            "type": "string",
            "description": "Employee.FuelCardPIN\n\nFuel card PIN  \nVX_EMPLOYEE.FuelCardPIN string 4 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "HomePhone": {
            "type": "string",
            "description": "Employee.HomePhone\n\nHome phone  \nVX_EMPLOYEE.HomePhone string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ImageUrl": {
            "type": "string",
            "description": "Employee.ImageUrl\n\nVX_EMPLOYEE.ImageUrl string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Employee.InternalId\n\nemp_id  \nVX_EMPLOYEE.InternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsContractor": {
            "type": "boolean",
            "description": "Employee.IsContractor\n\nIs the employee a contractor?  \nVX_EMPLOYEE.IsContractor bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsDepartmentContact": {
            "type": "boolean",
            "description": "Employee.IsDepartmentContact\n\nIs the employee a department contact?  \nVX_EMPLOYEE.IsDepartmentContact bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsDriver": {
            "type": "boolean",
            "description": "Employee.IsDriver\n\nIs the employee a driver?  \nVX_EMPLOYEE.IsDriver bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsExempt": {
            "type": "boolean",
            "description": "Employee.IsExempt\n\nIs the employee exempt?  \nVX_EMPLOYEE.IsExempt bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsInventory": {
            "type": "boolean",
            "description": "Employee.IsInventory\n\nIs the employee an inventory employee?  \nVX_EMPLOYEE.IsInventory bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsSupervisor": {
            "type": "boolean",
            "description": "Employee.IsSupervisor\n\nIs the employee a supervisor?  \nVX_EMPLOYEE.IsSupervisor bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Employee.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_EMPLOYEE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LoadPct": {
            "type": "number",
            "description": "Employee.LoadPct\n\nLoad factor base on employee title  \nVX_EMPLOYEE.LoadPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "Employee.LocationId\n\nHome location of the employee  \nVX_EMPLOYEE.LocationId string 6 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "MobilePhone": {
            "type": "string",
            "description": "Employee.MobilePhone\n\nHome phone  \nVX_EMPLOYEE.MobilePhone string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Employee.Name\n\nFull employee/driver name  \nVX_EMPLOYEE.Name string 30 \n\nValue can be updated via: PUT  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "PayClass1": {
            "type": "string",
            "description": "Employee.PayClass1\n\nPrimary pay class  \nVX_EMPLOYEE.PayClass1 string 6 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PayClass2": {
            "type": "string",
            "description": "Employee.PayClass2\n\nSecondary pay class  \nVX_EMPLOYEE.PayClass2 string 6 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PayClass3": {
            "type": "string",
            "description": "Employee.PayClass3\n\nTertiary pay class  \nVX_EMPLOYEE.PayClass3 string 6 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PayStep1": {
            "type": "string",
            "description": "Employee.PayStep1\n\nPrimary pay step  \nVX_EMPLOYEE.PayStep1 string 2 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PayStep2": {
            "type": "string",
            "description": "Employee.PayStep2\n\nSecondary pay step  \nVX_EMPLOYEE.PayStep2 string 2 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PayStep3": {
            "type": "string",
            "description": "Employee.PayStep3\n\nTertiary pay step  \nVX_EMPLOYEE.PayStep3 string 2 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "PlanResourceHours": {
            "type": "number",
            "description": "Employee.PlanResourceHours\n\nEmployee plan resource hours.  \nVX_EMPLOYEE.PlanResourceHours decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ShiftId": {
            "type": "string",
            "description": "Employee.ShiftId\n\nShift the employee is assigned to  \nVX_EMPLOYEE.ShiftId int 6 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "StandardChargeRate": {
            "type": "number",
            "description": "Employee.StandardChargeRate\n\nTypical charge rate per hour  \nVX_EMPLOYEE.StandardChargeRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "SupervisorId": {
            "type": "string",
            "description": "Employee.SupervisorId\n\nEmployee's supervisor  \nVX_EMPLOYEE.SupervisorId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsAllDepartments": {
            "type": "boolean",
            "description": "Employee.SupportsAllDepartments\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "Employee.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "TerminationDate": {
            "type": "string",
            "description": "Employee.TerminationDate\n\nEnd of employment date  \nVX_EMPLOYEE.TerminationDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TimeTypeId": {
            "type": "string",
            "description": "Employee.TimeTypeId\n\nTime type  \nVX_EMPLOYEE.TimeTypeId string 3 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "Employee.VendorId\n\nVendor associated with the employee, required for IsContractor=true  \nVX_EMPLOYEE.VendorId string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "WorkPhone": {
            "type": "string",
            "description": "Employee.WorkPhone\n\n.WorkPhone string 15 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIEmployeeAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEmployeeAttribute"
            }
          }
        }
      },
      "IEmployeeAttribute": {
        "type": "object",
        "description": "EmployeeAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AttributeId",
          "EmployeeId"
        ],
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "EmployeeAttribute.AttributeId\n\nItem description  \nVX_EMPLOYEEATTRIBUTE.AttributeId string 24 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "EmployeeAttribute.DataType\n\nType of data value  \nVX_EMPLOYEEATTRIBUTE.DataType string 7 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "EmployeeAttribute.DefaultValue\n\nDefault value  \nVX_EMPLOYEEATTRIBUTE.DefaultValue string 50 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "EmployeeAttribute.DisplayOrder\n\nAlphabetical order  \nVX_EMPLOYEEATTRIBUTE.DisplayOrder int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "EmployeeAttribute.EmployeeId\n\nEmployee number  \nVX_EMPLOYEEATTRIBUTE.EmployeeId string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "EmployeeInternalId": {
            "type": "integer",
            "description": "EmployeeAttribute.EmployeeInternalId\n\nEmployee number  \nVX_EMPLOYEEATTRIBUTE.EmployeeInternalId long 15 \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "EmployeeAttribute.InternalId\n\nM5 Forced to: 0 \nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "EmployeeAttribute.LabelText\n\nItem description  \nVX_EMPLOYEEATTRIBUTE.LabelText string 24 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "EmployeeAttribute.LastChangedDateTime\n\nWhen the item value last changed  \nVX_EMPLOYEEATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "EmployeeAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_EMPLOYEEATTRIBUTE.ValidateAgainstList bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "EmployeeAttribute.ValidList\n\nList of valid values  \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "EmployeeAttribute.Value\n\nItem value, required on put if value is not null  \nVX_EMPLOYEEATTRIBUTE.Value string 50 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "EmployeeAttribute.ValueRequired\n\nIs a value required?  \nVX_EMPLOYEEATTRIBUTE.ValueRequired bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIVendor": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendor"
            }
          }
        }
      },
      "IVendor": {
        "type": "object",
        "description": "Vendor",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Description",
          "VendorId"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Vendor.Active\n\nIndicator if the vendor is active or disabled.  Y means active, null means disabled.    \nvx_vendor.Active bool 1 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrAddress1": {
            "type": "string",
            "description": "Vendor.AdrAddress1\n\nFirst line of address  \nVX_VENDOR.AdrAddress1 string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrAddress2": {
            "type": "string",
            "description": "Vendor.AdrAddress2\n\nSecond line of address  \nVX_VENDOR.AdrAddress2 string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrCountry": {
            "type": "string",
            "description": "Vendor.AdrCountry\n\nCountry  \nVX_VENDOR.AdrCountry string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrMunicipality": {
            "type": "string",
            "description": "Vendor.AdrMunicipality\n\nMunicipality or city  \nVX_VENDOR.AdrMunicipality string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrPostalCode": {
            "type": "string",
            "description": "Vendor.AdrPostalCode\n\nZip or postal code  \nVX_VENDOR.AdrPostalCode string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AdrStateProvince": {
            "type": "string",
            "description": "Vendor.AdrStateProvince\n\nState or province  \nVX_VENDOR.AdrStateProvince string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AllowCommercialWork": {
            "type": "boolean",
            "description": "Vendor.AllowCommercialWork\n\nM5 Forced to: true \nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AllowEquipment": {
            "type": "boolean",
            "description": "Vendor.AllowEquipment\n\nM5 Forced to: true \nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AllowFuel": {
            "type": "boolean",
            "description": "Vendor.AllowFuel\n\nM5 Forced to: true \nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AllowParts": {
            "type": "boolean",
            "description": "Vendor.AllowParts\n\n.AllowParts bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowPartsRepair": {
            "type": "boolean",
            "description": "Vendor.AllowPartsRepair\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowPartsWarranty": {
            "type": "boolean",
            "description": "Vendor.AllowPartsWarranty\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowTesting": {
            "type": "boolean",
            "description": "Vendor.AllowTesting\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowWarranty": {
            "type": "boolean",
            "description": "Vendor.AllowWarranty\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "Attributes": {
            "description": "Vendor.Attributes\n\nList of attributes for the vendor  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendorAttribute"
          },
          "BillingAddress1": {
            "type": "string",
            "description": "Vendor.BillingAddress1\n\nFirst line of billing address  \nVX_VENDOR.BillingAddress1 string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingAddress2": {
            "type": "string",
            "description": "Vendor.BillingAddress2\n\nSecond line of billing address  \nVX_VENDOR.BillingAddress2 string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingAddressSameAsMail": {
            "type": "boolean",
            "description": "Vendor.BillingAddressSameAsMail\n\nIs Billing Address the same as mailing address?  \nVX_VENDOR.BillingAddressSameAsMail bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingCity": {
            "type": "string",
            "description": "Vendor.BillingCity\n\nBilling city  \nVX_VENDOR.BillingCity string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingContactName": {
            "type": "string",
            "description": "Vendor.BillingContactName\n\nBilling Contact's Name  \nVX_VENDOR.BillingContactName string 20 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingContactPhone": {
            "type": "string",
            "description": "Vendor.BillingContactPhone\n\nBilling Contact's Phone  \nVX_VENDOR.BillingContactPhone string 15 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingContactPhoneExt": {
            "type": "string",
            "description": "Vendor.BillingContactPhoneExt\n\nBilling Contact's Phone Extension  \nVX_VENDOR.BillingContactPhoneExt string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingCountry": {
            "type": "string",
            "description": "Vendor.BillingCountry\n\nBilling Country  \nVX_VENDOR.BillingCountry string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingCounty": {
            "type": "string",
            "description": "Vendor.BillingCounty\n\nBilling County  \nVX_VENDOR.BillingCounty string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingEmailAddress": {
            "type": "string",
            "description": "Vendor.BillingEmailAddress\n\nBilling Contact's EmailAddress  \nVX_VENDOR.BillingEmailAddress string 128 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingPostalCode": {
            "type": "string",
            "description": "Vendor.BillingPostalCode\n\nBilling Postal or Zip code  \nVX_VENDOR.BillingPostalCode string 12 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingRegion": {
            "type": "string",
            "description": "Vendor.BillingRegion\n\nBilling Region  \nVX_VENDOR.BillingRegion string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "BillingStateProvince": {
            "type": "string",
            "description": "Vendor.BillingStateProvince\n\nBilling State or Province  \nVX_VENDOR.BillingStateProvince string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "BillingType": {
            "type": "string",
            "description": "Vendor.BillingType\n\nBilling Type - 'CORPORATE' or 'DIRECT'; CORPORATE allows for a CorporateVendorId  \nVX_VENDOR.BillingType string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "Vendor.Comments\n\nM5 notes are one big note  \nVX_VENDOR.Comments string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "Vendor.ContactName\n\nvx_vendor.ContactName string 20 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Contacts": {
            "description": "Vendor.Contacts\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendorContact"
          },
          "CorporateVendorDesc": {
            "type": "string",
            "description": "Vendor.CorporateVendorDesc\n\nCorporate Vendor ID Description  \nvx_vendor.CorporateVendorDesc string 50 \n\nSearchable: True ",
            "nullable": true
          },
          "CorporateVendorId": {
            "type": "string",
            "description": "Vendor.CorporateVendorId\n\nCorporate Vendor ID  \nvx_vendor.CorporateVendorId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "description": "Vendor.CurrencyCode\n\nVendor's locale's currency code  \nVX_VENDOR.CurrencyCode string  \n\nSearchable: False ",
            "nullable": true
          },
          "CustomerAccount": {
            "type": "string",
            "description": "Vendor.CustomerAccount\n\nCustomer's account number  \nVX_VENDOR.CustomerAccount string 125 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Vendor.Description\n\nVendor Name  \nVX_VENDOR.Description string 20 \n\nValue can be updated via: PUT  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "DiscountDays": {
            "type": "integer",
            "description": "Vendor.DiscountDays\n\nDiscount if paid within this many days  \nVX_VENDOR.DiscountDays int  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DiscountPct": {
            "type": "integer",
            "description": "Vendor.DiscountPct\n\nDiscount percentage (0-100) if paid within DiscountDays  \nVX_VENDOR.DiscountPct int  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "EEOCStatus": {
            "type": "boolean",
            "description": "Vendor.EEOCStatus\n\nEEOC Status, true or false  \n.EEOCStatus bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "EmailAddress": {
            "type": "string",
            "description": "Vendor.EmailAddress\n\nvx_vendor.EmailAddress string 128 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Fax": {
            "type": "string",
            "description": "Vendor.Fax\n\nvx_vendor.Fax string 15 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Vendor.InternalId\n\nvx_vendor.InternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Vendor.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_VENDOR.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPoId": {
            "type": "string",
            "description": "Vendor.LastPoId\n\nLast order created  \nVX_VENDOR.LastPoId string  \n\nSearchable: False ",
            "nullable": true
          },
          "LastPoOrderedDateTime": {
            "type": "string",
            "description": "Vendor.LastPoOrderedDateTime\n\nDate of last order  \nVX_VENDOR.LastPoOrderedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPoStatus": {
            "type": "string",
            "description": "Vendor.LastPoStatus\n\nLast order created  \nVX_VENDOR.LastPoStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "LeadDays": {
            "type": "integer",
            "description": "Vendor.LeadDays\n\nLead time in days  \nVX_VENDOR.LeadDays int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LocationGroups": {
            "description": "Vendor.LocationGroups\n\nLocation groups for the vendor  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfILocationGroup"
          },
          "NetTermsDays": {
            "type": "integer",
            "description": "Vendor.NetTermsDays\n\nNet Terms in days net_terms / (1000*60*60*24)  \nVX_VENDOR.NetTermsDays long  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Notes": {
            "description": "Vendor.Notes\n\nM5 notes are kept as Comments  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "OpenOrders": {
            "type": "integer",
            "description": "Vendor.OpenOrders\n\nHow many open orders does the vendor have?  \nVX_VENDOR.OpenOrders int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Vendor.Phone\n\nvx_vendor.Phone string 15 \n\nValue can be updated via: PUT  \nSearchable: True ",
            "nullable": true
          },
          "RMARequired": {
            "type": "boolean",
            "description": "Vendor.RMARequired\n\nIs an RMA required for a return?  System flag 2058.  \nVX_VENDOR.RMARequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "Vendor.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "Vendor.TaxSchemeId\n\nTax Scheme  \nVX_VENDOR.TaxSchemeId string 10 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "VarianceAllowedonWO": {
            "type": "integer",
            "description": "Vendor.VarianceAllowedonWO\n\nVariance allowed on work order?  \nVX_VENDOR.VarianceAllowedonWO int  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "Vendor.VendorId\n\nvx_vendor.VendorId string 12 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "VendorTicketAllowed": {
            "type": "boolean",
            "description": "Vendor.VendorTicketAllowed\n\nMay this vendor have tickets created for it?  \nvx_vendor.VendorTicketAllowed bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorTypes": {
            "description": "Vendor.VendorTypes\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendorVendorType"
          },
          "Website": {
            "type": "string",
            "description": "Vendor.Website\n\nVX_VENDOR.Website string 128 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationDescDefault": {
            "type": "string",
            "description": "Vendor.WorkOrderLocationDescDefault\n\nMaintenance location decsription - outside vendor  \nVX_VENDOR.WorkOrderLocationDescDefault string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationIdDefault": {
            "type": "string",
            "description": "Vendor.WorkOrderLocationIdDefault\n\nMaintenance location - outside vendor  \nVX_VENDOR.WorkOrderLocationIdDefault string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIVendorAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorAttribute"
            }
          }
        }
      },
      "IVendorAttribute": {
        "type": "object",
        "description": "VendorAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AttributeId",
          "VendorId"
        ],
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "VendorAttribute.AttributeId\n\nItem description  \nVX_VENDORATTRIBUTE.AttributeId string 24 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "VendorAttribute.DataType\n\nType of data value  \nVX_VENDORATTRIBUTE.DataType string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "VendorAttribute.DefaultValue\n\nDefault value  \nVX_VENDORATTRIBUTE.DefaultValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "VendorAttribute.DisplayOrder\n\nAlphabetical order  \nVX_VENDORATTRIBUTE.DisplayOrder int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "VendorAttribute.InternalId\n\nM5 Forced to: 0 \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "VendorAttribute.LabelText\n\nItem description  \nVX_VENDORATTRIBUTE.LabelText string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "VendorAttribute.LastChangedDateTime\n\nWhen the item value last changed  \nVX_VENDORATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "VendorAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_VENDORATTRIBUTE.ValidateAgainstList bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "VendorAttribute.ValidList\n\nList of valid values  \nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "VendorAttribute.Value\n\nItem value  \nVX_VENDORATTRIBUTE.Value string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "VendorAttribute.ValueRequired\n\nIs a value required?  \nVX_VENDORATTRIBUTE.ValueRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "VendorAttribute.VendorId\n\nUnique code for the Vendor  \nVX_VENDORATTRIBUTE.VendorId string 12 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "VendorAttribute.VendorInternalId\n\nVendor Id  \nVX_VENDORATTRIBUTE.VendorInternalId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIVendorContact": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorContact"
            }
          }
        }
      },
      "IVendorContact": {
        "type": "object",
        "description": "VendorContact",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AdrAddress1": {
            "type": "string",
            "description": "VendorContact.AdrAddress1\n\nFirst line of address  \nVX_VENDORCONTACT.AdrAddress1 string  \n\nSearchable: False ",
            "nullable": true
          },
          "AdrAddress2": {
            "type": "string",
            "description": "VendorContact.AdrAddress2\n\nSecond line of address  \nVX_VENDORCONTACT.AdrAddress2 string  \n\nSearchable: False ",
            "nullable": true
          },
          "AdrCountry": {
            "type": "string",
            "description": "VendorContact.AdrCountry\n\nCountry  \nVX_VENDORCONTACT.AdrCountry string  \n\nSearchable: False ",
            "nullable": true
          },
          "AdrMunicipality": {
            "type": "string",
            "description": "VendorContact.AdrMunicipality\n\nMunicipality or city  \nVX_VENDORCONTACT.AdrMunicipality string  \n\nSearchable: False ",
            "nullable": true
          },
          "AdrPostalCode": {
            "type": "string",
            "description": "VendorContact.AdrPostalCode\n\nZip or postal code  \nVX_VENDORCONTACT.AdrPostalCode string  \n\nSearchable: False ",
            "nullable": true
          },
          "AdrStateProvince": {
            "type": "string",
            "description": "VendorContact.AdrStateProvince\n\nState or province  \nVX_VENDORCONTACT.AdrStateProvince string  \n\nSearchable: False ",
            "nullable": true
          },
          "EmailAddress": {
            "type": "string",
            "description": "VendorContact.EmailAddress\n\nEmail address  \nVX_VENDORCONTACT.EmailAddress string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "VendorContact.InternalId\n\nContact Id  \nVX_VENDORCONTACT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LocationDesc": {
            "type": "string",
            "description": "VendorContact.LocationDesc\n\nLocation description  \nVX_VENDORCONTACT.LocationDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "VendorContact.LocationId\n\nLocation Id  \nVX_VENDORCONTACT.LocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "VendorContact.Mobile\n\nMobile phone number  \nVX_VENDORCONTACT.Mobile string  \n\nSearchable: False ",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "VendorContact.Name\n\nName of contact person at the vendor  \nVX_VENDORCONTACT.Name string  \n\nSearchable: False ",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "VendorContact.Phone\n\nPhone number  \nVX_VENDORCONTACT.Phone string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "VendorContact.VendorId\n\nVX_VENDORCONTACT.VendorId string  \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfILocationGroup": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ILocationGroup"
            }
          }
        }
      },
      "ILocationGroup": {
        "type": "object",
        "description": "LocationGroup",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "LastChangedDateTime": {
            "type": "string",
            "description": "LocationGroup.LastChangedDateTime\n\nLast Changed Date  \nVX_LOCATIONGROUP.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationGroupId": {
            "type": "string",
            "description": "LocationGroup.LocationGroupId\n\nUnique code for the Location Group  \nVX_LOCATIONGROUP.LocationGroupId string 30 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIVendorVendorType": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorVendorType"
            }
          }
        }
      },
      "IVendorVendorType": {
        "type": "object",
        "description": "VendorVendorType",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "LastChangedDateTime": {
            "type": "string",
            "description": "VendorVendorType.LastChangedDateTime\n\nLast changed date and time on main record.  \nvx_vendorvendortype.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "VendorVendorType.LocationId\n\nLocation ID  \nvx_vendorvendortype.LocationId string  \n\nSearchable: True ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "VendorVendorType.VendorId\n\nVendor ID  \nvx_vendorvendortype.VendorId string  \n\nSearchable: True ",
            "nullable": true
          },
          "VendorType": {
            "type": "string",
            "description": "VendorVendorType.VendorType\n\nVendor Service Code  \nvx_vendorvendortype.VendorType string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorTypeDesc": {
            "type": "string",
            "description": "VendorVendorType.VendorTypeDesc\n\nvx_vendorvendortype.VendorTypeDesc string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIWorkOrderAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderAttribute"
            }
          }
        }
      },
      "IWorkOrderAttribute": {
        "type": "object",
        "description": "WorkOrderAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AttributeId",
          "WorkOrderId"
        ],
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "WorkOrderAttribute.AttributeId\n\nItem description  \nVX_WORKORDERATTRIBUTE.AttributeId string 24 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "WorkOrderAttribute.DataType\n\nType of data value  \nVX_WORKORDERATTRIBUTE.DataType string 7 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "WorkOrderAttribute.DefaultValue\n\nDefault value  \nVX_WORKORDERATTRIBUTE.DefaultValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "WorkOrderAttribute.DisplayOrder\n\nAlphabetical order  \nVX_WORKORDERATTRIBUTE.DisplayOrder int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkOrderAttribute.InternalId\n\nM5 Forced to: 0 \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "WorkOrderAttribute.LabelText\n\nItem description  \nVX_WORKORDERATTRIBUTE.LabelText string 24 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderAttribute.LastChangedDateTime\n\nWhen the item value last changed  \nVX_WORKORDERATTRIBUTE.LastChangedDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "WorkOrderAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_WORKORDERATTRIBUTE.ValidateAgainstList bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "WorkOrderAttribute.ValidList\n\nList of valid values  \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "WorkOrderAttribute.Value\n\nItem value  \nVX_WORKORDERATTRIBUTE.Value string 50 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "WorkOrderAttribute.ValueRequired\n\nIs a value required?  \nVX_WORKORDERATTRIBUTE.ValueRequired bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderAttribute.WorkOrderId\n\nWork Order Number  \nVX_WORKORDERATTRIBUTE.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIServiceRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IServiceRequest"
            }
          }
        }
      },
      "IServiceRequest": {
        "type": "object",
        "description": "ServiceRequest",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "Occurrence",
          "RepairReasonId",
          "ShopId",
          "TaskId",
          "WorkOrderId"
        ],
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "ServiceRequest.AssetDesc\n\nUnit Description  \nVX_SERVICEREQUEST.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "ServiceRequest.AssetId\n\nObject of the work  \nVX_SERVICEREQUEST.AssetId string 30 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "AssignedEmployeeId": {
            "type": "string",
            "description": "ServiceRequest.AssignedEmployeeId\n\nEmployee Number  \nVX_SERVICEREQUEST.AssignedEmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "AssignedEmployeeName": {
            "type": "string",
            "description": "ServiceRequest.AssignedEmployeeName\n\nEmployee Name  \nVX_SERVICEREQUEST.AssignedEmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "ServiceRequest.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "CauseComment": {
            "type": "string",
            "description": "ServiceRequest.CauseComment\n\nCause Notes  \nVX_SERVICEREQUEST.CauseComment string  \n\nSearchable: False ",
            "nullable": true
          },
          "CauseNoteId": {
            "type": "integer",
            "description": "ServiceRequest.CauseNoteId\n\nCause Note Id  \nVX_SERVICEREQUEST.CauseNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "ServiceRequest.Comments\n\nWrite-only area for a new note.  \nVX_SERVICEREQUEST.Comments string 1000 \n\nSearchable: False ",
            "nullable": true
          },
          "ComplaintComment": {
            "type": "string",
            "description": "ServiceRequest.ComplaintComment\n\nComplaint notes  \nVX_SERVICEREQUEST.ComplaintComment string  \n\nSearchable: False ",
            "nullable": true
          },
          "ComplaintNoteId": {
            "type": "integer",
            "description": "ServiceRequest.ComplaintNoteId\n\nComplaint Note Id  \nVX_SERVICEREQUEST.ComplaintNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "ServiceRequest.ContactName\n\nWho to talk to about asset issues; who to release to when work is done  \nVX_SERVICEREQUEST.ContactName string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ContactPhone": {
            "type": "string",
            "description": "ServiceRequest.ContactPhone\n\nWho to call with questions about the asset or work  \nVX_SERVICEREQUEST.ContactPhone string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CorrectionComment": {
            "type": "string",
            "description": "ServiceRequest.CorrectionComment\n\nCorrection Notes  \nVX_SERVICEREQUEST.CorrectionComment string  \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectionNoteId": {
            "type": "integer",
            "description": "ServiceRequest.CorrectionNoteId\n\nCorrection Note Id  \nVX_SERVICEREQUEST.CorrectionNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CostEst": {
            "type": "number",
            "description": "ServiceRequest.CostEst\n\nEstimated Job Cost  \nVX_SERVICEREQUEST.CostEst double 10 \n\nSearchable: False ",
            "format": "double",
            "nullable": true
          },
          "CreateDateTime": {
            "type": "string",
            "description": "ServiceRequest.CreateDateTime\n\nWR Create date  \nVX_SERVICEREQUEST.CreateDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CreatedByUserId": {
            "type": "string",
            "description": "ServiceRequest.CreatedByUserId\n\nEmployee who created the work request  \nVX_SERVICEREQUEST.CreatedByUserId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "ServiceRequest.Description\n\nVisit Reason Description  \nVX_SERVICEREQUEST.Description string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DueDateTime": {
            "type": "string",
            "description": "ServiceRequest.DueDateTime\n\nDue date of the wr  \nVX_SERVICEREQUEST.DueDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EarliestDateTime": {
            "type": "string",
            "description": "ServiceRequest.EarliestDateTime\n\nFirst date the wr should be done  \nVX_SERVICEREQUEST.EarliestDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IncidentId": {
            "type": "integer",
            "description": "ServiceRequest.IncidentId\n\nRelated incident number  \nVX_SERVICEREQUEST.IncidentId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "ServiceRequest.InternalId\n\nWork request number  \nVX_SERVICEREQUEST.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsCurrentlyDue": {
            "type": "boolean",
            "description": "ServiceRequest.IsCurrentlyDue\n\nTrue if within mf1036 days and not on a work order  \nVX_SERVICEREQUEST.IsCurrentlyDue bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LaborHoursEst": {
            "type": "number",
            "description": "ServiceRequest.LaborHoursEst\n\nEstimated Labor Hours  \nVX_SERVICEREQUEST.LaborHoursEst double 10 \n\nSearchable: False ",
            "format": "double",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "ServiceRequest.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SERVICEREQUEST.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LatestDateTime": {
            "type": "string",
            "description": "ServiceRequest.LatestDateTime\n\nThe latest date for the work request.  \nVX_SERVICEREQUEST.LatestDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Locked": {
            "type": "boolean",
            "description": "ServiceRequest.Locked\n\nFlag to indicate whether the work request is locked or not.  \nVX_SERVICEREQUEST.Locked bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "NextDue": {
            "type": "boolean",
            "description": "ServiceRequest.NextDue\n\nFor a work request with multiple occurrences, this is the next one to be performed  \nVX_SERVICEREQUEST.NextDue bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Notes": {
            "description": "ServiceRequest.Notes\n\nNeed to put notes together with NoteID lookup.  Needs a lookup model.  Work_occurance.wreq_note_id ties to work_req_note.wreq_note_id. Union of General Notes, Complaint Notes, Cause Notes, and Correction Notes into single property.  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "Occurrence": {
            "type": "integer",
            "description": "ServiceRequest.Occurrence\n\nOccurrence of work request  \nVX_SERVICEREQUEST.Occurrence int 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int32",
            "nullable": true
          },
          "PriorityDesc": {
            "type": "string",
            "description": "ServiceRequest.PriorityDesc\n\nWork Request Priority Description  \nVX_SERVICEREQUEST.PriorityDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "ServiceRequest.PriorityId\n\nWork Request Priority  \nVX_SERVICEREQUEST.PriorityId int 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "RecordType": {
            "type": "string",
            "description": "ServiceRequest.RecordType\n\n'U' for unit (asset), 'D' for department  \nVX_SERVICEREQUEST.RecordType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDesc": {
            "type": "string",
            "description": "ServiceRequest.RepairReasonDesc\n\nVisit Reason Description  \nVX_SERVICEREQUEST.RepairReasonDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage1": {
            "type": "string",
            "description": "ServiceRequest.RepairReasonDescLanguage1\n\nVisit Reason Description, primary language  \nVX_SERVICEREQUEST.RepairReasonDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage2": {
            "type": "string",
            "description": "ServiceRequest.RepairReasonDescLanguage2\n\nVisit Reason Description, second language  \nVX_SERVICEREQUEST.RepairReasonDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage3": {
            "type": "string",
            "description": "ServiceRequest.RepairReasonDescLanguage3\n\nVisit Reason Description, third language  \nVX_SERVICEREQUEST.RepairReasonDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonId": {
            "type": "string",
            "description": "ServiceRequest.RepairReasonId\n\nWork Order Visit Reason  \nVX_SERVICEREQUEST.RepairReasonId string 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "string",
            "description": "ServiceRequest.ServiceRequestId\n\nWork Request No, but a string because we have to send \"NEW\"  \nVX_SERVICEREQUEST.ServiceRequestId string 15 \n\nSearchable: True ",
            "nullable": true
          },
          "ServiceRequestNoteId": {
            "type": "integer",
            "description": "ServiceRequest.ServiceRequestNoteId\n\nWork Request Note Id  \nVX_SERVICEREQUEST.ServiceRequestNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ShopDesc": {
            "type": "string",
            "description": "ServiceRequest.ShopDesc\n\nWork request's location's description  \nVX_SERVICEREQUEST.ShopDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ShopId": {
            "type": "string",
            "description": "ServiceRequest.ShopId\n\nMaintenance Location  \nVX_SERVICEREQUEST.ShopId string 6 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "ServiceRequest.Status\n\nForced to \"PENDING\" to match FA  \nVX_SERVICEREQUEST.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "SymptomComment": {
            "type": "string",
            "description": "ServiceRequest.SymptomComment\n\nVX_SERVICEREQUEST.SymptomComment string 1000 \n\nSearchable: False ",
            "nullable": true
          },
          "SymptomId": {
            "type": "string",
            "description": "ServiceRequest.SymptomId\n\nUse visit reason description  \nVX_SERVICEREQUEST.SymptomId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "ServiceRequest.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_SERVICEREQUEST.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "ServiceRequest.TaskId\n\nWac-System-System/Assembly code  \nVX_SERVICEREQUEST.TaskId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TaskReason": {
            "type": "string",
            "description": "ServiceRequest.TaskReason\n\nJob Visit Reason  \nVX_SERVICEREQUEST.TaskReason string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Tasks": {
            "description": "ServiceRequest.Tasks\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIServiceRequestTask"
          },
          "TechSpecId": {
            "type": "string",
            "description": "ServiceRequest.TechSpecId\n\nTech Spec Number  \nVX_SERVICEREQUEST.TechSpecId string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "ServiceRequest.VendorDesc\n\nVendor Name  \nVX_SERVICEREQUEST.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "ServiceRequest.VendorId\n\nVendor Number  \nVX_SERVICEREQUEST.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyViolation": {
            "type": "string",
            "description": "ServiceRequest.WarrantyViolation\n\nKind of violation:  SYSTEM/COMPONENT, WHOLE UNIT, NONE, etc.  \nVX_SERVICEREQUEST.WarrantyViolation string 16 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "ServiceRequest.WorkOrderId\n\nWork Order Number - used for urls  \nVX_SERVICEREQUEST.WorkOrderId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "ServiceRequest.WorkOrderLocationId\n\nMaintenance Location  \nVX_SERVICEREQUEST.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkPlanDesc": {
            "type": "string",
            "description": "ServiceRequest.WorkPlanDesc\n\nWork plan description  \nVX_SERVICEREQUEST.WorkPlanDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkPlanId": {
            "type": "integer",
            "description": "ServiceRequest.WorkPlanId\n\nWork Plan Id  \nVX_SERVICEREQUEST.WorkPlanId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIServiceRequestTask": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IServiceRequestTask"
            }
          }
        }
      },
      "IServiceRequestTask": {
        "type": "object",
        "description": "ServiceRequestTask",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ILookupItemOfIWorkOrderTask": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderTask"
            }
          }
        }
      },
      "IWorkOrderTask": {
        "type": "object",
        "description": "WorkOrderTask",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "TaskId",
          "TaskStatusId",
          "WorkOrderId"
        ],
        "properties": {
          "AccidentId": {
            "type": "string",
            "description": "WorkOrderTask.AccidentId\n\nAccident number that generated this job.  \nVX_WORKORDERTASK.AccidentId string 15 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "WorkOrderTask.AccountId\n\nDirect account number to charge.  \nVX_WORKORDERTASK.AccountId string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "WorkOrderTask.AssetDesc\n\nDescription of Equipment. (Unit = Year, Make Model / Dept = Dept_Desc / Comp = Bill_Acct)    \nVX_WORKORDERTASK.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WorkOrderTask.AssetId\n\nEquipment Number  \nVX_WORKORDERTASK.AssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AssignedEmployees": {
            "description": "WorkOrderTask.AssignedEmployees\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWorkAssignment"
          },
          "AssignedVendors": {
            "description": "WorkOrderTask.AssignedVendors\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendor"
          },
          "AssignmentEmployeeId": {
            "type": "string",
            "description": "WorkOrderTask.AssignmentEmployeeId\n\nEmployee or crew assigned to the job/task  \nVX_WORKORDERTASK.AssignmentEmployeeId string 11 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AssignmentEmployeeName": {
            "type": "string",
            "description": "WorkOrderTask.AssignmentEmployeeName\n\nName of employee or crew assigned to the task/job  \nVX_WORKORDERTASK.AssignmentEmployeeName string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "WorkOrderTask.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "BookHoursEst": {
            "type": "number",
            "description": "WorkOrderTask.BookHoursEst\n\nBook Time, converted from Milliseconds  \nVX_WORKORDERTASK.BookHoursEst decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CanPunchIn": {
            "type": "boolean",
            "description": "WorkOrderTask.CanPunchIn\n\nCan an employee punch into this task?  \nVX_WORKORDERTASK.CanPunchIn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CauseCorrectionNoteRequired": {
            "type": "boolean",
            "description": "WorkOrderTask.CauseCorrectionNoteRequired\n\nIs cause and correction note required on a warranty violation?  \nVX_WORKORDERTASK.CauseCorrectionNoteRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CauseNoteId": {
            "type": "integer",
            "description": "WorkOrderTask.CauseNoteId\n\nCause note id  \nVX_WORKORDERTASK.CauseNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CauseNotes": {
            "description": "WorkOrderTask.CauseNotes\n\nForeign key to Cause Note.   Notes are in chunks of 4000 characters and need to be joined.  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "ClosedAdjustmentReasonId": {
            "type": "string",
            "description": "WorkOrderTask.ClosedAdjustmentReasonId\n\nFor M5, o_wo.closed_wo_reason to go get the closed adjustment reason.  \nVX_WORKORDERTASK.ClosedAdjustmentReasonId string  \n\nSearchable: False ",
            "nullable": true
          },
          "CommercialCost": {
            "type": "number",
            "description": "WorkOrderTask.CommercialCost\n\nTotal Commercial Cost  \nVX_WORKORDERTASK.CommercialCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ComplaintNoteId": {
            "type": "integer",
            "description": "WorkOrderTask.ComplaintNoteId\n\nComplaint note id  \nVX_WORKORDERTASK.ComplaintNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ComplaintNoteRequired": {
            "type": "boolean",
            "description": "WorkOrderTask.ComplaintNoteRequired\n\nIs a complaint note required on a warranty violation?  \nVX_WORKORDERTASK.ComplaintNoteRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ComplaintNotes": {
            "description": "WorkOrderTask.ComplaintNotes\n\nForeign key to Complaint Note.  Notes are in chunks of 4000 characters and need to be joined.  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "CorrectionNoteId": {
            "type": "integer",
            "description": "WorkOrderTask.CorrectionNoteId\n\nCorrection note id  \nVX_WORKORDERTASK.CorrectionNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CorrectionNotes": {
            "description": "WorkOrderTask.CorrectionNotes\n\nForeign key to Correction Note.   Notes are in chunks of 4000 characters and need to be joined.  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "DataScienceProvider": {
            "type": "string",
            "description": "WorkOrderTask.DataScienceProvider\n\nData science provider  \nVX_WORKORDERTASK.DataScienceProvider string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DefectDateTime": {
            "type": "string",
            "description": "WorkOrderTask.DefectDateTime\n\nWhen the defect was created, primarily for DVIR.  \nVX_WORKORDERTASK.DefectDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DefectNumber": {
            "type": "string",
            "description": "WorkOrderTask.DefectNumber\n\nDefect number, primarily for DVIR.  \nVX_WORKORDERTASK.DefectNumber string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "ExternalData": {
            "type": "string",
            "description": "WorkOrderTask.ExternalData\n\nExternal Data   \nVX_WORKORDERTASK.ExternalData string 15 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "WorkOrderTask.HasAttachments\n\nJob has attachments, Y or N.  \nVX_WORKORDERTASK.HasAttachments bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "HasChecklist": {
            "type": "boolean",
            "description": "WorkOrderTask.HasChecklist\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "HasNotes": {
            "type": "boolean",
            "description": "WorkOrderTask.HasNotes\n\nDoes the job have notes?  \nVX_WORKORDERTASK.HasNotes bool  \n\nSearchable: False ",
            "nullable": true
          },
          "HasTestSuite": {
            "type": "boolean",
            "description": "WorkOrderTask.HasTestSuite\n\nDoes the job have test suites?  \nVX_WORKORDERTASK.HasTestSuite bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "IncidentId": {
            "type": "integer",
            "description": "WorkOrderTask.IncidentId\n\nIncident number, ties to work request  \nVX_WORKORDERTASK.IncidentId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkOrderTask.InternalId\n\nUnique ID system generated  \nVX_WORKORDERTASK.InternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsFinalStatus": {
            "type": "boolean",
            "description": "WorkOrderTask.IsFinalStatus\n\nIs this task one that allows for completion or closing a work order?  \nVX_WORKORDERTASK.IsFinalStatus bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "WorkOrderTask.LaborCost\n\nJob Actual Labor Cost   \nVX_WORKORDERTASK.LaborCost decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "WorkOrderTask.LaborHours\n\nActual Labour Hours, converted from Milliseconds  \nVX_WORKORDERTASK.LaborHours decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHoursEst": {
            "type": "number",
            "description": "WorkOrderTask.LaborHoursEst\n\nEstimated Labor Hours, converted from Milliseconds  \nVX_WORKORDERTASK.LaborHoursEst decimal 18 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborPositionRequired": {
            "type": "boolean",
            "description": "WorkOrderTask.LaborPositionRequired\n\nDoes a labor charge require a position code?  \nVX_WORKORDERTASK.LaborPositionRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderTask.LastChangedDateTime\n\nLast Changed Date  \nVX_WORKORDERTASK.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Notes": {
            "description": "WorkOrderTask.Notes\n\nForeign key to Job Note.   Notes are in chunks of 4000 characters and need to be joined.  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "PartPositionRequired": {
            "type": "boolean",
            "description": "WorkOrderTask.PartPositionRequired\n\nIs a position required on a part charge?  \nVX_WORKORDERTASK.PartPositionRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PartRequests": {
            "description": "WorkOrderTask.PartRequests\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartRequest"
          },
          "PartRequestStatus": {
            "type": "string",
            "description": "WorkOrderTask.PartRequestStatus\n\nPart Request Status (Ready, Partial, Waiting Approval, etc.)  \nVX_WORKORDERTASK.PartRequestStatus string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "PartReservesPending": {
            "type": "boolean",
            "description": "WorkOrderTask.PartReservesPending\n\nTrue if the job has reserves requested or ordered for the job, or for the work order (and no job specified), or for the asset (if no work order specified)  \nVX_WORKORDERTASK.PartReservesPending bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "PartReservesReady": {
            "type": "boolean",
            "description": "WorkOrderTask.PartReservesReady\n\nTrue if the job has reserves ready to be issued for the job, or for the work order (and no job specified), or for the asset (if no work order specified)  \nVX_WORKORDERTASK.PartReservesReady bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Parts": {
            "description": "WorkOrderTask.Parts\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWorkOrderPart"
          },
          "PartsCost": {
            "type": "number",
            "description": "WorkOrderTask.PartsCost\n\nJob Actual Part Cost  \nVX_WORKORDERTASK.PartsCost decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PriorityDesc": {
            "type": "string",
            "description": "WorkOrderTask.PriorityDesc\n\nJob Priority Description  \nVX_WORKORDERTASK.PriorityDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "WorkOrderTask.PriorityId\n\nJob Priority Can be user defined list of priority codes  \nVX_WORKORDERTASK.PriorityId int 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ProjectId": {
            "type": "string",
            "description": "WorkOrderTask.ProjectId\n\nWork Order project tracking code  \nVX_WORKORDERTASK.ProjectId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "RecordType": {
            "type": "string",
            "description": "WorkOrderTask.RecordType\n\nType of asset, U, D or C  \nVX_WORKORDERTASK.RecordType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDesc": {
            "type": "string",
            "description": "WorkOrderTask.RepairReasonDesc\n\nJob Visit Reason Description  \nVX_WORKORDERTASK.RepairReasonDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage1": {
            "type": "string",
            "description": "WorkOrderTask.RepairReasonDescLanguage1\n\nJob Visit Reason Description, primary language  \nVX_WORKORDERTASK.RepairReasonDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage2": {
            "type": "string",
            "description": "WorkOrderTask.RepairReasonDescLanguage2\n\nJob Visit Reason Description, second language  \nVX_WORKORDERTASK.RepairReasonDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDescLanguage3": {
            "type": "string",
            "description": "WorkOrderTask.RepairReasonDescLanguage3\n\nJob Visit Reason Description, third language  \nVX_WORKORDERTASK.RepairReasonDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonId": {
            "type": "string",
            "description": "WorkOrderTask.RepairReasonId\n\nJob Visit Reason  \nVX_WORKORDERTASK.RepairReasonId string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequiredDateTime": {
            "type": "string",
            "description": "WorkOrderTask.RequiredDateTime\n\nPreferred date for the job to be done.  \nVX_WORKORDERTASK.RequiredDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequireDirectAccount": {
            "type": "boolean",
            "description": "WorkOrderTask.RequireDirectAccount\n\nIs the user required to enter a direct account number.  Y or null.  \nVX_WORKORDERTASK.RequireDirectAccount bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "string",
            "description": "WorkOrderTask.ServiceRequestId\n\nWork request number, as a string  \nVX_SERVICEREQUEST.ServiceRequestId string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskComplete": {
            "type": "boolean",
            "description": "WorkOrderTask.TaskComplete\n\nIndicator is the job is done. Y means done.  \nVX_WORKORDERTASK.TaskComplete bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskCompleteDateTime": {
            "type": "string",
            "description": "WorkOrderTask.TaskCompleteDateTime\n\nJob Complete Date  \nVX_WORKORDERTASK.TaskCompleteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskComponentDesc": {
            "type": "string",
            "description": "WorkOrderTask.TaskComponentDesc\n\nDescription of component (or if absent, system) from job code  \nVX_WORKORDERTASK.TaskComponentDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskComponentDescLanguage1": {
            "type": "string",
            "description": "WorkOrderTask.TaskComponentDescLanguage1\n\nPosition description, primary language  \nVX_ASSETPARTISSUE.TaskComponentDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskComponentDescLanguage2": {
            "type": "string",
            "description": "WorkOrderTask.TaskComponentDescLanguage2\n\nPosition description, second language  \nVX_ASSETPARTISSUE.TaskComponentDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskComponentDescLanguage3": {
            "type": "string",
            "description": "WorkOrderTask.TaskComponentDescLanguage3\n\nPosition description, third language  \nVX_ASSETPARTISSUE.TaskComponentDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskComponentId": {
            "type": "string",
            "description": "WorkOrderTask.TaskComponentId\n\nSystem + component from job code  \nVX_WORKORDERTASK.TaskComponentId string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskCreateDateTime": {
            "type": "string",
            "description": "WorkOrderTask.TaskCreateDateTime\n\nJob was added to the work order on this date.  \nVX_WORKORDERTASK.TaskCreateDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "WorkOrderTask.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_WORKORDERTASK.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WorkOrderTask.TaskId\n\nWac-System-System/Assembly code  \nVX_WORKORDERTASK.TaskId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TaskLocationDesc": {
            "type": "string",
            "description": "WorkOrderTask.TaskLocationDesc\n\nJob Location description  \nVX_WORKORDERTASK.TaskLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskLocationId": {
            "type": "string",
            "description": "WorkOrderTask.TaskLocationId\n\nJob Location  \nVX_WORKORDERTASK.TaskLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskNoteId": {
            "type": "integer",
            "description": "WorkOrderTask.TaskNoteId\n\nTask note id  \nVX_WORKORDERTASK.TaskNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskOpenDateTime": {
            "type": "string",
            "description": "WorkOrderTask.TaskOpenDateTime\n\nJob Open Date  \nVX_WORKORDERTASK.TaskOpenDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskSeq": {
            "type": "integer",
            "description": "WorkOrderTask.TaskSeq\n\nSequence for how the jobs were added to the work order.  \nVX_WORKORDERTASK.TaskSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "WorkOrderTask.TaskStatusDesc\n\nJob Status code Description  \nVX_WORKORDERTASK.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "WorkOrderTask.TaskStatusId\n\nJob Status code  \nVX_WORKORDERTASK.TaskStatusId string 3 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "WorkOrderTask.TaskSystemId\n\nJob's system  \nVX_WORKORDERTASK.TaskSystemId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeTypeDesc": {
            "type": "string",
            "description": "WorkOrderTask.TimeTypeDesc\n\nTime Type Description  \nVX_WORKORDERTASK.TimeTypeDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCostEst": {
            "type": "number",
            "description": "WorkOrderTask.TotalCostEst\n\nJob Estimated Cost  \nVX_WORKORDERTASK.TotalCostEst decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "WorkOrderTask.VendorDesc\n\nVendor name assigned to the job  \nVX_WORKORDERTASK.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "WorkOrderTask.VendorId\n\nVendor ID assigned to the job  \nVX_WORKORDERTASK.VendorId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyCancelDateTime": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyCancelDateTime\n\nDate the user canceled the warranty.  \nVX_WORKORDERTASK.WarrantyCancelDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WarrantyCancelFlag": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyCancelFlag\n\nCancel warranty.  (U, C or null)  \nVX_WORKORDERTASK.WarrantyCancelFlag string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyCancelReason": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyCancelReason\n\nReason code for the warranty cancel.  \nVX_WORKORDERTASK.WarrantyCancelReason string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyCancelUserId": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyCancelUserId\n\nUser who canceled the warranty.  \nVX_WORKORDERTASK.WarrantyCancelUserId string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyViolation": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyViolation\n\nKind of violation:  SYSTEM/COMPONENT, WHOLE UNIT, NONE, etc.  \nVX_WORKORDERTASK.WarrantyViolation string 16 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyWork": {
            "type": "string",
            "description": "WorkOrderTask.WarrantyWork\n\nIs this a violation of some kind?  YES or NO.  \nVX_WORKORDERTASK.WarrantyWork string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkAccomplishedCodeId": {
            "type": "string",
            "description": "WorkOrderTask.WorkAccomplishedCodeId\n\nSplit Job by \"-\" to extract wac  \nVX_WORKORDERTASK.WorkAccomplishedCodeId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderCloseDateTime": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderCloseDateTime\n\nWork Order Close Date  \nVX_WORKORDERTASK.WorkOrderCloseDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderId\n\nWork Order Number   \nVX_WORKORDERTASK.WorkOrderId string 10 \n\nValue can be updated via: PUT  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationDesc": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderLocationDesc\n\nWork Order Location description  \nVX_WORKORDERTASK.WorkOrderLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderLocationId\n\nWork Order Maintenance Location  \nVX_WORKORDERTASK.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderMeter1Reading": {
            "type": "number",
            "description": "WorkOrderTask.WorkOrderMeter1Reading\n\nMeter1 reading on the work order  \nVX_WORKORDERTASK.WorkOrderMeter1Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderMeter1TypeId": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderMeter1TypeId\n\nMeter1 unit of measure; the view is in English  \nVX_WORKORDERTASK.WorkOrderMeter1TypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderMeter2Reading": {
            "type": "number",
            "description": "WorkOrderTask.WorkOrderMeter2Reading\n\nMeter2 reading on the work order  \nVX_WORKORDERTASK.WorkOrderMeter2Reading decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderMeter2TypeId": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderMeter2TypeId\n\nMeter2 unit of measure; the view is in English  \nVX_WORKORDERTASK.WorkOrderMeter2TypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderOpenDateTime": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderOpenDateTime\n\nWork Order Open Date  \nVX_WORKORDERTASK.WorkOrderOpenDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkOrderStatus": {
            "type": "string",
            "description": "WorkOrderTask.WorkOrderStatus\n\nOPEN, CLOSED  \nVX_WORKORDERTASK.WorkOrderStatus string 10 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIWorkAssignment": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkAssignment"
            }
          }
        }
      },
      "IWorkAssignment": {
        "type": "object",
        "description": "WorkAssignment",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "TaskId",
          "TaskLocationId",
          "WorkOrderId",
          "WorkOrderLocationId"
        ],
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "WorkAssignment.AssetDesc\n\nDescription of Equipment. (Unit = Year, Make Model / Dept = Dept_Desc / Comp = Bill_Acct)    \nVX_WORKASSIGNMENT.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WorkAssignment.AssetId\n\nEquipment Number  \nVX_WORKASSIGNMENT.AssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AssignmentKind": {
            "type": "string",
            "description": "WorkAssignment.AssignmentKind\n\nTASK  \nVX_WORKASSIGNMENT.AssignmentKind string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "CanPunchIn": {
            "type": "boolean",
            "description": "WorkAssignment.CanPunchIn\n\nCan the user punch into this?  \nVX_WORKASSIGNMENT.CanPunchIn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "WorkAssignment.EmployeeId\n\nUnique Employee Number  \nVX_WORKASSIGNMENT.EmployeeId string 11 \n\nSearchable: True ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "WorkAssignment.EmployeeName\n\nEmployee Name  \nVX_WORKASSIGNMENT.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkAssignment.InternalId\n\nM5 Forced to: null \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LaborHoursEst": {
            "type": "number",
            "description": "WorkAssignment.LaborHoursEst\n\nEstimated Labor Hours, converted from Milliseconds  \nVX_WORKASSIGNMENT.LaborHoursEst decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Locked": {
            "type": "boolean",
            "description": "WorkAssignment.Locked\n\nVX_WORKASSIGNMENT.Locked bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PartRequestsOutstanding": {
            "type": "boolean",
            "description": "WorkAssignment.PartRequestsOutstanding\n\nAre there unresolved part requests?  \nVX_WORKASSIGNMENT.PartRequestsOutstanding bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PmChecklistsOutstanding": {
            "type": "boolean",
            "description": "WorkAssignment.PmChecklistsOutstanding\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "WorkAssignment.PriorityId\n\nTask priority  \nVX_WORKASSIGNMENT.PriorityId int  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskCompleteDateTime": {
            "type": "string",
            "description": "WorkAssignment.TaskCompleteDateTime\n\nWhen the job was completed, if it was  \nVX_WORKASSIGNMENT.TaskCompleteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "WorkAssignment.TaskDesc\n\nTask description  \nVX_WORKASSIGNMENT.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WorkAssignment.TaskId\n\nJob Code  \nVX_WORKASSIGNMENT.TaskId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TaskLocationId": {
            "type": "string",
            "description": "WorkAssignment.TaskLocationId\n\nTask's location  \nVX_WORKASSIGNMENT.TaskLocationId string  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "WorkAssignment.TaskStatusDesc\n\nJob Status code Description  \nVX_WORKASSIGNMENT.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "WorkAssignment.TaskStatusId\n\nJob Status code  \nVX_WORKASSIGNMENT.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TestResultsOutstanding": {
            "type": "boolean",
            "description": "WorkAssignment.TestResultsOutstanding\n\nAre we waiting for tests?  \nVX_WORKASSIGNMENT.TestResultsOutstanding bool  \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyWork": {
            "type": "boolean",
            "description": "WorkAssignment.WarrantyWork\n\nIs there a warranty violation on the job?  \nVX_WORKASSIGNMENT.WarrantyWork bool  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkAssignment.WorkOrderId\n\nWork Order Number  \nVX_WORKASSIGNMENT.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkAssignment.WorkOrderLocationId\n\nWork order location  \nVX_WORKASSIGNMENT.WorkOrderLocationId string 6 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderStatus": {
            "type": "string",
            "description": "WorkAssignment.WorkOrderStatus\n\nOPEN = O, CLOSED = C, WORK FINISHED = D  \nVX_WORKASSIGNMENT.WorkOrderStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "WorkAssignment.WorkOrderTitle\n\nVisit reason description  \nVX_WORKASSIGNMENT.WorkOrderTitle string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPartRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartRequest"
            }
          }
        }
      },
      "IPartRequest": {
        "type": "object",
        "description": "PartRequest",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "PartDesc",
          "PartId",
          "PartRequestLocationId",
          "RequestedByEmployeeId",
          "TaskId",
          "WorkOrderId"
        ],
        "properties": {
          "ApprovalDate": {
            "type": "string",
            "description": "PartRequest.ApprovalDate\n\nWhen approved  \nVX_PARTREQUEST.ApprovalDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ApprovalNeeded": {
            "type": "boolean",
            "description": "PartRequest.ApprovalNeeded\n\nIs approval required?  Set by query handler.  \nVX_PARTREQUEST.ApprovalNeeded bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ApprovedByUserId": {
            "type": "string",
            "description": "PartRequest.ApprovedByUserId\n\nSupervisor (probably) who approved this thing  \nVX_PARTREQUEST.ApprovedByUserId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ApprovedByUserName": {
            "type": "string",
            "description": "PartRequest.ApprovedByUserName\n\nWho approved this?  \nVX_PARTREQUEST.ApprovedByUserName string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "PartRequest.AssetDesc\n\nDescription of Equipment. (Unit = Year, Make Model / Dept = Dept_Desc / Comp = Bill_Acct)    \nVX_PARTREQUEST.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PartRequest.AssetId\n\nEquipment Number  \nVX_PARTREQUEST.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetSerialNumber": {
            "type": "string",
            "description": "PartRequest.AssetSerialNumber\n\nAsset's serial number (VIN)  \nVX_PARTREQUEST.AssetSerialNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssignedTo": {
            "type": "string",
            "description": "PartRequest.AssignedTo\n\nEmployee number or user ID, depending on a modflag  \nVX_PARTREQUEST.AssignedTo string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssignedToName": {
            "type": "string",
            "description": "PartRequest.AssignedToName\n\nEmployee's or user's name  \nVX_PARTREQUEST.AssignedToName string  \n\nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "PartRequest.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "CanApprove": {
            "type": "boolean",
            "description": "PartRequest.CanApprove\n\nView returns false, query handler may turn to true.  \nVX_PARTREQUEST.CanApprove bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CanMakeReady": {
            "type": "boolean",
            "description": "PartRequest.CanMakeReady\n\nCan the request be made ready?  View returns 0; query handler sets it correctly  \nVX_PARTREQUEST.CanMakeReady bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "PartRequest.Comments\n\nPart description for PartId-less requests  \nVX_PARTREQUEST.Comments string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "CoreCost": {
            "type": "number",
            "description": "PartRequest.CoreCost\n\nCore charge  \nVX_PARTREQUEST.CoreCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DateExpected": {
            "type": "string",
            "description": "PartRequest.DateExpected\n\nNeeded by date  \nVX_PARTREQUEST.DateExpected DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DateOrdered": {
            "type": "string",
            "description": "PartRequest.DateOrdered\n\nVX_PARTREQUEST.DateOrdered DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DateRequested": {
            "type": "string",
            "description": "PartRequest.DateRequested\n\nVX_PARTREQUEST.DateRequested DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DateRequired": {
            "type": "string",
            "description": "PartRequest.DateRequired\n\nDate the part is required by.  \nVX_PARTREQUEST.DateRequired DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "PartRequest.FailureDesc\n\nFailure code description  \nVX_PARTREQUEST.FailureDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "PartRequest.FailureId\n\nFailure code  \nVX_PARTREQUEST.FailureId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PartRequest.InternalId\n\nInternal request (not part_id) sequence  \nVX_PARTREQUEST.InternalId long 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Issueable": {
            "type": "boolean",
            "description": "PartRequest.Issueable\n\nCan the part be issued?  \nVX_PARTREQUEST.Issueable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueTogether": {
            "type": "boolean",
            "description": "PartRequest.IssueTogether\n\nForced false in database  \nVX_PARTREQUEST.IssueTogether bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartRequest.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTREQUEST.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerDesc": {
            "type": "string",
            "description": "PartRequest.ManufacturerDesc\n\nPart's manufacturer description  \nVX_PARTREQUEST.ManufacturerDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PartRequest.ManufacturerId\n\nPart Manufacturer.  \nVX_PARTREQUEST.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "type": "string",
            "description": "PartRequest.ManufacturerPartNumber\n\nMaster Xref Number.  \nVX_PARTREQUEST.ManufacturerPartNumber string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "NewSerialNumbers": {
            "description": "PartRequest.NewSerialNumbers\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "NoteId": {
            "type": "integer",
            "description": "PartRequest.NoteId\n\nNote Id, foreign key to notes table  \nVX_PARTREQUEST.NoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Notes": {
            "description": "PartRequest.Notes\n\nPart request note, stored in 4000 chunks, need to be joined together  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "Notify": {
            "type": "boolean",
            "description": "PartRequest.Notify\n\nForced false in the database  \nVX_PARTREQUEST.Notify bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PartCost": {
            "type": "number",
            "description": "PartRequest.PartCost\n\nUnit cost of part depending on system flag 1058.  \nVX_PARTREQUEST.PartCost decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PartRequest.PartDesc\n\nPart description if the request has a PartId  \nVX_PARTREQUEST.PartDesc string 30 \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PartRequest.PartDescLanguage1\n\nPart description, primary language  \nVX_PARTREQUEST.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PartRequest.PartDescLanguage2\n\nPart description, second language  \nVX_PARTREQUEST.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PartRequest.PartDescLanguage3\n\nPart description, third language  \nVX_PARTREQUEST.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartRequest.PartId\n\nPart Number  \nVX_PARTREQUEST.PartId string 30 \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "PartNumber": {
            "type": "string",
            "description": "PartRequest.PartNumber\n\nPart Number  \nVX_PARTREQUEST.PartNumber string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartRequestLocationDesc": {
            "type": "string",
            "description": "PartRequest.PartRequestLocationDesc\n\nPart Request Location Description  \nVX_PARTREQUEST.PartRequestLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "PartRequestLocationId": {
            "type": "string",
            "description": "PartRequest.PartRequestLocationId\n\nPart Request Location  \nVX_PARTREQUEST.PartRequestLocationId string 6 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "PartRequestStatus": {
            "type": "string",
            "description": "PartRequest.PartRequestStatus\n\nBase product's status, plus UNAPPROVED:  CLOSED, CANCELLED, ORDERED, REJECTED, IN-REQ, REQAPPROVE, READY, REQUEST, APPROVED  \nVX_PARTREQUEST.PartRequestStatus string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "PartRequestStatusDate": {
            "type": "string",
            "description": "PartRequest.PartRequestStatusDate\n\nPart Request Status Date  \nVX_PARTREQUEST.PartRequestStatusDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartRequest.PartSeq\n\nparts.part_id  \nVX_PARTREQUEST.PartSeq int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PreferredVendorDesc": {
            "type": "string",
            "description": "PartRequest.PreferredVendorDesc\n\nLocation's primary vendor's name  \nVX_PARTREQUEST.PreferredVendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "PreferredVendorId": {
            "type": "string",
            "description": "PartRequest.PreferredVendorId\n\nLocation's primary vendor for the part  \nVX_PARTREQUEST.PreferredVendorId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PrimaryBinId": {
            "type": "string",
            "description": "PartRequest.PrimaryBinId\n\nPrimary bin at the location  \nVX_PARTREQUEST.PrimaryBinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PriorityDesc": {
            "type": "string",
            "description": "PartRequest.PriorityDesc\n\nJob priority description  \nVX_PARTREQUEST.PriorityDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "PartRequest.PriorityId\n\nJob priority  \nVX_PARTREQUEST.PriorityId int  \n\nSearchable: False ",
            "nullable": true
          },
          "PurchaseOrderId": {
            "type": "string",
            "description": "PartRequest.PurchaseOrderId\n\nPO No.  \nVX_PARTREQUEST.PurchaseOrderId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "description": "PartRequest.Qty\n\nPart Request Quantity  \nVX_PARTREQUEST.Qty double 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "QtyAvailable": {
            "type": "number",
            "description": "PartRequest.QtyAvailable\n\nQuantity available at the location, 0 for non-stock  \nVX_PARTREQUEST.QtyAvailable int  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "QtyIssueable": {
            "type": "integer",
            "description": "PartRequest.QtyIssueable\n\nQuantity issueable at the location, 0 for non-stock  \nVX_PARTREQUEST.QtyIssueable int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "QtyOnHand": {
            "type": "number",
            "description": "PartRequest.QtyOnHand\n\nVX_PARTREQUEST.QtyOnHand decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "QtyOnOrder": {
            "type": "integer",
            "description": "PartRequest.QtyOnOrder\n\nQuanity on order for the part at location, not necessarily for this request  \nVX_PARTREQUEST.QtyOnOrder int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "RecordType": {
            "type": "string",
            "description": "PartRequest.RecordType\n\nType of asset, U, D or C  \nVX_PARTREQUEST.RecordType string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequestedByEmployeeId": {
            "type": "string",
            "description": "PartRequest.RequestedByEmployeeId\n\nEmployee who requested the part.  \nVX_PARTREQUEST.RequestedByEmployeeId string 11 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "RequestedByEmployeeName": {
            "type": "string",
            "description": "PartRequest.RequestedByEmployeeName\n\nName of the employee who requested the part.  \nVX_PARTREQUEST.RequestedByEmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RequestId": {
            "type": "string",
            "description": "PartRequest.RequestId\n\nPart Request ID  \nVX_PARTREQUEST.RequestId int  \n\nSearchable: True ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "PartRequest.Status\n\nEDGE's status:  PENDING, ORDER, READY, CLOSED, CANCELED.  View is close, query handler sets correctly.  \nVX_PARTREQUEST.Status string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "PartRequest.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_PARTREQUEST.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "PartRequest.TaskId\n\nWac-System-System/Assembly code  \nVX_PARTREQUEST.TaskId string 10 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "TaskLocationDesc": {
            "type": "string",
            "description": "PartRequest.TaskLocationDesc\n\nJob Location description  \nVX_PARTREQUEST.TaskLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskLocationId": {
            "type": "string",
            "description": "PartRequest.TaskLocationId\n\nJob Location.  \nVX_PARTREQUEST.TaskLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskSeq": {
            "type": "number",
            "description": "PartRequest.TaskSeq\n\nSequence for how the jobs were added to the work order.  \nVX_PARTREQUEST.TaskSeq double 10 \n\nSearchable: False ",
            "format": "double",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "PartRequest.TaskStatusDesc\n\nJob Status code Description  \nVX_PARTREQUEST.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "PartRequest.TaskStatusId\n\nJob Status code  \nVX_PARTREQUEST.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "PartRequest.TotalCost\n\nTotal value of the request  \nVX_PARTREQUEST.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PartRequest.VendorDesc\n\nVendor name  \nVX_PARTREQUEST.VendorDesc string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PartRequest.VendorId\n\nvendor_no supplying the part  \nVX_PARTREQUEST.VendorId string 12 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PartRequest.WorkOrderId\n\nWork Order Number   \nVX_PARTREQUEST.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "WorkOrderLocationDesc": {
            "type": "string",
            "description": "PartRequest.WorkOrderLocationDesc\n\nWork Order Location description  \nVX_PARTREQUEST.WorkOrderLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "PartRequest.WorkOrderLocationId\n\nWork Order Maintenance Location  \nVX_PARTREQUEST.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderStatusDesc": {
            "type": "string",
            "description": "PartRequest.WorkOrderStatusDesc\n\nWork Order Status (open, complete, closed, canceled)  \nVX_PARTREQUEST.WorkOrderStatusDesc string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "PartRequest.WorkOrderTitle\n\nVX_PARTREQUEST.WorkOrderTitle string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIWorkOrderPart": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderPart"
            }
          }
        }
      },
      "IWorkOrderPart": {
        "type": "object",
        "description": "WorkOrderPart",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "IssueLocationId",
          "IssueQty",
          "PartId",
          "TaskId",
          "VendorId",
          "WorkOrderId"
        ],
        "properties": {
          "BinId": {
            "type": "string",
            "description": "WorkOrderPart.BinId\n\nUsed for the hose for M5 fluids  \nVX_WORKORDERPART.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "WorkOrderPart.Comments\n\nVX_WORKORDERPART.Comments string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "CoreCost": {
            "type": "number",
            "description": "WorkOrderPart.CoreCost\n\nCore cost  \nVX_WORKORDERPART.CoreCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "WorkOrderPart.Cost\n\nTotal value of issue, including tax  \nVX_WORKORDERPART.Cost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DataScienceProvider": {
            "type": "string",
            "description": "WorkOrderPart.DataScienceProvider\n\nData science provider  \nVX_WORKORDERPART.DataScienceProvider string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WorkOrderPart.Description\n\nPart number description  \nVX_WORKORDERPART.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DiscountPct": {
            "type": "number",
            "description": "WorkOrderPart.DiscountPct\n\nPart discount percent  \nVX_WORKORDERPART.DiscountPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "WorkOrderPart.EmployeeId\n\nThe employee who issued the part  \nVX_WORKORDERPART.EmployeeId string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "WorkOrderPart.EmployeeName\n\nThe employee name who issued the part.  \nVX_WORKORDERPART.EmployeeName string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "WorkOrderPart.FailureDesc\n\nFailure code description  \nVX_WORKORDERPART.FailureDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "WorkOrderPart.FailureId\n\nFailure code for part  \nVX_WORKORDERPART.FailureId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "WorkOrderPart.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_WORKORDERPART.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "HasCoreCharge": {
            "type": "boolean",
            "description": "WorkOrderPart.HasCoreCharge\n\nFlag to denote if the core cost is added to the total cost  \nVX_WORKORDERPART.HasCoreCharge bool 1 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkOrderPart.InternalId\n\nUnique ID system generated  \nVX_WORKORDERPART.InternalId long 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "WorkOrderPart.InvoiceDate\n\nInvoice date  \nVX_WORKORDERPART.InvoiceDate DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "WorkOrderPart.InvoiceNumber\n\nInvoice number for the part issue  \nVX_WORKORDERPART.InvoiceNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "WorkOrderPart.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_WORKORDERPART.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "WorkOrderPart.IsReturnable\n\nIsn't on a closed work order, isn't a non-stock part, etc.  \nVX_WORKORDERPART.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "WorkOrderPart.IssueDateTime\n\nIssue Date Time of part  \nVX_WORKORDERPART.IssueDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueLocationDesc": {
            "type": "string",
            "description": "WorkOrderPart.IssueLocationDesc\n\nIssue location description of the part  \nVX_WORKORDERPART.IssueLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueLocationId": {
            "type": "string",
            "description": "WorkOrderPart.IssueLocationId\n\nIssue location of the part  \nVX_WORKORDERPART.IssueLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "WorkOrderPart.IssueQty\n\nQuantity of part issued  \nVX_WORKORDERPART.IssueQty decimal  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "IssueTicketNumber": {
            "type": "string",
            "description": "WorkOrderPart.IssueTicketNumber\n\nIssue ticket number  \nVX_WORKORDERPART.IssueTicketNumber string  \n\nSearchable: True ",
            "nullable": true
          },
          "IsWarrantyViolation": {
            "type": "boolean",
            "description": "WorkOrderPart.IsWarrantyViolation\n\nWas the part issued due to a warranty violation?  \nVX_WORKORDERPART.IsWarrantyViolation bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKORDERPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "WorkOrderPart.ManufacturerId\n\nPart manufacturer  \nVX_WORKORDERPART.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "NewSerialNumbers": {
            "description": "WorkOrderPart.NewSerialNumbers\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "PartId": {
            "type": "string",
            "description": "WorkOrderPart.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_WORKORDERPART.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "WorkOrderPart.PartOrFluid\n\nPART or FLUID  \nVX_WORKORDERPART.PartOrFluid string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "WorkOrderPart.PartSeq\n\nPart master's row_id  \nVX_WORKORDERPART.PartSeq long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PoItem": {
            "type": "string",
            "description": "WorkOrderPart.PoItem\n\nPO Item  \nVX_WORKORDERPART.PoItem string 5 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "WorkOrderPart.PoLineItem\n\nPO Line number  \nVX_WORKORDERPART.PoLineItem int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "WorkOrderPart.PoNumber\n\nPurchase Order number for the part issue  \nVX_WORKORDERPART.PoNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PositionDesc": {
            "type": "string",
            "description": "WorkOrderPart.PositionDesc\n\nPosition Code Description  \nVX_WORKORDERPART.PositionDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage1": {
            "type": "string",
            "description": "WorkOrderPart.PositionDescLanguage1\n\nPosition description, primary language  \nVX_WORKORDERPART.PositionDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage2": {
            "type": "string",
            "description": "WorkOrderPart.PositionDescLanguage2\n\nPosition description, second language  \nVX_WORKORDERPART.PositionDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage3": {
            "type": "string",
            "description": "WorkOrderPart.PositionDescLanguage3\n\nPosition description, third language  \nVX_WORKORDERPART.PositionDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "WorkOrderPart.PositionId\n\nPositon Code  \nVX_WORKORDERPART.PositionId string 3 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "WorkOrderPart.ProNumber\n\nPRO Number for part  \nVX_WORKORDERPART.ProNumber string 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "WorkOrderPart.ReferenceNumber\n\nReference number for part issue  \nVX_WORKORDERPART.ReferenceNumber string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonComment": {
            "type": "string",
            "description": "WorkOrderPart.ReturnReasonComment\n\nFree-form reason why the part was returned.  \nVX_WORKORDERPART.ReturnReasonComment string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonDesc": {
            "type": "string",
            "description": "WorkOrderPart.ReturnReasonDesc\n\nReturn reason's description  \nVX_WORKORDERPART.ReturnReasonDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonId": {
            "type": "string",
            "description": "WorkOrderPart.ReturnReasonId\n\nReturn reason code  \nVX_WORKORDERPART.ReturnReasonId string 4 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonStatus": {
            "type": "string",
            "description": "WorkOrderPart.ReturnReasonStatus\n\nNull for M5 because there's no return-request; it just happens  \nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "WorkOrderPart.Serialized\n\nDid the issued part have a serial number?  \nVX_WORKORDERPART.Serialized bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "WorkOrderPart.SerialNumber\n\nPart's serial number  \nVX_WORKORDERPART.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "WorkOrderPart.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_WORKORDERPART.TaskDesc string 100 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WorkOrderPart.TaskId\n\nWac-System-System/Assembly code  \nVX_WORKORDERPART.TaskId string 10 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "TaskLocation": {
            "type": "string",
            "description": "WorkOrderPart.TaskLocation\n\nJob Location.  \nVX_WORKORDERPART.TaskLocation string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskLocationDesc": {
            "type": "string",
            "description": "WorkOrderPart.TaskLocationDesc\n\nJob Location description  \nVX_WORKORDERPART.TaskLocationDesc string 40 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskSeq": {
            "type": "integer",
            "description": "WorkOrderPart.TaskSeq\n\nSequence for how the jobs were added to the work order.  \nVX_WORKORDERPART.TaskSeq int 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "WorkOrderPart.TaskStatusDesc\n\nJob Status code Description  \nVX_WORKORDERPART.TaskStatusDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "WorkOrderPart.TaskStatusId\n\nJob Status code  \nVX_WORKORDERPART.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "WorkOrderPart.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_WORKORDERPART.UniqueId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "WorkOrderPart.UnitCost\n\nVX_WORKORDERPART.UnitCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "WorkOrderPart.UnitOfIssue\n\nUnit of issue for part  \nVX_WORKORDERPART.UnitOfIssue string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "WorkOrderPart.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_WORKORDERPART.VendorContractId string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "WorkOrderPart.VendorDesc\n\nVendor name  \nVX_WORKORDERPART.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "WorkOrderPart.VendorId\n\nVendor number the part was received and issued from  \nVX_WORKORDERPART.VendorId string 12 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderPart.WorkOrderId\n\nWork Order Number   \nVX_WORKORDERPART.WorkOrderId string 10 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkOrderPart.WorkOrderLocationId\n\nWork Order Location  \nVX_WORKORDERPART.WorkOrderLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderYear": {
            "type": "integer",
            "description": "WorkOrderPart.WorkOrderYear\n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIAssetProduct": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAssetProduct"
            }
          }
        }
      },
      "ILookupItemOfIRentalRatesClassRate": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IRentalRatesClassRate"
            }
          }
        }
      },
      "IRentalRatesClassRate": {
        "type": "object",
        "description": "RentalRatesClassRate",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "DailyRate": {
            "type": "number",
            "description": "RentalRatesClassRate.DailyRate\n\nMotor pool daily rate  \nvx_rentalratesclassrate.DailyRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EffectiveDate": {
            "type": "string",
            "description": "RentalRatesClassRate.EffectiveDate\n\nEffective date  \nvx_rentalratesclassrate.EffectiveDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "description": "RentalRatesClassRate.EndDate\n\nEnd date, blank if current  \nvx_rentalratesclassrate.EndDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FreeMeter1PerMonth": {
            "type": "number",
            "description": "RentalRatesClassRate.FreeMeter1PerMonth\n\nFree meter 1 usage per month  \nvx_rentalratesclassrate.FreeMeter1PerMonth decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "HourlyRate": {
            "type": "number",
            "description": "RentalRatesClassRate.HourlyRate\n\nMotor pool hourly rate  \nvx_rentalratesclassrate.HourlyRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IsCurrent": {
            "type": "boolean",
            "description": "RentalRatesClassRate.IsCurrent\n\nIs this the most recent effective date?  \nvx_rentalratesclassrate.IsCurrent bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "RentalRatesClassRate.LastChangedDateTime\n\nLast changed date and time on main record.  \nvx_rentalratesclassrate.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Meter1UsageRate": {
            "type": "number",
            "description": "RentalRatesClassRate.Meter1UsageRate\n\nvx_rentalratesclassrate.Meter1UsageRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MonthlyRate": {
            "type": "number",
            "description": "RentalRatesClassRate.MonthlyRate\n\nMotor pool monthly rate  \nvx_rentalratesclassrate.MonthlyRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RentalRatesClassId": {
            "type": "string",
            "description": "RentalRatesClassRate.RentalRatesClassId\n\nBilling code  \nvx_rentalratesclassrate.RentalRatesClassId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WeeklyRate": {
            "type": "number",
            "description": "RentalRatesClassRate.WeeklyRate\n\nMotor pool weekly rate  \nvx_rentalratesclassrate.WeeklyRate decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAsset"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAsset"
              }
            }
          }
        ]
      },
      "ETagOfIAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAsset"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAsset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAsset"
          }
        }
      },
      "QueryResponseOfIAssetServiceDue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetServiceDue"
                }
              }
            }
          }
        ]
      },
      "IAssetServiceDue": {
        "type": "object",
        "description": "AssetServiceDue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AbsoluteRelative": {
            "type": "string",
            "description": "AssetServiceDue.AbsoluteRelative\n\nIf forecasted, then ABSOLUTE or RELATIVE; if manual, then MANUAL  \nVX_ASSETSERVICEDUE.AbsoluteRelative string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "AssetServiceDue.AssetDesc\n\nUnit/department description  \nVX_ASSETSERVICEDUE.AssetDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "AssetServiceDue.AssetId\n\nUnit/department number  \nVX_ASSETSERVICEDUE.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "DateDue": {
            "type": "string",
            "description": "AssetServiceDue.DateDue\n\nNext work request due date  \nVX_ASSETSERVICEDUE.DateDue DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DaysLate": {
            "type": "integer",
            "description": "AssetServiceDue.DaysLate\n\nNumber of days late, rounded  \nVX_ASSSETSERVICEDUE.DaysLate int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "FuelInterval": {
            "type": "number",
            "description": "AssetServiceDue.FuelInterval\n\nFuel interval  \nVX_ASSETSERVICEDUE.FuelInterval decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FuelSinceLastPerformed": {
            "type": "number",
            "description": "AssetServiceDue.FuelSinceLastPerformed\n\nPrimary fuel since last done  \nVX_ASSETSERVICEDUE.FuelSinceLastPerformed decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetServiceDue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETSERVICEDUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPerformDate": {
            "type": "string",
            "description": "AssetServiceDue.LastPerformDate\n\nDate last done  \nVX_ASSETSERVICEDUE.LastPerformDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastPerformMeter1": {
            "type": "integer",
            "description": "AssetServiceDue.LastPerformMeter1\n\nMeter1 last done  \nVX_ASSETSERVICEDUE.LastPerformMeter1 int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LastPerformMeter2": {
            "type": "integer",
            "description": "AssetServiceDue.LastPerformMeter2\n\nMeter2 last done  \nVX_ASSETSERVICEDUE.LastPerformMeter2 int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1Due": {
            "type": "integer",
            "description": "AssetServiceDue.Meter1Due\n\nPrimary meter until it is due; negative if late  \nVX_ASSETSERVICEDUE.Meter1Due int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1Interval": {
            "type": "integer",
            "description": "AssetServiceDue.Meter1Interval\n\nPrimary meter interval  \nVX_ASSETSERVICEDUE.Meter1Interval int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1Late": {
            "type": "integer",
            "description": "AssetServiceDue.Meter1Late\n\nDistance/time that the service is late; zero if not late  \nVX_ASSETSERVICEDUE.Meter1Late int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1SinceLastPerformed": {
            "type": "integer",
            "description": "AssetServiceDue.Meter1SinceLastPerformed\n\nPrimary meter since last done  \nVX_ASSETSERVICEDUE.Meter1SinceLastPerformed int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter1UntilDue": {
            "type": "integer",
            "description": "AssetServiceDue.Meter1UntilDue\n\nPrimary meter until it is due; negative if late  \nVX_ASSETSERVICEDUE.Meter1UntilDue int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2Due": {
            "type": "integer",
            "description": "AssetServiceDue.Meter2Due\n\nSecond meter until due; negative if late  \nVX_ASSETSERVICEDUE.Meter2Due int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2Interval": {
            "type": "integer",
            "description": "AssetServiceDue.Meter2Interval\n\nSecond meter interval  \nVX_ASSETSERVICEDUE.Meter2Interval int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2Late": {
            "type": "integer",
            "description": "AssetServiceDue.Meter2Late\n\nSecond meter late; zero if not late  \nVX_ASSETSERVICEDUE.Meter2Late int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2SinceLastPerformed": {
            "type": "integer",
            "description": "AssetServiceDue.Meter2SinceLastPerformed\n\nSecond meter since last performed  \nVX_ASSETSERVICEDUE.Meter2SinceLastPerformed int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Meter2UntilDue": {
            "type": "integer",
            "description": "AssetServiceDue.Meter2UntilDue\n\nSecond meter until due; negative if late  \nVX_ASSETSERVICEDUE.Meter2UntilDue int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReasonDue": {
            "type": "string",
            "description": "AssetServiceDue.ReasonDue\n\nDATE, FUEL, METER1, METER2  \nVX_ASSETSERVICEDUE.ReasonDue string  \n\nSearchable: False ",
            "nullable": true
          },
          "ShopLocationDesc": {
            "type": "string",
            "description": "AssetServiceDue.ShopLocationDesc\n\nShop location description  \nVX_ASSETSERVICEDUE.ShopLocationDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ShopLocationId": {
            "type": "string",
            "description": "AssetServiceDue.ShopLocationId\n\nShop location  \nVX_ASSETSERVICEDUE.ShopLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "AssetServiceDue.TaskDesc\n\nJob description  \nVX_ASSETSERVICEDUE.TaskDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "AssetServiceDue.TaskId\n\nJob code  \nVX_ASSETSERVICEDUE.TaskId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeIntervalNumber": {
            "type": "integer",
            "description": "AssetServiceDue.TimeIntervalNumber\n\nTime interval  \nVX_ASSETSERVICEDUE.TimeIntervalNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TimeIntervalUnit": {
            "type": "string",
            "description": "AssetServiceDue.TimeIntervalUnit\n\nTime interval unit (DAYS).  \nVX_ASSETSERVICEDUE.TimeIntervalUnit string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetServiceDue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetServiceDue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetServiceDue"
              }
            }
          }
        ]
      },
      "ETagOfIAssetServiceDue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfITestType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITestType"
                }
              }
            }
          }
        ]
      },
      "ITestType": {
        "type": "object",
        "description": "TestType",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfITestType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestType"
              }
            }
          }
        ]
      },
      "ETagOfITestType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIPurchaseOrderDestination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrderDestination"
                }
              }
            }
          }
        ]
      },
      "IPurchaseOrderDestination": {
        "type": "object",
        "description": "PurchaseOrderDestination",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "PurchaseOrderDestination.AccountId\n\nDirect account number, if any  \nVX_PURCHASEORDERDESTINATION.AccountId string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "PurchaseOrderDestination.AssetDesc\n\nAsset's description  \nVX_PURCHASEORDERDESTINATION.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PurchaseOrderDestination.AssetId\n\nEquipment Number  \nVX_PURCHASEORDERDESTINATION.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetLicenseNumber": {
            "type": "string",
            "description": "PurchaseOrderDestination.AssetLicenseNumber\n\nAsset's license number  \nVX_PURCHASEORDERDESTINATION.AssetLicenseNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "PurchaseOrderDestination.DepartmentDesc\n\nDepartment number, if any  \nVX_PURCHASEORDERDESTINATION.DepartmentDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "PurchaseOrderDestination.DepartmentId\n\nDepartment number, if any  \nVX_PURCHASEORDERDESTINATION.DepartmentId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "description": "PurchaseOrderDestination.Destination\n\nDEPARTMENT, INDIRECT ACCOUNT, ASSET, WORK ORDER  \nVX_PURCHASEORDERDESTINATION.Destination string  \n\nSearchable: False ",
            "nullable": true
          },
          "DestinationStatus": {
            "type": "string",
            "description": "PurchaseOrderDestination.DestinationStatus\n\nCANCELED, ISSUED, RECEIVED, ORDERED  \nVX_PURCHASEORDERDESTINATION.DestinationStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectDesc": {
            "type": "string",
            "description": "PurchaseOrderDestination.IndirectDesc\n\nDescription of indirect account number, if any  \nVX_PURCHASEORDERDESTINATION.IndirectDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "PurchaseOrderDestination.IndirectId\n\nIndirect account number, if any  \nVX_PURCHASEORDERDESTINATION.IndirectId string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseOrderDestination.InternalId\n\npart_orders.part_orders_id  \nVX_PURCHASEORDERDESTINATION.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IssuedQty": {
            "type": "number",
            "description": "PurchaseOrderDestination.IssuedQty\n\nIssued quantity.  Negative if return.  \nVX_PURCHASEORDERDESTINATION.IssuedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseOrderDestination.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PURCHASEORDERDESTINATION.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LineItemType": {
            "type": "string",
            "description": "PurchaseOrderDestination.LineItemType\n\nSTOCK PART, NON-STOCK PART  \nVX_PURCHASEORDERDESTINATION.LineItemType string  \n\nSearchable: False ",
            "nullable": true
          },
          "LineStatus": {
            "type": "string",
            "description": "PurchaseOrderDestination.LineStatus\n\nOPEN, CLOSED  \nVX_PURCHASEORDERDESTINATION.LineStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseOrderDestination.LocationId\n\nReceiving location  \nVX_PURCHASEORDERDESTINATION.LocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "OrderQty": {
            "type": "number",
            "description": "PurchaseOrderDestination.OrderQty\n\nOrder quantity  \nVX_PURCHASEORDERDESTINATION.OrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PurchaseOrderDestination.PartDesc\n\nPart description  \nVX_PURCHASEORDERDESTINATION.PartDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PurchaseOrderDestination.PartDescLanguage1\n\nPart description, primary language  \nVX_PURCHASEORDERDESTINATION.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PurchaseOrderDestination.PartDescLanguage2\n\nPart description, second language  \nVX_PURCHASEORDERDESTINATION.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PurchaseOrderDestination.PartDescLanguage3\n\nPart description, third language  \nVX_PURCHASEORDERDESTINATION.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PurchaseOrderDestination.PartId\n\nPart number (the one the user sees)  \nVX_PURCHASEORDERDESTINATION.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PurchaseOrderDestination.PartSeq\n\nInternal part id sequence  \nVX_PURCHASEORDERDESTINATION.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "PurchaseOrderDestination.PoId\n\nM5 part order ID  \nVX_PURCHASEORDERDESTINATION.PoId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoInternalId": {
            "type": "integer",
            "description": "PurchaseOrderDestination.PoInternalId\n\npart_orders.po_id  \nVX_PURCHASEORDERDESTINATION.PoInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PoLineNumber": {
            "type": "integer",
            "description": "PurchaseOrderDestination.PoLineNumber\n\nPart order line  \nVX_PURCHASEORDERDESTINATION.PoLineNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PurchaseOrderDestination.ReceivedQty\n\nReceived quantity.  Negative if return.  \nVX_PURCHASEORDERDESTINATION.ReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "PurchaseOrderDestination.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_PURCHASEORDERDESTINATION.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "PurchaseOrderDestination.TaskId\n\nWac-System-System/Assembly code  \nVX_PURCHASEORDERDESTINATION.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "PurchaseOrderDestination.UnitPrice\n\nUnit price  \nVX_PURCHASEORDERDESTINATION.UnitPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PurchaseOrderDestination.WorkOrderId\n\nWork Order Number   \nVX_PURCHASEORDERDESTINATION.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderYear": {
            "type": "integer",
            "description": "PurchaseOrderDestination.WorkOrderYear\n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPurchaseOrderDestination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderDestination"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderDestination"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseOrderDestination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAsset"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIAsset": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAsset"
            }
          }
        }
      },
      "SaveResponseOfIAssetServiceDue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetServiceDue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetServiceDue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetServiceDue"
          }
        }
      },
      "QueryResponseOfIAssetType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetType"
                }
              }
            }
          }
        ]
      },
      "IAssetType": {
        "type": "object",
        "description": "AssetType",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIAssetType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetType"
              }
            }
          }
        ]
      },
      "ETagOfIAssetType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetType"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetType"
          }
        }
      },
      "QueryResponseOfIAssetWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetWarranty"
                }
              }
            }
          }
        ]
      },
      "IAssetWarranty": {
        "type": "object",
        "description": "AssetWarranty",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetWarranty.AssetId\n\nVendor for the warranty  \nVX_ASSETWARRANTY.AssetId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "ExpireDate": {
            "type": "string",
            "description": "AssetWarranty.ExpireDate\n\nExpire date of warranty  \nVX_ASSETWARRANTY.ExpireDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetWarranty.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETWARRANTY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Meter1Expiration": {
            "type": "integer",
            "description": "AssetWarranty.Meter1Expiration\n\nMeter usage the warranty expires  \nVX_ASSETWARRANTY.Meter1Expiration long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "AssetWarranty.VendorDesc\n\nVendor short name  \nVX_ASSETWARRANTY.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AssetWarranty.VendorId\n\nVendor for the warranty  \nVX_ASSETWARRANTY.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "WarrantyType": {
            "type": "string",
            "description": "AssetWarranty.WarrantyType\n\nWhole unit warranty type always returned  \nM5 Forced to: \"WHOLE\" \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetWarranty"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetWarranty"
              }
            }
          }
        ]
      },
      "ETagOfIAssetWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetWarranty"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetWarranty": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetWarranty"
          }
        }
      },
      "QueryResponseOfIAssetWarrantyPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAssetWarrantyPart"
                }
              }
            }
          }
        ]
      },
      "IAssetWarrantyPart": {
        "type": "object",
        "description": "AssetWarrantyPart",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "AssetWarrantyPart.AssetId\n\nEquipment number  \nVX_ASSETWARRANTYPART.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "ClaimedAgainst": {
            "type": "boolean",
            "description": "AssetWarrantyPart.ClaimedAgainst\n\nStatus is Used (checked), In-Use (unchecked)  \nVX_ASSETWARRANTYPART.ClaimedAgainst bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "AssetWarrantyPart.Description\n\nThe part description  \nVX_ASSETWARRANTYPART.Description string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Duration": {
            "type": "number",
            "description": "AssetWarrantyPart.Duration\n\nDuration in months  \nVX_ASSETWARRANTYPART.Duration decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ExpireDate": {
            "type": "string",
            "description": "AssetWarrantyPart.ExpireDate\n\nWarranty Expire Date  \nVX_ASSETWARRANTYPART.ExpireDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "AssetWarrantyPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_ASSETWARRANTYPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MeterExpiration": {
            "type": "number",
            "description": "AssetWarrantyPart.MeterExpiration\n\nMeter expire usage  \nVX_ASSETWARRANTYPART.MeterExpiration decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "AssetWarrantyPart.PartId\n\nPart Number  \nVX_ASSETWARRANTYPART.PartId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "SystemAssembly": {
            "type": "string",
            "description": "AssetWarrantyPart.SystemAssembly\n\nSystem Component code  \nVX_ASSETWARRANTYPART.SystemAssembly string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "Usage": {
            "type": "number",
            "description": "AssetWarrantyPart.Usage\n\nAmount of usage in meter1 before it expires  \nVX_ASSETWARRANTYPART.Usage decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "AssetWarrantyPart.VendorDesc\n\nVendor name  \nVX_ASSETWARRANTYPART.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "AssetWarrantyPart.VendorId\n\nVendor ID  \nVX_ASSETWARRANTYPART.VendorId string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAssetWarrantyPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetWarrantyPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAssetWarrantyPart"
              }
            }
          }
        ]
      },
      "ETagOfIAssetWarrantyPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAssetWarrantyPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAssetWarrantyPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAssetWarrantyPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAssetWarrantyPart"
          }
        }
      },
      "SaveResponseOfListOfIAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAttachment"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IAttachment"
            }
          }
        }
      },
      "SaveResponseOfIAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAttachment"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAttachment"
          }
        }
      },
      "QueryResponseOfIAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAttachment"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAttachment"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAttachment"
              }
            }
          }
        ]
      },
      "ETagOfIAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIAvailability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IAvailability"
                }
              }
            }
          }
        ]
      },
      "IAvailability": {
        "type": "object",
        "description": "Availability",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "EffectiveDateTime"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "Availability.AssetId\n\nUnit number  \nVX_AVAILABILITY.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AvailableForService": {
            "type": "boolean",
            "description": "Availability.AvailableForService\n\nIs the unit available for service?  \nVX_AVAILABILITY.AvailableForService bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "DispositionCode": {
            "type": "integer",
            "description": "Availability.DispositionCode\n\nDisposition code (1 = available, others not)  \nVX_AVAILABILITY.DispositionCode int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DispositionCodeDesc": {
            "type": "string",
            "description": "Availability.DispositionCodeDesc\n\nDisposition code description  \nVX_AVAILABILITY.DispositionCodeDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "EffectiveDateTime": {
            "type": "string",
            "description": "Availability.EffectiveDateTime\n\nWhen the current status started  \nVX_AVAILABILITY.EffectiveDateTime DateTime  \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "format": "date-time",
            "nullable": true
          },
          "EstCompleteDateTime": {
            "type": "string",
            "description": "Availability.EstCompleteDateTime\n\nData and time when the work was originally expected to be completed  \nVX_AVAILABILITY.EstCompleteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EstCompleteDays": {
            "type": "integer",
            "description": "Availability.EstCompleteDays\n\nOriginal estimated whole number of days to complete the work  \nVX_AVAILABILITY.EstCompleteDays int  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Availability.InternalId\n\nUnique internal ID for mfive.oper_status_hist  \nVX_AVAILABILITY.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsCurrentStatus": {
            "type": "boolean",
            "description": "Availability.IsCurrentStatus\n\nIs this the current status?  \nVX_AVAILABILITY.IsCurrentStatus bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Availability.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_AVAILABILITY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OperationalClassDesc": {
            "type": "string",
            "description": "Availability.OperationalClassDesc\n\nOperational class description  \nVX_AVAILABILITY.OperationalClassDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalClassId": {
            "type": "string",
            "description": "Availability.OperationalClassId\n\nOperational class code  \nVX_AVAILABILITY.OperationalClassId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalEntityDesc": {
            "type": "string",
            "description": "Availability.OperationalEntityDesc\n\nDescription of the operational entity, such as using department name  \nVX_AVAILABILITY.OperationalEntityDesc string 32 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalEntityId": {
            "type": "string",
            "description": "Availability.OperationalEntityId\n\nOperational entity (usually using department)  \nVX_AVAILABILITY.OperationalEntityId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalStatusDesc": {
            "type": "string",
            "description": "Availability.OperationalStatusDesc\n\nOperational status code description  \nVX_AVAILABILITY.OperationalStatusDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "OperationalStatusId": {
            "type": "string",
            "description": "Availability.OperationalStatusId\n\nOperational status code  \nVX_AVAILABILITY.OperationalStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "OperComment": {
            "type": "string",
            "description": "Availability.OperComment\n\nOperator's comment, mixed case  \nVX_AVAILABILITY.OperComment string 100 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ParkingLocationId": {
            "type": "string",
            "description": "Availability.ParkingLocationId\n\nParking location code (not description)  \nVX_AVAILABILITY.ParkingLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "ParkingSpot": {
            "type": "string",
            "description": "Availability.ParkingSpot\n\nParking spot, such as \"back lot\" or \"106\"  \nVX_AVAILABILITY.ParkingSpot string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "SourceOfChange": {
            "type": "string",
            "description": "Availability.SourceOfChange\n\nSource of change will be provided by UI. Not stored in Database.  \nVX_AVAILABILITY.SourceOfChange string  \n\nSearchable: False ",
            "nullable": true
          },
          "Spare": {
            "type": "boolean",
            "description": "Availability.Spare\n\nWhether the asset being repaired is a spare  \nVX_AVAILABILITY.Spare bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "UserId": {
            "type": "string",
            "description": "Availability.UserId\n\nUser ID who created the record  \nVX_AVAILABILITY.UserId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "Availability.WorkOrderId\n\nWork order  \nVX_AVAILABILITY.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIAvailability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAvailability"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIAvailability"
              }
            }
          }
        ]
      },
      "ETagOfIAvailability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIAvailability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IAvailability"
              }
            }
          }
        ]
      },
      "SaveBodyOfIAvailability": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IAvailability"
          }
        }
      },
      "QueryResponseOfIBilling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IBilling"
                }
              }
            }
          }
        ]
      },
      "IBilling": {
        "type": "object",
        "description": "Billing",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "Billing.AssetId\n\nAsset or unit ID  \nVX_BILLING.AssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "BillingCodeId": {
            "type": "string",
            "description": "Billing.BillingCodeId\n\nBilling code  \nVX_BILLING.BillingCodeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "Billing.Comments\n\nTransaction description  \nVX_BILLING.Comments string  \n\nSearchable: False ",
            "nullable": true
          },
          "CommercialLaborTotalCost": {
            "type": "number",
            "description": "Billing.CommercialLaborTotalCost\n\nLabor cost, including any markup, on a commercial transaction  \nVX_BILLING.CommercialLaborTotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CommercialMarkupCost": {
            "type": "number",
            "description": "Billing.CommercialMarkupCost\n\nTotal markup on a commercial transaction  \nVX_BILLING.CommercialMarkupCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CommercialOtherTotalCost": {
            "type": "number",
            "description": "Billing.CommercialOtherTotalCost\n\nMiscellaneous cost, including any markup, on a commercial transaction  \nVX_BILLING.CommercialOtherTotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CommercialPartsTotalCost": {
            "type": "number",
            "description": "Billing.CommercialPartsTotalCost\n\nParts cost, including any markup, on a commercial transaction  \nVX_BILLING.CommercialPartsTotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CommercialTaxCost": {
            "type": "number",
            "description": "Billing.CommercialTaxCost\n\nTotal tax on a commercial transaction  \nVX_BILLING.CommercialTaxCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CommercialTotalCost": {
            "type": "number",
            "description": "Billing.CommercialTotalCost\n\nTotal value of a commercial transaction  \nVX_BILLING.CommercialTotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CreditAccountDesc": {
            "type": "string",
            "description": "Billing.CreditAccountDesc\n\nCredit (revenue) account description, if any  \nVX_BILLING.CreditAccountDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "CreditAccountId": {
            "type": "string",
            "description": "Billing.CreditAccountId\n\nCredit (revenue) account  \nVX_BILLING.CreditAccountId string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "DebitAccountDesc": {
            "type": "string",
            "description": "Billing.DebitAccountDesc\n\nDebit (expense) account description, if any  \nVX_BILLING.DebitAccountDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DebitAccountId": {
            "type": "string",
            "description": "Billing.DebitAccountId\n\nDebit (expense) account  \nVX_BILLING.DebitAccountId string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "Billing.DepartmentDesc\n\nDescription or name of the department being billed  \nVX_BILLING.DepartmentDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "Billing.DepartmentId\n\nDepartment being billed  \nVX_BILLING.DepartmentId string  \n\nSearchable: False ",
            "nullable": true
          },
          "EachCost": {
            "type": "number",
            "description": "Billing.EachCost\n\nCost for each of the quantity  \nVX_BILLING.EachCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FeeCost": {
            "type": "number",
            "description": "Billing.FeeCost\n\nValue of a special fee  \nVX_BILLING.FeeCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "FuelTypeId": {
            "type": "string",
            "description": "Billing.FuelTypeId\n\nFuel type  \nVX_BILLING.FuelTypeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalExternal": {
            "type": "string",
            "description": "Billing.InternalExternal\n\nVX_BILLING.InternalExternal string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Billing.InternalId\n\nUnique row identifier  \nVX_BILLING.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "integer",
            "description": "Billing.InvoiceNumber\n\nBilling's invoice number  \nVX_BILLING.InvoiceNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "Billing.LaborCost\n\nValue of the labor transaction  \nVX_BILLING.LaborCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "Billing.LaborHours\n\nLabor hours  \nVX_BILLING.LaborHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Billing.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_BILLING.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MeterCost": {
            "type": "number",
            "description": "Billing.MeterCost\n\nUsage cost based on a meter  \nVX_BILLING.MeterCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OtherCost": {
            "type": "number",
            "description": "Billing.OtherCost\n\nOther costs  \nVX_BILLING.OtherCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "Billing.PartId\n\nPart number  \nVX_BILLING.PartId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PartsCost": {
            "type": "number",
            "description": "Billing.PartsCost\n\nPart costs  \nVX_BILLING.PartsCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Period": {
            "type": "string",
            "description": "Billing.Period\n\nFiscal period  \nVX_BILLING.Period string  \n\nSearchable: False ",
            "nullable": true
          },
          "PeriodStatus": {
            "type": "string",
            "description": "Billing.PeriodStatus\n\nClosed, pending (billed and not closed), open (future)  \nVX_BILLING.PeriodStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoolTicket": {
            "type": "string",
            "description": "Billing.PoolTicket\n\nMotor pool ticket number  \nVX_BILLING.PoolTicket int  \n\nSearchable: False ",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "description": "Billing.Quantity\n\nQuantity  \nVX_BILLING.Quantity decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RecurringCost": {
            "type": "number",
            "description": "Billing.RecurringCost\n\nCosts related to recurring items such as leases, depreciation, fixed costs  \nVX_BILLING.RecurringCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "Billing.Source\n\nSource of the transaction, usually a table  \nVX_BILLING.Source string  \n\nSearchable: False ",
            "nullable": true
          },
          "TableReferenceId": {
            "type": "integer",
            "description": "Billing.TableReferenceId\n\nRow ID of the source table  \nVX_BILLING.TableReferenceId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "Billing.TaskDesc\n\nJob description  \nVX_BILLING.TaskDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "Billing.TaskId\n\nJob code  \nVX_BILLING.TaskId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TimeCost": {
            "type": "number",
            "description": "Billing.TimeCost\n\nCost related to time, such as for motor pool ticket duration  \nVX_BILLING.TimeCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "Billing.TotalCost\n\nTotal billed value of the transaction  \nVX_BILLING.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TransactionDateTime": {
            "type": "string",
            "description": "Billing.TransactionDateTime\n\nFor a point-in-time transaction, when it happened  \nVX_BILLING.TransactionDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TransactionType": {
            "type": "string",
            "description": "Billing.TransactionType\n\nKind of transaction, \"billing item\"  \nVX_BILLING.TransactionType string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "Billing.VendorDesc\n\nVendor description  \nVX_BILLING.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "Billing.VendorId\n\nVendor number  \nVX_BILLING.VendorId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "Billing.WorkOrderId\n\nWork order number  \nVX_BILLING.WorkOrderId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "Billing.WorkOrderLocationId\n\nWork order location  \nVX_BILLING.WorkOrderLocationId string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIBilling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIBilling"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIBilling"
              }
            }
          }
        ]
      },
      "ETagOfIBilling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIBilling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IBilling"
              }
            }
          }
        ]
      },
      "SaveBodyOfIBilling": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IBilling"
          }
        }
      },
      "QueryResponseOfIChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IChangeLog"
                }
              }
            }
          }
        ]
      },
      "IChangeLog": {
        "type": "object",
        "description": "ChangeLog",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIChangeLog"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIChangeLog"
              }
            }
          }
        ]
      },
      "ETagOfIChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIChangeLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IChangeLog"
              }
            }
          }
        ]
      },
      "SaveBodyOfIChangeLog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IChangeLog"
          }
        }
      },
      "QueryResponseOfIConditionRating": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IConditionRating"
                }
              }
            }
          }
        ]
      },
      "IConditionRating": {
        "type": "object",
        "description": "ConditionRating",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIConditionRating": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIConditionRating"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIConditionRating"
              }
            }
          }
        ]
      },
      "ETagOfIConditionRating": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIConditionRating": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IConditionRating"
              }
            }
          }
        ]
      },
      "SaveBodyOfIConditionRating": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IConditionRating"
          }
        }
      },
      "QueryResponseOfICoreClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ICoreClaim"
                }
              }
            }
          }
        ]
      },
      "ICoreClaim": {
        "type": "object",
        "description": "CoreClaim",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "CoreAmt": {
            "type": "number",
            "description": "CoreClaim.CoreAmt\n\nCore charge each  \nVX_CORECLAIM.CoreAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CoreClaimId": {
            "type": "integer",
            "description": "CoreClaim.CoreClaimId\n\nCore claim ID  \nVX_CORECLAIM.CoreClaimId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "CoreClaim.InternalId\n\nInternal unique ID; same as core claim ID  \nVX_CORECLAIM.InternalId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "IsCoreAmtManuallyAdjusted": {
            "type": "boolean",
            "description": "CoreClaim.IsCoreAmtManuallyAdjusted\n\nWas the core amount manually adjusted?  \nVX_CORECLAIM.IsCoreAmtManuallyAdjusted bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsManuallyCreated": {
            "type": "boolean",
            "description": "CoreClaim.IsManuallyCreated\n\nWas this claim manually created?  \nVX_CORECLAIM.IsManuallyCreated bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsQtyManuallyAdjusted": {
            "type": "boolean",
            "description": "CoreClaim.IsQtyManuallyAdjusted\n\nWas the quantity manually adjusted?  \nVX_CORECLAIM.IsQtyManuallyAdjusted bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "CoreClaim.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_CORECLAIM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "CoreClaim.PartId\n\nPart number  \nVX_CORECLAIM.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "CoreClaim.PartInternalId\n\nPart's internal unique ID  \nVX_CORECLAIM.PartInternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Qty": {
            "type": "integer",
            "description": "CoreClaim.Qty\n\nQuantity  \nVX_CORECLAIM.Qty int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "CoreClaim.ReferenceNumber\n\nReference or RMA number  \nVX_CORECLAIM.ReferenceNumber string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "CoreClaim.Status\n\nWAITING (W), CANCELLED (C), FINALIZED (F), CLAIMED (L), TRANSFERRED (T), SENT TO VENDOR (V)  \nVX_CORECLAIM.Status string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCoreAmt": {
            "type": "number",
            "description": "CoreClaim.TotalCoreAmt\n\nTotal core charge  \nVX_CORECLAIM.TotalCoreAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalCoreCreditAmt": {
            "type": "number",
            "description": "CoreClaim.TotalCoreCreditAmt\n\nTotal core credit  \nVX_CORECLAIM.TotalCoreCreditAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "CoreClaim.VendorId\n\nVendor Number  \nVX_CORECLAIM.VendorId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "CoreClaim.VendorInternalId\n\nVendor's internal unique ID  \nVX_CORECLAIM.VendorInternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfICoreClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICoreClaim"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICoreClaim"
              }
            }
          }
        ]
      },
      "ETagOfICoreClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfICoreClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ICoreClaim"
              }
            }
          }
        ]
      },
      "SaveBodyOfICoreClaim": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ICoreClaim"
          }
        }
      },
      "QueryResponseOfICoreTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ICoreTracking"
                }
              }
            }
          }
        ]
      },
      "ICoreTracking": {
        "type": "object",
        "description": "CoreTracking",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "CoreTracking.AssetId\n\nUnit No  \nVX_CORETRACKING.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetInternalId": {
            "type": "integer",
            "description": "CoreTracking.AssetInternalId\n\nUnit's internal unique ID  \nVX_CORETRACKING.AssetInternalId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "CoreTracking.Comments\n\nNotes  \nVX_CORETRACKING.Comments string  \n\nSearchable: False ",
            "nullable": true
          },
          "CoreAmt": {
            "type": "number",
            "description": "CoreTracking.CoreAmt\n\nCore charge each  \nVX_CORETRACKING.CoreAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CoreClaimId": {
            "type": "integer",
            "description": "CoreTracking.CoreClaimId\n\nCore claim ID  \nVX_CORETRACKING.CoreClaimId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "CoreCreditAmt": {
            "type": "number",
            "description": "CoreTracking.CoreCreditAmt\n\nCore charge each  \nVX_CORETRACKING.CoreCreditAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "CoreTracking.InternalId\n\nInternal unique ID; same as core claim ID  \nVX_CORETRACKING.InternalId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "IssueDestination": {
            "type": "string",
            "description": "CoreTracking.IssueDestination\n\nUNIT, INDIRECT ACCOUNT, WORK ORDER [Derived from ISSU, ISSA, ISSW]  \nVX_CORETRACKING.IssueDestination string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "CoreTracking.LocationId\n\nInventory location ID; for transfers, the from-location  \nVX_CORETRACKING.LocationId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "CoreTracking.PartId\n\nPart number  \nVX_CORETRACKING.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "CoreTracking.PartInternalId\n\nPart's internal unique ID  \nVX_CORETRACKING.PartInternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Qty": {
            "type": "integer",
            "description": "CoreTracking.Qty\n\nQuantity  \nVX_CORETRACKING.Qty int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "CoreTracking.ReferenceNumber\n\nReference or RMA number  \nVX_CORECLAIM.ReferenceNumber string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "CoreTracking.Serialized\n\nDid the issued part have a serial number?  \nVX_CORECLAIM.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "CoreTracking.SerialNumber\n\nPart's serial number  \nVX_CORECLAIM.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "ShipQty": {
            "type": "integer",
            "description": "CoreTracking.ShipQty\n\nQuantity  \nVX_CORETRACKING.ShipQty int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ShipToLocationId": {
            "type": "string",
            "description": "CoreTracking.ShipToLocationId\n\nLocation shipped to.  \nVX_CORETRACKING.ShipToLocationId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "CoreTracking.Status\n\nWAITING (W), CANCELLED (C), FINALIZED (F), CLAIMED (L), TRANSFERRED (T), SENT TO VENDOR (V)  \nVX_CORETRACKING.Status string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "CoreTracking.TaskId\n\nJob issued to  \nVX_CORETRACKING.TaskId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "CoreTracking.UnitCost\n\nCost of each part, including core.  \nVX_CORETRACKING.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "CoreTracking.VendorId\n\nVendor Number  \nVX_CORETRACKING.VendorId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "CoreTracking.VendorInternalId\n\nVendor's internal unique ID  \nVX_CORETRACKING.VendorInternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "CoreTracking.WorkOrderId\n\nWork Order number  \nVX_CORETRACKING.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfICoreTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICoreTracking"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICoreTracking"
              }
            }
          }
        ]
      },
      "ETagOfICoreTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfICoreTracking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ICoreTracking"
              }
            }
          }
        ]
      },
      "SaveBodyOfICoreTracking": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ICoreTracking"
          }
        }
      },
      "QueryResponseOfICurrentJobStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ICurrentJobStatus"
                }
              }
            }
          }
        ]
      },
      "ICurrentJobStatus": {
        "type": "object",
        "description": "CurrentJobStatus",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "CurrentJobStatus.AccountId\n\nDirect account number.  \nVX_CURRENTJOBSTATUS.AccountId string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "CurrentJobStatus.AssetDesc\n\nDescription of Equipment. (Unit = Year, Make Model / Dept = Dept_Desc / Comp = Bill_Acct)    \nVX_CURRENTJOBSTATUS.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "CurrentJobStatus.AssetId\n\nEquipment Number  \nVX_CURRENTJOBSTATUS.AssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetSerialNumber": {
            "type": "string",
            "description": "CurrentJobStatus.AssetSerialNumber\n\nEquipment Serial No  \nVX_CURRENTJOBSTATUS.AssetSerialNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "BeginDateTime": {
            "type": "string",
            "description": "CurrentJobStatus.BeginDateTime\n\nPunch-in time  \nVX_CURRENTJOBSTATUS.BeginDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CauseCorrectionNoteRequired": {
            "type": "boolean",
            "description": "CurrentJobStatus.CauseCorrectionNoteRequired\n\nIs cause and correction note required?  \nVX_CURRENTJOBSTATUS.CauseCorrectionNoteRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CauseNoteText": {
            "type": "string",
            "description": "CurrentJobStatus.CauseNoteText\n\nVX_CURRENTJOBSTATUS.CauseNoteText string 2000 \n\nSearchable: False ",
            "nullable": true
          },
          "ClockInDateTime": {
            "type": "string",
            "description": "CurrentJobStatus.ClockInDateTime\n\nWhen employee first logged in for the day  \nVX_CURRENTJOBSTATUS.ClockInDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "CurrentJobStatus.Comments\n\nM5 doesn't have these notes but a placeholder is needed to send them to the server  \nVX_CURRENTJOBSTATUS.Comments string  \n\nSearchable: False ",
            "nullable": true
          },
          "ComplaintNoteText": {
            "type": "string",
            "description": "CurrentJobStatus.ComplaintNoteText\n\nVX_CURRENTJOBSTATUS.ComplaintNoteText string 2000 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectionNoteText": {
            "type": "string",
            "description": "CurrentJobStatus.CorrectionNoteText\n\nVX_CURRENTJOBSTATUS.CorrectionNoteText string 2000 \n\nSearchable: False ",
            "nullable": true
          },
          "CurrentlyClockedIn": {
            "type": "boolean",
            "description": "CurrentJobStatus.CurrentlyClockedIn\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "CurrentJobStatus.EmployeeId\n\nUnique Employee Number  \nVX_CURRENTJOBSTATUS.EmployeeId string 11 \n\nSearchable: True ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "CurrentJobStatus.EmployeeName\n\nEmployee Name  \nVX_CURRENTJOBSTATUS.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "LaborType": {
            "type": "string",
            "description": "CurrentJobStatus.LaborType\n\nCurrent Labor Type (WORK ORDER, INDIRECT TIME)  \nVX_CURRENTJOBSTATUS.LaborType string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "CurrentJobStatus.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_CURRENTJOBSTATUS.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LoadPct": {
            "type": "number",
            "description": "CurrentJobStatus.LoadPct\n\nLoad factor base on employee title  \nVX_CURRENTJOBSTATUS.LoadPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "CurrentJobStatus.LocationId\n\nJob location if there is one, or employee's location  \nVX_CURRENTJOBSTATUS.LocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "PayClass": {
            "type": "string",
            "description": "CurrentJobStatus.PayClass\n\nPay class  \nVX_CURRENTJOBSTATUS.PayClass string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "PayStep": {
            "type": "string",
            "description": "CurrentJobStatus.PayStep\n\nPay step  \nVX_CURRENTJOBSTATUS.PayStep string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "PlanResourceHours": {
            "type": "number",
            "description": "CurrentJobStatus.PlanResourceHours\n\nEmployee plan resource hours.  \nVX_CURRENTJOBSTATUS.PlanResourceHours decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PositionIdAllowed": {
            "type": "boolean",
            "description": "CurrentJobStatus.PositionIdAllowed\n\nCan a position be (optionally) entered on a task?  \nVX_CURRENTJOBSTATUS.PositionIdAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PositionIdRequired": {
            "type": "boolean",
            "description": "CurrentJobStatus.PositionIdRequired\n\nIs the position required to leave a task?  \nVX_CURRENTJOBSTATUS.PositionIdRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireNotesIfFinal": {
            "type": "boolean",
            "description": "CurrentJobStatus.RequireNotesIfFinal\n\nDoes the user need to enter notes if (1) the job is in a 'final' status and (2) no user has entered any?  \nVX_CURRENTJOBSTATUS.RequireNotesIfFinal bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "string",
            "description": "CurrentJobStatus.ServiceRequestId\n\nWork request number that the job came from  \nVX_CURRENTJOBSTATUS.ServiceRequestId int 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ShiftId": {
            "type": "string",
            "description": "CurrentJobStatus.ShiftId\n\nEmployee's current shift  \nVX_CURRENTJOBSTATUS.ShiftId int  \n\nSearchable: False ",
            "nullable": true
          },
          "Signature": {
            "type": "string",
            "description": "CurrentJobStatus.Signature\n\nTask's signature, saved as an base64 image  \nVX_CURRENTJOBSTATUS.Signature string  \n\nSearchable: False ",
            "nullable": true
          },
          "SignatureRequired": {
            "type": "boolean",
            "description": "CurrentJobStatus.SignatureRequired\n\nDoes the task require a signature to complete it?  \nVX_CURRENTJOBSTATUS.SignatureRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "StopDateTime": {
            "type": "string",
            "description": "CurrentJobStatus.StopDateTime\n\nEffective date and time when the activity was stopped; write-only property  \nVX_CURRENTJOBSTATUS.StopDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "CurrentJobStatus.TaskDesc\n\nDB function to build the job description from each piece of the code, or indirect description  \nVX_CURRENTJOBSTATUS.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskEstHours": {
            "type": "number",
            "description": "CurrentJobStatus.TaskEstHours\n\nEstimated Labor Hours, converted from Milliseconds  \nVX_CURRENTJOBSTATUS.TaskEstHours decimal 18 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "CurrentJobStatus.TaskId\n\nJob Code  \nVX_CURRENTJOBSTATUS.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskRemainingHours": {
            "type": "number",
            "description": "CurrentJobStatus.TaskRemainingHours\n\nNumber of hours remaining on the task, calculated in the service.  \nVX_CURRENTJOBSTATUS.TaskRemainingHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "CurrentJobStatus.TaskStatusDesc\n\nJob Status code Description  \nVX_CURRENTJOBSTATUS.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "CurrentJobStatus.TaskStatusId\n\nJob Status code  \nVX_CURRENTJOBSTATUS.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeCodeDesc": {
            "type": "string",
            "description": "CurrentJobStatus.TimeCodeDesc\n\nTime type description  \nVX_CURRENTLABOR.TimeCodeDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeCodeId": {
            "type": "string",
            "description": "CurrentJobStatus.TimeCodeId\n\nTime Type  \nVX_CURRENTJOBSTATUS.TimeCodeId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "UserCanChangeStatus": {
            "type": "boolean",
            "description": "CurrentJobStatus.UserCanChangeStatus\n\nVX_CURRENTJOBSTATUS.UserCanChangeStatus bool  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "CurrentJobStatus.WorkOrderId\n\nWork Order Number  \nVX_CURRENTJOBSTATUS.WorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationDesc": {
            "type": "string",
            "description": "CurrentJobStatus.WorkOrderLocationDesc\n\nWork Order Location Description  \nVX_CURRENTJOBSTATUS.WorkOrderLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "CurrentJobStatus.WorkOrderLocationId\n\nWork Order Maintenance Location  \nVX_CURRENTJOBSTATUS.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkPositionId": {
            "type": "string",
            "description": "CurrentJobStatus.WorkPositionId\n\nPosition Code  \nVX_CURRENTJOBSTATUS.WorkPositionId string 3 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfICurrentJobStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICurrentJobStatus"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICurrentJobStatus"
              }
            }
          }
        ]
      },
      "ETagOfICurrentJobStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfICurrentJobStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ICurrentJobStatus"
              }
            }
          }
        ]
      },
      "SaveBodyOfICurrentJobStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ICurrentJobStatus"
          }
        }
      },
      "QueryResponseOfIDepartmentAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartmentAttribute"
                }
              }
            }
          }
        ]
      },
      "IDepartmentAttribute": {
        "type": "object",
        "description": "DepartmentAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "DepartmentAttribute.AttributeId\n\nItem description  \nVX_DEPARTMENTATTRIBUTE.AttributeId string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "DepartmentAttribute.DepartmentId\n\nDepartment number  \nVX_DEPARTMENTATTRIBUTE.DepartmentId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "DepartmentAttribute.LabelText\n\nItem description  \nVX_DEPARTMENTATTRIBUTE.LabelText string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "DepartmentAttribute.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_DEPARTMENTATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "DepartmentAttribute.Value\n\nItem value  \nVX_DEPARTMENTATTRIBUTE.Value string 50 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIDepartmentAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIDepartmentAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIDepartmentAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IDepartmentAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIDepartmentAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IDepartmentAttribute"
          }
        }
      },
      "QueryResponseOfIDepartmentOrgLevel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartmentOrgLevel"
                }
              }
            }
          }
        ]
      },
      "IDepartmentOrgLevel": {
        "type": "object",
        "description": "DepartmentOrgLevel",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "DepartmentId": {
            "type": "string",
            "description": "DepartmentOrgLevel.DepartmentId\n\nDepartment number  \nVX_DEPARTMENTORGLEVEL.DepartmentId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "DepartmentOrgLevel.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_DEPARTMENTORGLEVEL.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LevelName": {
            "type": "string",
            "description": "DepartmentOrgLevel.LevelName\n\nOrganizational level name  \nVX_DEPARTMENTORGLEVEL.LevelName string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "LevelNumber": {
            "type": "integer",
            "description": "DepartmentOrgLevel.LevelNumber\n\nOrganizational level number  \nVX_DEPARTMENTORGLEVEL.LevelNumber long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LevelOrgValue": {
            "type": "string",
            "description": "DepartmentOrgLevel.LevelOrgValue\n\nOrganizational level value  \nVX_DEPARTMENTORGLEVEL.LevelOrgValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "DepartmentOrgLevel.ValueRequired\n\nIs a value required for this level?  \nVX_DEPARTMENTORGLEVEL.ValueRequired bool  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIDepartmentOrgLevel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentOrgLevel"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentOrgLevel"
              }
            }
          }
        ]
      },
      "ETagOfIDepartmentOrgLevel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIDepartmentOrgLevel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IDepartmentOrgLevel"
              }
            }
          }
        ]
      },
      "SaveBodyOfIDepartmentOrgLevel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IDepartmentOrgLevel"
          }
        }
      },
      "SaveResponseOfListOfIDepartmentPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartmentPartIssue"
                }
              }
            }
          }
        ]
      },
      "IDepartmentPartIssue": {
        "type": "object",
        "description": "DepartmentPartIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "BinId": {
            "type": "string",
            "description": "DepartmentPartIssue.BinId\n\nUsed for the hose for M5 fluids  \nVX_DEPARTMENTPARTISSUE.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "DepartmentPartIssue.Comments\n\nIssue notes  \nVX_DEPARTMENTPARTISSUE.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "CoreCost": {
            "type": "number",
            "description": "DepartmentPartIssue.CoreCost\n\nCore cost  \nVX_DEPARTMENTPARTISSUE.CoreCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "DepartmentPartIssue.Cost\n\nTotal value of issue, including tax  \nVX_DEPARTMENTPARTISSUE.Cost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "DeptId": {
            "type": "string",
            "description": "DepartmentPartIssue.DeptId\n\nDepartment number  \nVX_DEPARTMENTPARTISSUE.DeptId string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DeptInternalId": {
            "type": "integer",
            "description": "DepartmentPartIssue.DeptInternalId\n\nInternal department ID  \nVX_DEPARTMENTPARTISSUE.DeptInternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "DepartmentPartIssue.Description\n\nPart number description  \nVX_DEPARTMENTPARTISSUE.Description string 30 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "DepartmentPartIssue.EmployeeId\n\nThe employee who issued the part  \nVX_DEPARTMENTPARTISSUE.EmployeeId string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "DepartmentPartIssue.EmployeeName\n\nThe employee name who issued the part.  \nVX_DEPARTMENTPARTISSUE.EmployeeName string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "DepartmentPartIssue.FailureDesc\n\nFailure code description  \nVX_DEPARTMENTPARTISSUE.FailureDesc string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "DepartmentPartIssue.FailureId\n\nFailure code for part  \nVX_DEPARTMENTPARTISSUE.FailureId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "DepartmentPartIssue.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_DEPARTMENTPARTISSUE.FromStock bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "HasCoreCharge": {
            "type": "boolean",
            "description": "DepartmentPartIssue.HasCoreCharge\n\nFlag to denote if the core cost is added to the total cost  \nVX_DEPARTMENTPARTISSUE.HasCoreCharge bool 1 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "DepartmentPartIssue.InternalId\n\nDEPT_PART_CHG.unit_part_chg_id  \nVX_DEPARTMENTPARTISSUE.InternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "DepartmentPartIssue.InvoiceDate\n\nInvoice date  \nVX_DEPARTMENTPARTISSUE.InvoiceDate DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.InvoiceNumber\n\nInvoice number for the part issue  \nVX_DEPARTMENTPARTISSUE.InvoiceNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "DepartmentPartIssue.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_DEPARTMENTPARTISSUE.IsReturn bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "DepartmentPartIssue.IsReturnable\n\nIsn't a non-stock part, etc.  \nVX_DEPARTMENTPARTISSUE.IsReturnable bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "DepartmentPartIssue.IssueDateTime\n\nIssue Date Time of part  \nVX_DEPARTMENTPARTISSUE.IssueDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueLocationDesc": {
            "type": "string",
            "description": "DepartmentPartIssue.IssueLocationDesc\n\nIssue location description of the part  \nVX_DEPARTMENTPARTISSUE.IssueLocationDesc string 40 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IssueLocationId": {
            "type": "string",
            "description": "DepartmentPartIssue.IssueLocationId\n\nIssue location of the part  \nVX_DEPARTMENTPARTISSUE.IssueLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "DepartmentPartIssue.IssueQty\n\nQuantity of part issued  \nVX_DEPARTMENTPARTISSUE.IssueQty decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IssueTicketNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.IssueTicketNumber\n\nIssue ticket number  \nVX_DEPARTMENTPARTISSUE.IssueTicketNumber string  \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "IsWarrantyViolation": {
            "type": "boolean",
            "description": "DepartmentPartIssue.IsWarrantyViolation\n\nWas the part issued due to a warranty violation?  \nVX_DEPARTMENTPARTISSUE.IsWarrantyViolation bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "DepartmentPartIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_DEPARTMENTPARTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "DepartmentPartIssue.ManufacturerId\n\nPart manufacturer  \nVX_DEPARTMENTPARTISSUE.ManufacturerId string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "NewSerialNumbers": {
            "description": "DepartmentPartIssue.NewSerialNumbers\n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "PartId": {
            "type": "string",
            "description": "DepartmentPartIssue.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_DEPARTMENTPARTISSUE.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "DepartmentPartIssue.PartInternalId\n\nPart master's row_id  \nVX_DEPARTMENTPARTISSUE.PartInternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "DepartmentPartIssue.PartOrFluid\n\nPART or FLUID  \nVX_DEPARTMENTPARTISSUE.PartOrFluid string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PoItem": {
            "type": "string",
            "description": "DepartmentPartIssue.PoItem\n\nPO Item  \nVX_DEPARTMENTPARTISSUE.PoItem string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "DepartmentPartIssue.PoLineItem\n\nPO Line number  \nVX_DEPARTMENTPARTISSUE.PoLineItem int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.PoNumber\n\nPurchase Order number for the part issue  \nVX_DEPARTMENTPARTISSUE.PoNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.ProNumber\n\nPRO Number for part  \nVX_DEPARTMENTPARTISSUE.ProNumber string 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.ReferenceNumber\n\nReference number for part issue  \nVX_DEPARTMENTPARTISSUE.ReferenceNumber string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonComment": {
            "type": "string",
            "description": "DepartmentPartIssue.ReturnReasonComment\n\nM5 Forced to: null \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonDesc": {
            "type": "string",
            "description": "DepartmentPartIssue.ReturnReasonDesc\n\nReturn reason's description  \nVX_DEPARTMENTPARTISSUE.ReturnReasonDesc string 60 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonId": {
            "type": "string",
            "description": "DepartmentPartIssue.ReturnReasonId\n\nReturn reason code  \nVX_DEPARTMENTPARTISSUE.ReturnReasonId string 4 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonStatus": {
            "type": "string",
            "description": "DepartmentPartIssue.ReturnReasonStatus\n\nNull for M5 because there's no return-request; it just happens  \nM5 Forced to: null \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "DepartmentPartIssue.Serialized\n\nDid the issued part have a serial number?  \nVX_DEPARTMENTPARTISSUE.Serialized bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "DepartmentPartIssue.SerialNumber\n\nPart's serial number  \nVX_DEPARTMENTPARTISSUE.SerialNumber string 32 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "DepartmentPartIssue.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_DEPARTMENTPARTISSUE.UniqueId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "DepartmentPartIssue.UnitCost\n\nVX_DEPARTMENTPARTISSUE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "DepartmentPartIssue.UnitOfIssue\n\nUnit of issue for part  \nVX_DEPARTMENTPARTISSUE.UnitOfIssue string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "DepartmentPartIssue.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_DEPARTMENTPARTISSUE.VendorContractId string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "DepartmentPartIssue.VendorId\n\nVendor number the part was received and issued from  \nVX_DEPARTMENTPARTISSUE.VendorId string 12 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorName": {
            "type": "string",
            "description": "DepartmentPartIssue.VendorName\n\nVendor name  \nVX_DEPARTMENTPARTISSUE.VendorName string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIDepartmentPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IDepartmentPartIssue"
            }
          }
        }
      },
      "QueryResponseOfIDepartmentPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartmentPartIssue"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIDepartmentPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentPartIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentPartIssue"
              }
            }
          }
        ]
      },
      "ETagOfIDepartmentPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIDepartmentPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IDepartmentPartIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIDepartmentPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IDepartmentPartIssue"
          }
        }
      },
      "QueryResponseOfIDepartmentRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartmentRequisition"
                }
              }
            }
          }
        ]
      },
      "IDepartmentRequisition": {
        "type": "object",
        "description": "DepartmentRequisition",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "DepartmentRequisition.Active\n\nIndicator if the requisition number is active or disabled.  Y means active, null means disabled.  \nVX_DEPARTMENTREQUISITION.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "DeptId": {
            "type": "string",
            "description": "DepartmentRequisition.DeptId\n\nDepartment Number  \nVX_DEPARTMENTREQUISITION.DeptId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "DepartmentRequisition.Description\n\nRequisition Descriptipn  \nVX_DEPARTMENTREQUISITION.Description string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "DepartmentRequisition.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_DEPARTMENTREQUISITION.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequisitionDateTime": {
            "type": "string",
            "description": "DepartmentRequisition.RequisitionDateTime\n\nRequisition Date Time.  \nVX_DEPARTMENTREQUISITION.RequisitionDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequisitionId": {
            "type": "string",
            "description": "DepartmentRequisition.RequisitionId\n\nRequisition Number  \nVX_DEPARTMENTREQUISITION.RequisitionId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIDepartmentRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentRequisition"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartmentRequisition"
              }
            }
          }
        ]
      },
      "ETagOfIDepartmentRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIDepartmentRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IDepartmentRequisition"
              }
            }
          }
        ]
      },
      "SaveBodyOfIDepartmentRequisition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IDepartmentRequisition"
          }
        }
      },
      "QueryResponseOfIDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartment"
                }
              }
            }
          }
        ]
      },
      "IDepartment": {
        "type": "object",
        "description": "Department",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Active",
          "AllowWorkOrders",
          "BillingId",
          "BillingIdEffectiveDate",
          "ContactEmail",
          "ContactId",
          "ContactName",
          "ContactPhone",
          "DeliveryLocationDesc",
          "DeliveryLocationId",
          "DepartmentId",
          "Description",
          "InternalId",
          "InventoryLocationDesc",
          "InventoryLocationId",
          "LastChangedDateTime",
          "MaintenanceClassDesc",
          "MaintenanceClassId",
          "MaintenanceLocationDesc",
          "MaintenanceLocationId",
          "OrgLevel",
          "OrgLevels",
          "TechSpecDesc",
          "TechSpecId",
          "WorkOrderComment"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Department.Active\n\nActive?  \nVX_DEPARTMENT.Active bool  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "AllowWorkOrders": {
            "type": "boolean",
            "description": "Department.AllowWorkOrders\n\nCan work orders be opened on this department?  \nVX_DEPARTMENT.AllowWorkOrders bool  \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "BillingId": {
            "type": "string",
            "description": "Department.BillingId\n\nUnit's Billing Code  \nVX_DEPARTMENT.BillingId string 8 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "BillingIdEffectiveDate": {
            "type": "string",
            "description": "Department.BillingIdEffectiveDate\n\nUnit's Billing Code Effective Date  \nVX_DEPARTMENT.BillingIdEffectiveDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "format": "date-time",
            "nullable": true
          },
          "ContactEmail": {
            "type": "string",
            "description": "Department.ContactEmail\n\nDepartment contact email  \nVX_DEPARTMENT.ContactEmail string 128 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ContactId": {
            "type": "string",
            "description": "Department.ContactId\n\nDepartment contact employee ID  \nVX_DEPARTMENT.ContactId string 11 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "Department.ContactName\n\nContact name  \nVX_DEPARTMENT.ContactName string 100 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ContactPhone": {
            "type": "string",
            "description": "Department.ContactPhone\n\nDepartment contact phone  \nVX_DEPARTMENT.ContactPhone string 20 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DeliveryLocationDesc": {
            "type": "string",
            "description": "Department.DeliveryLocationDesc\n\nDefault delivery location description  \nVX_DEPARTMENT.DeliveryLocationDesc string 60 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "DeliveryLocationId": {
            "type": "string",
            "description": "Department.DeliveryLocationId\n\nDefault delivery lcoation  \nVX_DEPARTMENT.DeliveryLocationId string 6 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "Department.DepartmentId\n\nDepartment number  \nVX_DEPARTMENT.DepartmentId string 30 \n\nValue can be updated via: PUT  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Department.Description\n\nDepartment name  \nVX_DEPARTMENT.Description string 32 \n\nValue can be updated via: PUT  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Department.InternalId\n\nunit_dept_comp_main.unit_id  \nVX_DEPARTMENT.InternalId int  \n\nSearchable: False \nRequired for: PUT  ",
            "format": "int32",
            "nullable": true
          },
          "InventoryLocationDesc": {
            "type": "string",
            "description": "Department.InventoryLocationDesc\n\nDefault inventory location description  \nVX_DEPARTMENT.InventoryLocationDesc string 60 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "InventoryLocationId": {
            "type": "string",
            "description": "Department.InventoryLocationId\n\nDefault inventory location  \nVX_DEPARTMENT.InventoryLocationId string 6 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Department.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_DEPARTMENT.LastChangedDateTime DateTime  \n\nSearchable: False \nRequired for: PUT  ",
            "format": "date-time",
            "nullable": true
          },
          "MaintenanceClassDesc": {
            "type": "string",
            "description": "Department.MaintenanceClassDesc\n\nMaintenance class description  \nVX_DEPARTMENT.MaintenanceClassDesc string 60 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "MaintenanceClassId": {
            "type": "string",
            "description": "Department.MaintenanceClassId\n\nDepartment's MCC  \nVX_DEPARTMENT.MaintenanceClassId string 8 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "MaintenanceLocationDesc": {
            "type": "string",
            "description": "Department.MaintenanceLocationDesc\n\nDepartment's default maintenance location description  \nVX_DEPARTMENT.MaintenanceLocationDesc string 40 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "MaintenanceLocationId": {
            "type": "string",
            "description": "Department.MaintenanceLocationId\n\nDepartment's default maintenance location number  \nVX_DEPARTMENT.MaintenanceLocationId string 6 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "OrgLevel": {
            "type": "string",
            "description": "Department.OrgLevel\n\nOrganizational hierarchy level  \nVX_DEPARTMENT.OrgLevel string 20 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "OrgLevels": {
            "description": "Department.OrgLevels\n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIDepartmentOrgLevel"
          },
          "TechSpecDesc": {
            "type": "string",
            "description": "Department.TechSpecDesc\n\nDepartment's related spec  \nVX_DEPARTMENT.TechSpecDesc string 60 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "TechSpecId": {
            "type": "string",
            "description": "Department.TechSpecId\n\nDepartment's related tech spec number  \nVX_DEPARTMENT.TechSpecId string 13 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderComment": {
            "type": "string",
            "description": "Department.WorkOrderComment\n\nUnit Work Order Notes  \nVX_DEPARTMENT.WorkOrderComment string 4000 \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIDepartmentOrgLevel": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IDepartmentOrgLevel"
            }
          }
        }
      },
      "ODataQueryOptionsOfIDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartment"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIDepartment"
              }
            }
          }
        ]
      },
      "ETagOfIDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IDepartment"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIDepartment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IDepartment"
            }
          }
        }
      },
      "SaveResponseOfIDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IDepartment"
              }
            }
          }
        ]
      },
      "SaveBodyOfIDepartment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IDepartment"
          }
        }
      },
      "SaveResponseOfListOfIEmployeeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployeeAttribute"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIEmployeeAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEmployeeAttribute"
            }
          }
        }
      },
      "QueryResponseOfIEmployeeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployeeAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIEmployeeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIEmployeeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIEmployeeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IEmployeeAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIEmployeeAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IEmployeeAttribute"
          }
        }
      },
      "QueryResponseOfIEmployeeClockIn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployeeClockIn"
                }
              }
            }
          }
        ]
      },
      "IEmployeeClockIn": {
        "type": "object",
        "description": "EmployeeClockIn",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "EmployeeId": {
            "type": "string",
            "description": "EmployeeClockIn.EmployeeId\n\n.EmployeeId string 11 \n\nSearchable: True ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "EmployeeClockIn.EmployeeName\n\n.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "EmployeeClockIn.InternalId\n\n.InternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "TimeTypeDesc": {
            "type": "string",
            "description": "EmployeeClockIn.TimeTypeDesc\n\nTime Type Description  \n.TimeTypeDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeTypeId": {
            "type": "string",
            "description": "EmployeeClockIn.TimeTypeId\n\nTime Type  \n.TimeTypeId string 3 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIEmployeeClockIn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeClockIn"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeClockIn"
              }
            }
          }
        ]
      },
      "ETagOfIEmployeeClockIn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIEmployeeClockIn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IEmployeeClockIn"
              }
            }
          }
        ]
      },
      "SaveBodyOfIEmployeeClockIn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IEmployeeClockIn"
          }
        }
      },
      "SaveResponseOfListOfIEmployeeProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployeeProduct"
                }
              }
            }
          }
        ]
      },
      "IEmployeeProduct": {
        "type": "object",
        "description": "EmployeeProduct",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "EmployeeId",
          "ProductId"
        ],
        "properties": {
          "Description": {
            "type": "string",
            "description": "EmployeeProduct.Description\n\nProduct description  \nVX_EMPLOYEEPRODUCT.Description string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "EmployeeProduct.DescriptionLanguage1\n\nProduct description, primary language  \nVX_EMPLOYEEPRODUCT.DescriptionLanguage1 string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "EmployeeProduct.DescriptionLanguage2\n\nProduct description, second language  \nVX_EMPLOYEEPRODUCT.DescriptionLanguage2 string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "EmployeeProduct.DescriptionLanguage3\n\nProduct description, third language  \nVX_EMPLOYEEPRODUCT.DescriptionLanguage3 string 20 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "EmployeeProduct.EmployeeId\n\nEmployee number  \nVX_EMPLOYEEPRODUCT.EmployeeId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "EmployeeProduct.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_EMPLOYEEPRODUCT.LastChangedDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "description": "EmployeeProduct.ProductId\n\nProduct number  \nVX_EMPLOYEEPRODUCT.ProductId string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ProductTypeId": {
            "type": "string",
            "description": "EmployeeProduct.ProductTypeId\n\nProduct type  \nVX_EMPLOYEEPRODUCT.ProductTypeId string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIEmployeeProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEmployeeProduct"
            }
          }
        }
      },
      "QueryResponseOfIEmployeeProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployeeProduct"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIEmployeeProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeProduct"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployeeProduct"
              }
            }
          }
        ]
      },
      "ETagOfIEmployeeProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIEmployeeProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IEmployeeProduct"
              }
            }
          }
        ]
      },
      "SaveBodyOfIEmployeeProduct": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IEmployeeProduct"
          }
        }
      },
      "QueryResponseOfIWorkOrderTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderTask"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkOrderTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderTask"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderTask"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIWorkAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkAssignment"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkAssignment"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkAssignment"
              }
            }
          }
        ]
      },
      "ETagOfIWorkAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIEmployee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IEmployee"
              }
            }
          }
        ]
      },
      "QueryResponseOfIWorkOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrder"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrder"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrder"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfILocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILocation"
                }
              }
            }
          }
        ]
      },
      "ILocation": {
        "type": "object",
        "description": "Location",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Description",
          "LocationId"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Location.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_LOCATION.Active bool 1 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "description": "Location.Address\n\nMotor Pool Location Address  \nVX_LOCATION.Address string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Attributes": {
            "description": "Location.Attributes\n\nList of attributes for the location  \nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfILocationAttribute"
          },
          "City": {
            "type": "string",
            "description": "Location.City\n\nMotor Pool Location City  \nVX_LOCATION.City string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "description": "Location.Country\n\nCountry code  \nVX_LOCATION.Country string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "DefaultPartsLocationId": {
            "type": "string",
            "description": "Location.DefaultPartsLocationId\n\nIf inventory location, then itself; if maintenance location, then assigned inventory location; else null  \nVX_LOCATION.DefaultPartsLocationId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "Location.DepartmentId\n\nDepartment code  \nVX_LOCATION.DepartmentId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Location.Description\n\nDisplay name of the location.  \nVX_LOCATION.Description string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "InventoryCarryingCostPct": {
            "type": "number",
            "description": "Location.InventoryCarryingCostPct\n\nInventory location carrying cost percentage (0-100)  \nVX_LOCATION.InventoryCarryingCostPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "InventoryLocationId": {
            "type": "string",
            "description": "Location.InventoryLocationId\n\nAssociated inventory location  \nVX_LOCATION.InventoryLocationId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsDelivery": {
            "type": "boolean",
            "description": "Location.IsDelivery\n\nlocation is flagged as delivery location  \nVX_LOCATION.IsDelivery bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsFuel": {
            "type": "boolean",
            "description": "Location.IsFuel\n\nlocation is flagged to hold fuel  \nVX_LOCATION.IsFuel bool 1 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IsInventory": {
            "type": "boolean",
            "description": "Location.IsInventory\n\nlocation is flagged to hold inventory  \nVX_LOCATION.IsInventory bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsMaintenance": {
            "type": "boolean",
            "description": "Location.IsMaintenance\n\nlocation is flagged for maintenance  \nVX_LOCATION.IsMaintenance bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsParking": {
            "type": "boolean",
            "description": "Location.IsParking\n\nlocation is flagged for parking  \nVX_LOCATION.IsParking bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "IsPool": {
            "type": "boolean",
            "description": "Location.IsPool\n\nLocation is flagged for motor pool.  \nVX_LOCATION.IsPool bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Location.LastChangedDateTime\n\nLast Changed Date  \nVX_LOCATION.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Latitude": {
            "type": "number",
            "description": "Location.Latitude\n\nMotor Pool Location Latitude  \nVX_LOCATION.Latitude decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "Location.LocationId\n\nUnique code for the Location  \nVX_LOCATION.LocationId string 6 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Longitude": {
            "type": "number",
            "description": "Location.Longitude\n\nMotor Pool Location Longitude  \nVX_LOCATION.Longitude decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartsRepairLocationId": {
            "type": "string",
            "description": "Location.PartsRepairLocationId\n\nRebuild inventory location  \nVX_LOCATION.PartsRepairLocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Location.Phone\n\nPhone number  \nVX_LOCATION.Phone string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PurchaseOrderOverheadCost": {
            "type": "number",
            "description": "Location.PurchaseOrderOverheadCost\n\nPurchase order overhead cost; applies to inventory locations only  \nVX_LOCATION.PurchaseOrderOverheadCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RecoveryCenter": {
            "type": "string",
            "description": "Location.RecoveryCenter\n\nRecovery Center  \nVX_LOCATION.RecoveryCenter string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ShiftId": {
            "type": "string",
            "description": "Location.ShiftId\n\nShift code for maintenance downtime  \nVX_LOCATION.ShiftId int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "State": {
            "type": "string",
            "description": "Location.State\n\nState/province  \nVX_LOCATION.State string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "Location.TaxSchemeId\n\nTax scheme  \nVX_LOCATION.TaxSchemeId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TimeReportingGranularity": {
            "type": "string",
            "description": "Location.TimeReportingGranularity\n\nHUNDREDTHS, MINUTES; applies to maintenance locations only  \nVX_LOCATION.TimeReportingGranularity string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TimeRoundingUnit": {
            "type": "integer",
            "description": "Location.TimeRoundingUnit\n\nDivision of an hour for rounding time: 60 = minute, 100 = hundredths, 12 = six minutes; applies to maintenance locations only  \nVX_LOCATION.TimeRoundingUnit int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TimeZoneId": {
            "type": "string",
            "description": "Location.TimeZoneId\n\nTime zone (EST, BST, IST, etc.)  \nVX_LOCATION.TimeZoneId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "WarrantyAccountId": {
            "type": "string",
            "description": "Location.WarrantyAccountId\n\nWarranty account  \nVX_LOCATION.WarrantyAccountId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "WarrantyUsage": {
            "type": "integer",
            "description": "Location.WarrantyUsage\n\nInventory location standard warranty term for usage; see WarrantyUsageUnitOfMeasure  \nVX_LOCATION.WarrantyUsage int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "WarrantyUsageUnitOfMeasure": {
            "type": "string",
            "description": "Location.WarrantyUsageUnitOfMeasure\n\nMILES, KILOMETERS, HOURS; applies to inventory locations only  \nVX_LOCATION.WarrantyUsageUnitOfMeasure string  \n\nSearchable: False ",
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "description": "Location.ZipCode\n\nMotor Pool Location Zip Code  \nVX_LOCATION.ZipCode string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfILocationAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ILocationAttribute"
            }
          }
        }
      },
      "ILocationAttribute": {
        "type": "object",
        "description": "LocationAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AttributeId",
          "LocationId"
        ],
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "LocationAttribute.AttributeId\n\nItem description  \nVX_LOCATIONATTRIBUTE.AttributeId string 24 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "LocationAttribute.DataType\n\nType of data value  \nVX_LOCATIONATTRIBUTE.DataType string 7 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "LocationAttribute.DefaultValue\n\nDefault value  \nVX_LOCATIONATTRIBUTE.DefaultValue string 50 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "LocationAttribute.DisplayOrder\n\nAlphabetical order  \nVX_LOCATIONATTRIBUTE.DisplayOrder int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "LocationAttribute.InternalId\n\nM5 Forced to: 0 \nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "LocationAttribute.LabelText\n\nItem description  \nVX_LOCATIONATTRIBUTE.LabelText string 24 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "LocationAttribute.LastChangedDateTime\n\nWhen the item value last changed  \nVX_LOCATIONATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "LocationAttribute.LocationId\n\nUnique code for the Location  \nVX_LOCATIONATTRIBUTE.LocationId string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "LocationAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_LOCATIONATTRIBUTE.ValidateAgainstList bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "LocationAttribute.ValidList\n\nList of valid values  \nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "LocationAttribute.Value\n\nItem value  \nVX_LOCATIONATTRIBUTE.Value string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "LocationAttribute.ValueRequired\n\nIs a value required?  \nVX_LOCATIONATTRIBUTE.ValueRequired bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfILocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocation"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocation"
              }
            }
          }
        ]
      },
      "ETagOfILocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceRequest"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequest"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequest"
              }
            }
          }
        ]
      },
      "ETagOfIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveBodyOfIEmployee": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IEmployee"
          }
        }
      },
      "QueryResponseOfIEmployee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IEmployee"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIEmployee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployee"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIEmployee"
              }
            }
          }
        ]
      },
      "ETagOfIEmployee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIFailureCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFailureCode"
                }
              }
            }
          }
        ]
      },
      "IFailureCode": {
        "type": "object",
        "description": "FailureCode",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "FailureCode.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_FAILURECODE.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "FailureCode.Description\n\nFailure code description  \nVX_FAILURECODE.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "FailureCode.DescriptionLanguage1\n\nFailure code description, primary language  \nVX_FAILURECODE.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "FailureCode.DescriptionLanguage2\n\nFailure code description, second language  \nVX_FAILURECODE.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "FailureCode.DescriptionLanguage3\n\nFailure code description, third language  \nVX_FAILURECODE.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "FailureCode.FailureId\n\nFailure code  \nVX_FAILURECODE.FailureId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "FailureCode.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_FAILURECODE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIFailureCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFailureCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFailureCode"
              }
            }
          }
        ]
      },
      "ETagOfIFailureCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIFailureCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IFailureCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfIFailureCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IFailureCode"
          }
        }
      },
      "QueryResponseOfIFault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFault"
                }
              }
            }
          }
        ]
      },
      "IFault": {
        "type": "object",
        "description": "Fault",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "Element",
          "ElementType",
          "FaultId",
          "FMI",
          "Protocol",
          "ReadingDateTime",
          "Subsystem"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Fault.Active\n\nFault Status  \nVX_FAULT.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AlertDateTime": {
            "type": "string",
            "description": "Fault.AlertDateTime\n\ntm_alerts.alert_dt  \nVX_FAULT.AlertDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "Fault.AssetDesc\n\nAsset/unit description  \nVX_FAULT.AssetDesc string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "Fault.AssetId\n\nAsset/unit number  \nVX_FAULT.AssetId string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "AssetMaintenanceLocationId": {
            "type": "string",
            "description": "Fault.AssetMaintenanceLocationId\n\nAsset's Maintenance Location  \nVX_FAULT.AssetMaintenanceLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "CauseComment": {
            "type": "string",
            "description": "Fault.CauseComment\n\nCause notes  \nVX_FAULT.CauseComment string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CauseNoteId": {
            "type": "integer",
            "description": "Fault.CauseNoteId\n\nInsight cause note id  \nVX_FAULT.CauseNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CloudId": {
            "type": "string",
            "description": "Fault.CloudId\n\nVX_FAULT.CloudId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ComplaintComment": {
            "type": "string",
            "description": "Fault.ComplaintComment\n\nComplaint notes  \nVX_FAULT.ComplaintComment string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ComplaintNoteId": {
            "type": "integer",
            "description": "Fault.ComplaintNoteId\n\nInsight Complaint Note Id  \nVX_FAULT.ComplaintNoteId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ComponentCode": {
            "type": "string",
            "description": "Fault.ComponentCode\n\nInsight Component Code  \nVX_FAULT.ComponentCode string 3 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CorrectiveTaskDesc": {
            "type": "string",
            "description": "Fault.CorrectiveTaskDesc\n\nJob description that resolved the fault  \nVX_FAULT.CorrectiveTaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveTaskId": {
            "type": "string",
            "description": "Fault.CorrectiveTaskId\n\nJob that resolved the fault  \nVX_FAULT.CorrectiveTaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveWorkOrderId": {
            "type": "string",
            "description": "Fault.CorrectiveWorkOrderId\n\nWork Order that resolved the fault.  \nVX_FAULT.CorrectiveWorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveWorkOrderTitle": {
            "type": "string",
            "description": "Fault.CorrectiveWorkOrderTitle\n\nCorrective Work order description  \nVX_FAULT.CorrectiveWorkOrderTitle string  \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Fault.Description\n\nElement description  \nVX_FAULT.Description string 250 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Element": {
            "type": "string",
            "description": "Fault.Element\n\nElement (part of subsystem)  \nVX_FAULT.Element string 20 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ElementType": {
            "type": "string",
            "description": "Fault.ElementType\n\nElement type  \nVX_FAULT.ElementType string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "FaultId": {
            "type": "string",
            "description": "Fault.FaultId\n\nInternal ID of the fault  \nVX_FAULT.FaultId int  \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "FirstDateTime": {
            "type": "string",
            "description": "Fault.FirstDateTime\n\nDate the fault first came in  \nVX_FAULT.FirstDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FMI": {
            "type": "string",
            "description": "Fault.FMI\n\nFMI  \nVX_FAULT.FMI string 5 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "FMIDesc": {
            "type": "string",
            "description": "Fault.FMIDesc\n\nVX_FAULT.FMIDesc string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "InsightId": {
            "type": "string",
            "description": "Fault.InsightId\n\nInsight ID  \nVX_FAULT.InsightId string  \n\nSearchable: True ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Fault.InternalId\n\ntm_alerts.tm_alert_id  \nVX_FAULT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Fault.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_FAULT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastDateTime": {
            "type": "string",
            "description": "Fault.LastDateTime\n\nDate the fault last came in, which could be the first if it only happened once.  \nVX_FAULT.LastDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Latitude": {
            "type": "string",
            "description": "Fault.Latitude\n\nVX_FAULT.Latitude string  \n\nSearchable: False ",
            "nullable": true
          },
          "Longitude": {
            "type": "string",
            "description": "Fault.Longitude\n\nVX_FAULT.Longitude string  \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "integer",
            "description": "Fault.Meter1Reading\n\nVX_FAULT.Meter1Reading int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "NoAction": {
            "type": "boolean",
            "description": "Fault.NoAction\n\ntm_alerts.no_action  \nVX_FAULT.NoAction bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Occurrences": {
            "type": "integer",
            "description": "Fault.Occurrences\n\nNumber of times the fault or insight occurred.  \nVX_FAULT.Occurrences int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PreferredTaskDesc": {
            "type": "string",
            "description": "Fault.PreferredTaskDesc\n\nTask Description  \nVX_FAULT.PreferredTaskDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "PreferredTaskId": {
            "type": "string",
            "description": "Fault.PreferredTaskId\n\ntm_alerts.wac + tm_alerts.u_system + tm_alerts.component  \nVX_FAULT.PreferredTaskId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Priority": {
            "type": "integer",
            "description": "Fault.Priority\n\nPriority  \nVX_FAULT.Priority int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Protocol": {
            "type": "string",
            "description": "Fault.Protocol\n\nProtocol (ODBII, J1587, etc.)  \nVX_FAULT.Protocol string 20 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ReadingDateTime": {
            "type": "string",
            "description": "Fault.ReadingDateTime\n\ntm_messages.effective_date  \nVX_FAULT.ReadingDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "string",
            "description": "Fault.ServiceRequestId\n\nWork request correcting the fault  \nVX_FAULT.ServiceRequestId int  \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestOccurrence": {
            "type": "string",
            "description": "Fault.ServiceRequestOccurrence\n\nVX_FAULT.ServiceRequestOccurrence long  \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestTaskDesc": {
            "type": "string",
            "description": "Fault.ServiceRequestTaskDesc\n\nWork request task description correcting the fault  \nVX_FAULT.ServiceRequestTaskDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestTaskId": {
            "type": "string",
            "description": "Fault.ServiceRequestTaskId\n\nWork request job correcting the fault  \nVX_FAULT.ServiceRequestTaskId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Source": {
            "type": "string",
            "description": "Fault.Source\n\nVX_FAULT.Source string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "Fault.Status\n\nStatus (Unread, Read, Cleared)  \nVX_FAULT.Status string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Subsystem": {
            "type": "string",
            "description": "Fault.Subsystem\n\nSubsystem  \nVX_FAULT.Subsystem string 20 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "SystemCode": {
            "type": "string",
            "description": "Fault.SystemCode\n\nInsight System Code  \nVX_FAULT.SystemCode string 3 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "Fault.TaskDesc\n\nDefault correcting job code description for a work request or job  \nVX_FAULT.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "Fault.TaskId\n\nDefault correcting job code for a work request or job  \nVX_FAULT.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkAccomplishedCode": {
            "type": "string",
            "description": "Fault.WorkAccomplishedCode\n\nInsight work accomplished code  \nVX_FAULT.WorkAccomplishedCode string 2 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "Fault.WorkOrderId\n\nWork Order Number   \nVX_FAULT.WorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "Fault.WorkOrderTitle\n\nWork order description  \nVX_FAULT.WorkOrderTitle string  \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIFault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFault"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFault"
              }
            }
          }
        ]
      },
      "ETagOfIFault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIFault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IFault"
              }
            }
          }
        ]
      },
      "SaveBodyOfIFault": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IFault"
          }
        }
      },
      "SaveResponseOfListOfIFault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFault"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIFault": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IFault"
            }
          }
        }
      },
      "QueryResponseOfIFluidHose": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFluidHose"
                }
              }
            }
          }
        ]
      },
      "IFluidHose": {
        "type": "object",
        "description": "FluidHose",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "FluidDescription": {
            "type": "string",
            "description": "FluidHose.FluidDescription\n\nProduct description  \nVX_FLUIDHOSE.FluidDescription string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "FluidId": {
            "type": "string",
            "description": "FluidHose.FluidId\n\nProduct number  \nVX_FLUIDHOSE.FluidId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "FluidTypeId": {
            "type": "string",
            "description": "FluidHose.FluidTypeId\n\nProduct type  \nVX_FLUIDHOSE.FluidTypeId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "HoseId": {
            "type": "string",
            "description": "FluidHose.HoseId\n\nHose number converted to string  \nVX_FLUIDHOSE.HoseId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "FluidHose.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_FLUIDHOSE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "FluidHose.LocationId\n\nTank location  \nVX_FLUIDHOSE.LocationId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "MaxTankQty": {
            "type": "number",
            "description": "FluidHose.MaxTankQty\n\nTank (in the ground) capacity  \nVX_ASSETFLUID.MaxTankQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OnHandTankQty": {
            "type": "number",
            "description": "FluidHose.OnHandTankQty\n\nQuantity in the tank connected to the hose; 99999 if an expense tank  \nVX_FLUIDHOSE.OnHandTankQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TankId": {
            "type": "string",
            "description": "FluidHose.TankId\n\nTank number connected to the hose  \nVX_FLUIDHOSE.TankId string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitTankPrice": {
            "type": "number",
            "description": "FluidHose.UnitTankPrice\n\nPrice per unit of measure of the tank  \nVX_FLUIDHOSE.UnitTankPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIFluidHose": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFluidHose"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFluidHose"
              }
            }
          }
        ]
      },
      "ETagOfIFluidHose": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIFluidHose": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IFluidHose"
              }
            }
          }
        ]
      },
      "SaveBodyOfIFluidHose": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IFluidHose"
          }
        }
      },
      "SaveResponseOfListOfIFuelCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFuelCard"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIFuelCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IFuelCard"
            }
          }
        }
      },
      "QueryResponseOfIFuelCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IFuelCard"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIFuelCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFuelCard"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIFuelCard"
              }
            }
          }
        ]
      },
      "ETagOfIFuelCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIFuelCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IFuelCard"
              }
            }
          }
        ]
      },
      "SaveBodyOfIFuelCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IFuelCard"
          }
        }
      },
      "QueryResponseOfIIndirectCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IIndirectCode"
                }
              }
            }
          }
        ]
      },
      "IIndirectCode": {
        "type": "object",
        "description": "IndirectCode",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "IndirectCode.Active\n\nFlag denoting if the indirect account is active.  \nVX_INDIRECTCODE.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AllowFutureDatedTransactions": {
            "type": "boolean",
            "description": "IndirectCode.AllowFutureDatedTransactions\n\nWhether future dated transactions are allowed on this indirect account.  \nVX_INDIRECTCODE.AllowFutureDatedTransactions bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CanChargeLabor": {
            "type": "boolean",
            "description": "IndirectCode.CanChargeLabor\n\nWhether labor can be charged to this indirect account.  \nVX_INDIRECTCODE.CanChargeLabor bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "IndirectCode.Description\n\nIndirect Account Description  \nVX_INDIRECTCODE.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "IndirectCode.IndirectId\n\nUnique Indirect Account  \nVX_INDIRECTCODE.IndirectId string 5 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "IndirectCode.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_INDIRECTCODE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "IndirectCode.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIIndirectCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIIndirectCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIIndirectCode"
              }
            }
          }
        ]
      },
      "ETagOfIIndirectCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIIndirectCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IIndirectCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfIIndirectCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IIndirectCode"
          }
        }
      },
      "SaveResponseOfListOfIIndirectPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IIndirectPartIssue"
                }
              }
            }
          }
        ]
      },
      "IIndirectPartIssue": {
        "type": "object",
        "description": "IndirectPartIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "EmployeeId",
          "InvoiceNumber",
          "IssueLocationId",
          "PartOrFluid",
          "VendorId"
        ],
        "properties": {
          "BinId": {
            "type": "string",
            "description": "IndirectPartIssue.BinId\n\nUsed for the hose for M5 fluids  \nVX_INDIRECTPARTISSUE.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "IndirectPartIssue.Comments\n\nIssue notes  \nVX_INDIRECTPARTISSUE.Comments string 4000 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "IndirectPartIssue.Cost\n\nTotal value of issue, including tax  \nVX_INDIRECTPARTISSUE.Cost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "IndirectPartIssue.Description\n\nPart number description  \nVX_INDIRECTPARTISSUE.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "IndirectPartIssue.EmployeeId\n\nThe employee who issued the part  \nVX_INDIRECTPARTISSUE.EmployeeId string 11 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "IndirectPartIssue.EmployeeName\n\nThe employee name who issued the part.  \nVX_INDIRECTPARTISSUE.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "IndirectPartIssue.FailureDesc\n\nFailure code description  \nVX_INDIRECTPARTISSUE.FailureDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "IndirectPartIssue.FailureId\n\nFailure code for part  \nVX_INDIRECTPARTISSUE.FailureId string 6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "IndirectPartIssue.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_INDIRECTPARTISSUE.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "IndirectPartIssue.IndirectId\n\nIndirect code  \nVX_INDIRECTPARTISSUE.IndirectId string 5 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "IndirectPartIssue.InternalId\n\nACC_PART_CHG.acc_part_id  \nVX_INDIRECTPARTISSUE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "IndirectPartIssue.InvoiceDate\n\nInvoice date  \nVX_INDIRECTPARTISSUE.InvoiceDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "IndirectPartIssue.InvoiceNumber\n\nInvoice number for the part issue  \nVX_INDIRECTPARTISSUE.InvoiceNumber string 15 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "IndirectPartIssue.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_INDIRECTPARTISSUE.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "IndirectPartIssue.IsReturnable\n\nIsn't a non-stock part, etc.  \nVX_INDIRECTPARTISSUE.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "IndirectPartIssue.IssueDateTime\n\nIssue Date Time of part  \nVX_INDIRECTPARTISSUE.IssueDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueLocationDesc": {
            "type": "string",
            "description": "IndirectPartIssue.IssueLocationDesc\n\nIssue location description of the part  \nVX_INDIRECTPARTISSUE.IssueLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "IssueLocationId": {
            "type": "string",
            "description": "IndirectPartIssue.IssueLocationId\n\nIssue location of the part  \nVX_INDIRECTPARTISSUE.IssueLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "IndirectPartIssue.IssueQty\n\nQuantity of part issued  \nVX_INDIRECTPARTISSUE.IssueQty decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IssueTicketNumber": {
            "type": "string",
            "description": "IndirectPartIssue.IssueTicketNumber\n\nIssue ticket number  \nVX_INDIRECTPARTISSUE.IssueTicketNumber string  \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "IndirectPartIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_INDIRECTPARTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "IndirectPartIssue.ManufacturerId\n\nPart manufacturer  \nVX_INDIRECTPARTISSUE.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "NewSerialNumbers": {
            "description": "IndirectPartIssue.NewSerialNumbers\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "PartId": {
            "type": "string",
            "description": "IndirectPartIssue.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_INDIRECTPARTISSUE.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "IndirectPartIssue.PartInternalId\n\nPart master's row_id  \nVX_INDIRECTPARTISSUE.PartInternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "IndirectPartIssue.PartOrFluid\n\nPART or FLUID  \nVX_INDIRECTPARTISSUE.PartOrFluid string  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "PoItem": {
            "type": "string",
            "description": "IndirectPartIssue.PoItem\n\nPO Item  \nVX_INDIRECTPARTISSUE.PoItem string 5 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "IndirectPartIssue.PoLineItem\n\nPO Line number  \nVX_INDIRECTPARTISSUE.PoLineItem int  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "IndirectPartIssue.PoNumber\n\nPurchase Order number for the part issue  \nVX_INDIRECTPARTISSUE.PoNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "IndirectPartIssue.ProNumber\n\nPRO Number for part  \nVX_INDIRECTPARTISSUE.ProNumber string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "IndirectPartIssue.ReferenceNumber\n\nReference number for part issue  \nVX_INDIRECTPARTISSUE.ReferenceNumber string 19 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "IndirectPartIssue.Serialized\n\nDid the issued part have a serial number?  \nVX_INDIRECTPARTISSUE.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "IndirectPartIssue.SerialNumber\n\nPart's serial number  \nVX_INDIRECTPARTISSUE.SerialNumber string 32 \n\nSearchable: False ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "IndirectPartIssue.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_INDIRECTPARTISSUE.UniqueId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "IndirectPartIssue.UnitCost\n\nVX_INDIRECTPARTISSUE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "IndirectPartIssue.UnitOfIssue\n\nUnit of issue for part  \nVX_INDIRECTPARTISSUE.UnitOfIssue string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "IndirectPartIssue.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_INDIRECTPARTISSUE.VendorContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "IndirectPartIssue.VendorId\n\nVendor number the part was received and issued from  \nVX_INDIRECTPARTISSUE.VendorId string 12 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "VendorName": {
            "type": "string",
            "description": "IndirectPartIssue.VendorName\n\nVendor name  \nVX_INDIRECTPARTISSUE.VendorName string 20 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIIndirectPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IIndirectPartIssue"
            }
          }
        }
      },
      "QueryResponseOfIIndirectPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IIndirectPartIssue"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIIndirectPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIIndirectPartIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIIndirectPartIssue"
              }
            }
          }
        ]
      },
      "ETagOfIIndirectPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIIndirectPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IIndirectPartIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIIndirectPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IIndirectPartIssue"
          }
        }
      },
      "QueryResponseOfIInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInventoryCountItem"
                }
              }
            }
          }
        ]
      },
      "IInventoryCountItem": {
        "type": "object",
        "description": "InventoryCountItem",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "BinId",
          "LocationId",
          "PartId"
        ],
        "properties": {
          "AllBinsCountedQty": {
            "type": "integer",
            "description": "InventoryCountItem.AllBinsCountedQty\n\nTotal count for all bins, calculated by serivce  \nVX_INVENTORYCOUNTITEM.AllBinsCountedQty int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "AllBinsInitialQty": {
            "type": "integer",
            "description": "InventoryCountItem.AllBinsInitialQty\n\nQuantity at the beginning of the count  \nVX_INVENTORYCOUNTITEM.AllBinsInitialQty int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "BinDesc": {
            "type": "string",
            "description": "InventoryCountItem.BinDesc\n\nBin description  \nVX_INVENTORYCOUNTITEM.BinDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "InventoryCountItem.BinId\n\nBin (area)  \nVX_INVENTORYCOUNTITEM.BinId string 11 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "CanCount": {
            "type": "boolean",
            "description": "InventoryCountItem.CanCount\n\nCan the user count this part?  \nVX_INVENTORYCOUNTITEM.CanCount bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CountedByUserId": {
            "type": "string",
            "description": "InventoryCountItem.CountedByUserId\n\nWho counted the part?  \nVX_INVENTORYCOUNTITEM.CountedByUserId string 256 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CountedQty": {
            "type": "integer",
            "description": "InventoryCountItem.CountedQty\n\nWhat the user counted  \nVX_INVENTORYCOUNTITEM.CountedQty int  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "InventoryCountItem.CreatedDateTime\n\nWhen the count was first created  \nVX_INVENTORYCOUNTITEM.CreatedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ImageUrl": {
            "type": "string",
            "description": "InventoryCountItem.ImageUrl\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "InventoryCountItem.InternalId\n\nVX_INVENTORYCOUNTITEM.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InventoryCountId": {
            "type": "string",
            "description": "InventoryCountItem.InventoryCountId\n\nCount ID that the user sees, pi_id converted to string  \nVX_INVENTORYCOUNTITEM.InventoryCountId string 10 \n\nValue can be updated via: PUT  \nSearchable: True ",
            "nullable": true
          },
          "IsCounted": {
            "type": "boolean",
            "description": "InventoryCountItem.IsCounted\n\nHas the item been counted?  Excludes those to be recounted  \nVX_INVENTORYCOUNTITEM.IsCounted bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsRecount": {
            "type": "boolean",
            "description": "InventoryCountItem.IsRecount\n\nIs this a recount?  \nVX_INVENTORYCOUNTITEM.IsRecount bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "InventoryCountItem.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_INVENTORYCOUNTITEM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastCountedDate": {
            "type": "string",
            "description": "InventoryCountItem.LastCountedDate\n\nWhen the count was last counted (outside the current physical inventory count)  \nVX_INVENTORYCOUNTITEM.LastCountedDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LineNumber": {
            "type": "integer",
            "description": "InventoryCountItem.LineNumber\n\n(Page number * page size) + line on page  \nVX_INVENTORYCOUNTITEM.LineNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "InventoryCountItem.LocationId\n\nUnique code for the Location  \nVX_INVENTORYCOUNTITEM.LocationId string 6 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "M5LineNo": {
            "type": "integer",
            "description": "InventoryCountItem.M5LineNo\n\nM5's line number, needed to update the quantity  \nVX_INVENTORYCOUNTITEM.M5LineNo int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "M5PageNo": {
            "type": "integer",
            "description": "InventoryCountItem.M5PageNo\n\nM5's page number, needed to do the updates  \nVX_INVENTORYCOUNTITEM.M5PageNo int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "InventoryCountItem.ManufacturerId\n\nPart manufacturer  \nVX_INVENTORYCOUNTITEM.ManufacturerId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ModifiedDateTime": {
            "type": "string",
            "description": "InventoryCountItem.ModifiedDateTime\n\nThe last time a part line was touched  \nVX_INVENTORYCOUNTITEM.ModifiedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MultipleBins": {
            "type": "boolean",
            "description": "InventoryCountItem.MultipleBins\n\nAre there multiple bins for the part at the location (whether in the count or not)  \nVX_INVENTORYCOUNTITEM.MultipleBins bool  \n\nSearchable: False ",
            "nullable": true
          },
          "MustCount": {
            "type": "boolean",
            "description": "InventoryCountItem.MustCount\n\nDoes the part need to be counted before the count can be completed?  \nVX_INVENTORYCOUNTITEM.MustCount bool  \n\nSearchable: False ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "InventoryCountItem.PartDesc\n\nDescription of the part  \nVX_INVENTORYCOUNTITEM.PartDesc string 60 \n\nSearchable: True ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "InventoryCountItem.PartDescLanguage1\n\nPart description, primary language  \nVX_INVENTORYCOUNTITEM.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "InventoryCountItem.PartDescLanguage2\n\nPart description, second language  \nVX_INVENTORYCOUNTITEM.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "InventoryCountItem.PartDescLanguage3\n\nPart description, third language  \nVX_INVENTORYCOUNTITEM.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "InventoryCountItem.PartId\n\nPart number  \nVX_INVENTORYCOUNTITEM.PartId string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "InventoryCountItem.PartInternalId\n\npart_pi_cnt.part_id  \nVX_INVENTORYCOUNTITEM.PartInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "InventoryCountItem.Status\n\nInventory count status from source system  \nVX_INVENTORYCOUNTITEM.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitOfMeasureId": {
            "type": "string",
            "description": "InventoryCountItem.UnitOfMeasureId\n\nUOM  \nVX_INVENTORYCOUNTITEM.UnitOfMeasureId string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "VarianceQty": {
            "type": "integer",
            "description": "InventoryCountItem.VarianceQty\n\nVariance, calculated by the service  \nVX_INVENTORYCOUNTITEM.VarianceQty int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInventoryCountItem"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInventoryCountItem"
              }
            }
          }
        ]
      },
      "ETagOfIInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IInventoryCountItem"
              }
            }
          }
        ]
      },
      "SaveBodyOfIInventoryCountItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IInventoryCountItem"
          }
        }
      },
      "SaveResponseOfIInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IInventoryCount"
              }
            }
          }
        ]
      },
      "IInventoryCount": {
        "type": "object",
        "description": "InventoryCount",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "CountSortByMethod",
          "CriteriaMethod",
          "Description",
          "LocationId"
        ],
        "properties": {
          "AssignedEmployeeId": {
            "type": "string",
            "description": "InventoryCount.AssignedEmployeeId\n\nEmployee responsible for the count  \nVX_INVENTORYCOUNT.AssignedEmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "CanComplete": {
            "type": "boolean",
            "description": "InventoryCount.CanComplete\n\nCan the user complete the count and adjust the quantities?  \nVX_INVENTORYCOUNT.CanComplete bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CompletedDateTime": {
            "type": "string",
            "description": "InventoryCount.CompletedDateTime\n\nWhen the count was finished  \nVX_INVENTORYCOUNT.CompletedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Consign": {
            "type": "boolean",
            "description": "InventoryCount.Consign\n\nAdd Consignment parts to the selection  \nVX_INVENTORYCOUNT.Consign bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CountedPartLines": {
            "type": "integer",
            "description": "InventoryCount.CountedPartLines\n\nVX_INVENTORYCOUNT.CountedPartLines int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CountSortByMethod": {
            "type": "string",
            "description": "InventoryCount.CountSortByMethod\n\nMethod for sorting: BIN or PART NUMBER  \nVX_INVENTORYCOUNT.CountSortByMethod string 11 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "InventoryCount.CreatedDateTime\n\nWhen the count was first created  \nVX_INVENTORYCOUNT.CreatedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Criteria": {
            "description": "InventoryCount.Criteria\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIInventoryCountCriteria"
          },
          "CriteriaMethod": {
            "type": "string",
            "description": "InventoryCount.CriteriaMethod\n\nMethod for selecting criteria: ALL, RANGE, or SPECIFIC  \nVX_INVENTORYCOUNT.CriteriaMethod string 5 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "InventoryCount.Description\n\nDescription of the count  \nVX_INVENTORYCOUNT.Description string 40 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "InventoryCount.IndirectId\n\nIndirect account for adjustments  \nVX_INVENTORYCOUNT.IndirectId string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "InventoryCount.InternalId\n\npi_id  \nVX_INVENTORYCOUNT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InventoryCountId": {
            "type": "string",
            "description": "InventoryCount.InventoryCountId\n\nCount ID that the user sees, pi_id converted to string  \nVX_INVENTORYCOUNT.InventoryCountId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "Items": {
            "description": "InventoryCount.Items\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIInventoryCountItem"
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "InventoryCount.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_INVENTORYCOUNT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "InventoryCount.LocationId\n\nUnique code for the Location  \nVX_INVENTORYCOUNT.LocationId string 6 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "LocationName": {
            "type": "string",
            "description": "InventoryCount.LocationName\n\nLocation's name  \nVX_INVENTORYCOUNT.LocationName string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ModifiedDateTime": {
            "type": "string",
            "description": "InventoryCount.ModifiedDateTime\n\nThe last time a part line was touched  \nVX_INVENTORYCOUNT.ModifiedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Reselect": {
            "type": "boolean",
            "description": "InventoryCount.Reselect\n\nReselect parts that have already been counted within cycle  \nVX_INVENTORYCOUNT.Reselect bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "InventoryCount.Status\n\nInventory count status -- PENDING (Selected), OPEN,(In Progress), COMPLETED (  \nVX_INVENTORYCOUNT.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalPartLines": {
            "type": "integer",
            "description": "InventoryCount.TotalPartLines\n\nNumber of part lines in the count  \nVX_INVENTORYCOUNT.TotalPartLines int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIInventoryCountCriteria": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IInventoryCountCriteria"
            }
          }
        }
      },
      "IInventoryCountCriteria": {
        "type": "object",
        "description": "InventoryCountCriteria",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "CriteriaData": {
            "type": "string",
            "description": "InventoryCountCriteria.CriteriaData\n\nSelect Data  \nVX_INVENTORYCOUNTCRITERIA.CriteriaData string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "InternalCountId": {
            "type": "integer",
            "description": "InventoryCountCriteria.InternalCountId\n\nInternal Count Id  \nVX_INVENTORYCOUNTCRITERIA.InternalCountId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InventoryCountId": {
            "type": "string",
            "description": "InventoryCountCriteria.InventoryCountId\n\nCount ID that the user sees, pi_id converted to string  \nVX_INVENTORYCOUNTCRITERIA.InventoryCountId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "InventoryCountCriteria.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_INVENTORYCOUNTCRITERIA.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "InventoryCountCriteria.ManufacturerId\n\nManufacturer for Part Criteria  \nVX_INVENTORYCOUNTCRITERIA.ManufacturerId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIInventoryCountItem": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IInventoryCountItem"
            }
          }
        }
      },
      "SaveBodyOfIInventoryCount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IInventoryCount"
          }
        }
      },
      "QueryResponseOfIInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInventoryCount"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInventoryCount"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInventoryCount"
              }
            }
          }
        ]
      },
      "ETagOfIInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIInvoiceReconciliationLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInvoiceReconciliationLine"
                }
              }
            }
          }
        ]
      },
      "IInvoiceReconciliationLine": {
        "type": "object",
        "description": "InvoiceReconciliationLine",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "InternalId",
          "InvoiceId",
          "VendorId"
        ],
        "properties": {
          "Assigned": {
            "type": "boolean",
            "description": "InvoiceReconciliationLine.Assigned\n\nIs the purchase order assigned?  \nVX_INVOICERECONCILIATIONLINE.Assigned bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "InvoiceReconciliationLine.InternalId\n\nPurchse orders internal Id  \nVX_INVOICERECONCILIATIONLINE.InternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.InvoiceId\n\nInvoice Number for invoice reconciliation  \nVX_INVOICERECONCILIATIONLINE.InvoiceId string  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "InvoiceStatus": {
            "type": "string",
            "description": "InvoiceReconciliationLine.InvoiceStatus\n\nInvoice Status  \nVX_INVOICERECONCILIATIONLINE.InvoiceStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "InvoiceType": {
            "type": "string",
            "description": "InvoiceReconciliationLine.InvoiceType\n\nInvoice Type  \nVX_INVOICERECONCILIATIONLINE.InvoiceType string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LineInvoiceNumber": {
            "type": "string",
            "description": "InvoiceReconciliationLine.LineInvoiceNumber\n\nInvoice number related to the line  \nVX_INVOICERECONCILIATIONLINE.LineInvoiceNumber string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Miscellaneous1": {
            "type": "string",
            "description": "InvoiceReconciliationLine.Miscellaneous1\n\nMiscellaneous Field1  \nVX_INVOICERECONCILIATIONLINE.Miscellaneous1 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Miscellaneous2": {
            "type": "string",
            "description": "InvoiceReconciliationLine.Miscellaneous2\n\nMiscellaneous Field2  \nVX_INVOICERECONCILIATIONLINE.Miscellaneous2 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Miscellaneous3": {
            "type": "string",
            "description": "InvoiceReconciliationLine.Miscellaneous3\n\nMiscellaneous Field3  \nVX_INVOICERECONCILIATIONLINE.Miscellaneous3 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "InvoiceReconciliationLine.PartDesc\n\nPart description  \nVX_INVOICERECONCILIATIONLINE.PartDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.PartId\n\nPart Number  \nVX_INVOICERECONCILIATIONLINE.PartId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.PoId\n\nPurchase Order Number  \nVX_INVOICERECONCILIATIONLINE.PoId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ProductDescription": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ProductDescription\n\nProduct description  \nVX_INVOICERECONCILIATIONLINE.ProductDescription string  \n\nSearchable: False ",
            "nullable": true
          },
          "ProductId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ProductId\n\nProduct number  \nVX_INVOICERECONCILIATIONLINE.ProductId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceiptQty": {
            "type": "number",
            "description": "InvoiceReconciliationLine.ReceiptQty\n\nReceipt quantity  \nVX_INVOICERECONCILIATIONLINE.ReceiptQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReceivedDateTime": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ReceivedDateTime\n\nWhen the order was received  \nVX_INVOICERECONCILIATIONLINE.ReceivedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ReconciledDateTime": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ReconciledDateTime\n\nInvoice Reconciliation Date  \nVX_INVOICERECONCILIATIONLINE.ReconciledDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ServiceCode": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ServiceCode\n\nService code  \nVX_INVOICERECONCILIATIONLINE.ServiceCode string  \n\nSearchable: False ",
            "nullable": true
          },
          "ServiceDescription": {
            "type": "string",
            "description": "InvoiceReconciliationLine.ServiceDescription\n\nService description  \nVX_INVOICERECONCILIATIONLINE.ServiceDescription string  \n\nSearchable: False ",
            "nullable": true
          },
          "TankId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.TankId\n\nVX_INVOICERECONCILIATIONLINE.TankId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "InvoiceReconciliationLine.TotalCost\n\nTotal cost  \nVX_INVOICERECONCILIATIONLINE.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TransactionJnlId": {
            "type": "integer",
            "description": "InvoiceReconciliationLine.TransactionJnlId\n\nVX_INVOICERECONCILIATIONLINE.TransactionJnlId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "InvoiceReconciliationLine.UnitCost\n\nUnit cost  \nVX_INVOICERECONCILIATIONLINE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "InvoiceReconciliationLine.VendorId\n\nVendor on the invoice  \nVX_INVOICERECONCILIATIONLINE.VendorId string  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "InvoiceReconciliationLine.VendorInternalId\n\nVendor internal ID  \nVX_INVOICERECONCILIATIONLINE.VendorInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIInvoiceReconciliationLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IInvoiceReconciliationLine"
            }
          }
        }
      },
      "QueryResponseOfIInvoiceReconciliationLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInvoiceReconciliationLine"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIInvoiceReconciliationLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInvoiceReconciliationLine"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInvoiceReconciliationLine"
              }
            }
          }
        ]
      },
      "ETagOfIInvoiceReconciliationLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIInvoiceReconciliationLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IInvoiceReconciliationLine"
              }
            }
          }
        ]
      },
      "SaveBodyOfIInvoiceReconciliationLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IInvoiceReconciliationLine"
          }
        }
      },
      "SaveResponseOfListOfIInvoiceReconciliation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInvoiceReconciliation"
                }
              }
            }
          }
        ]
      },
      "IInvoiceReconciliation": {
        "type": "object",
        "description": "InvoiceReconciliation",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "InternalId",
          "InvoiceId",
          "VendorId"
        ],
        "properties": {
          "Attachments": {
            "description": "InvoiceReconciliation.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "BatchNumber": {
            "type": "string",
            "description": "InvoiceReconciliation.BatchNumber\n\nVX_INVOICERECONCILIATION.BatchNumber string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "InvoiceReconciliation.InternalId\n\nInvoice Id  \nVX_INVOICERECONCILIATION.InternalId long  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceAmount": {
            "type": "number",
            "description": "InvoiceReconciliation.InvoiceAmount\n\nInvoice Amount  \nVX_INVOICERECONCILIATION.InvoiceAmount decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "InvoiceDateTime": {
            "type": "string",
            "description": "InvoiceReconciliation.InvoiceDateTime\n\nInvoice Date  \nVX_INVOICERECONCILIATION.InvoiceDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceId": {
            "type": "string",
            "description": "InvoiceReconciliation.InvoiceId\n\nInvoice Number  \nVX_INVOICERECONCILIATION.InvoiceId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "InvoiceLines": {
            "description": "InvoiceReconciliation.InvoiceLines\n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIInvoiceReconciliationLine"
          },
          "InvoiceType": {
            "type": "string",
            "description": "InvoiceReconciliation.InvoiceType\n\nInvoice Type  \nVX_INVOICERECONCILIATION.InvoiceType string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MiscellaneousCost1": {
            "type": "number",
            "description": "InvoiceReconciliation.MiscellaneousCost1\n\nMiscellaneous Cost1  \nVX_INVOICERECONCILIATION.MiscellaneousCost1 decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost2": {
            "type": "number",
            "description": "InvoiceReconciliation.MiscellaneousCost2\n\nMiscellaneous Cost2  \nVX_INVOICERECONCILIATION.MiscellaneousCost2 decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost3": {
            "type": "number",
            "description": "InvoiceReconciliation.MiscellaneousCost3\n\nMiscellaneous Cost3  \nVX_INVOICERECONCILIATION.MiscellaneousCost3 decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost4": {
            "type": "number",
            "description": "InvoiceReconciliation.MiscellaneousCost4\n\nMiscellaneous Cost4  \nVX_INVOICERECONCILIATION.MiscellaneousCost4 decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost5": {
            "type": "number",
            "description": "InvoiceReconciliation.MiscellaneousCost5\n\nMiscellaneous Cost5  \nVX_INVOICERECONCILIATION.MiscellaneousCost5 decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousType1": {
            "type": "string",
            "description": "InvoiceReconciliation.MiscellaneousType1\n\nMiscellaneous Type1  \nVX_INVOICERECONCILIATION.MiscellaneousType1 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MiscellaneousType2": {
            "type": "string",
            "description": "InvoiceReconciliation.MiscellaneousType2\n\nMiscellaneous Type2  \nVX_INVOICERECONCILIATION.MiscellaneousType2 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MiscellaneousType3": {
            "type": "string",
            "description": "InvoiceReconciliation.MiscellaneousType3\n\nMiscellaneous Type3  \nVX_INVOICERECONCILIATION.MiscellaneousType3 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MiscellaneousType4": {
            "type": "string",
            "description": "InvoiceReconciliation.MiscellaneousType4\n\nMiscellaneous Type4  \nVX_INVOICERECONCILIATION.MiscellaneousType4 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "MiscellaneousType5": {
            "type": "string",
            "description": "InvoiceReconciliation.MiscellaneousType5\n\nMiscellaneous Type5  \nVX_INVOICERECONCILIATION.MiscellaneousType5 string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ReconciledDateTime": {
            "type": "string",
            "description": "InvoiceReconciliation.ReconciledDateTime\n\nInvoice Reconciliation Date  \nVX_INVOICERECONCILIATION.ReconciledDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "InvoiceReconciliation.Status\n\nInvoice Status  \nVX_INVOICERECONCILIATION.Status string  \n\nSearchable: False ",
            "nullable": true
          },
          "VarianceAmount": {
            "type": "number",
            "description": "InvoiceReconciliation.VarianceAmount\n\nInvoice Amount  \nVX_INVOICERECONCILIATION.VarianceAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "InvoiceReconciliation.VendorDesc\n\nVendor description  \nVX_INVOICERECONCILIATION.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "InvoiceReconciliation.VendorId\n\nVendor on the invoice  \nVX_INVOICERECONCILIATION.VendorId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "InvoiceReconciliation.VendorInternalId\n\nVendor internal ID  \nVX_INVOICERECONCILIATION.VendorInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIInvoiceReconciliationLine": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IInvoiceReconciliationLine"
            }
          }
        }
      },
      "SaveBodyOfListOfIInvoiceReconciliation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IInvoiceReconciliation"
            }
          }
        }
      },
      "SaveResponseOfIInvoiceReconciliation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IInvoiceReconciliation"
              }
            }
          }
        ]
      },
      "SaveBodyOfIInvoiceReconciliation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IInvoiceReconciliation"
          }
        }
      },
      "QueryResponseOfIInvoiceReconciliation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IInvoiceReconciliation"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIInvoiceReconciliation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInvoiceReconciliation"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIInvoiceReconciliation"
              }
            }
          }
        ]
      },
      "ETagOfIInvoiceReconciliation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfILifeCycleStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILifeCycleStatus"
                }
              }
            }
          }
        ]
      },
      "ILifeCycleStatus": {
        "type": "object",
        "description": "LifeCycleStatus",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "LifeCycleStatus.Description\n\nUnit status description  \nVX_LIFECYCLESTATUS.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "IsInService": {
            "type": "boolean",
            "description": "LifeCycleStatus.IsInService\n\nIs the unit in-service?  \nVX_LIFECYCLESTATUS.IsInService bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "LifeCycleStatus.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKORDER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LifeCycleStatusCategory": {
            "type": "string",
            "description": "LifeCycleStatus.LifeCycleStatusCategory\n\nStatus category: BUDGETED, INACTIVE, ACTIVE, DISPOSAL, SOLD  \nVX_LIFECYCLESTATUS.LifeCycleStatusCategory string  \n\nSearchable: False ",
            "nullable": true
          },
          "LifeCycleStatusId": {
            "type": "string",
            "description": "LifeCycleStatus.LifeCycleStatusId\n\nUnit status code  \nVX_LIFECYCLESTATUS.LifeCycleStatusId string 1 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfILifeCycleStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILifeCycleStatus"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILifeCycleStatus"
              }
            }
          }
        ]
      },
      "ETagOfILifeCycleStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfILifeCycleStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ILifeCycleStatus"
              }
            }
          }
        ]
      },
      "SaveBodyOfILifeCycleStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ILifeCycleStatus"
          }
        }
      },
      "SaveResponseOfListOfILocationAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILocationAttribute"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfILocationAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ILocationAttribute"
            }
          }
        }
      },
      "QueryResponseOfILocationAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILocationAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfILocationAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocationAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocationAttribute"
              }
            }
          }
        ]
      },
      "ETagOfILocationAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfILocationAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ILocationAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfILocationAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ILocationAttribute"
          }
        }
      },
      "QueryResponseOfILocationPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILocationPart"
                }
              }
            }
          }
        ]
      },
      "ILocationPart": {
        "type": "object",
        "description": "LocationPart",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Description",
          "LocationId",
          "PartId",
          "PartSeq"
        ],
        "properties": {
          "ABCClassId": {
            "type": "string",
            "description": "LocationPart.ABCClassId\n\nABC class code  \nVX_LOCATIONPART.ABCClassId string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Active": {
            "type": "boolean",
            "description": "LocationPart.Active\n\nIs the part master active?  \nVX_LOCATIONPART.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AddedToLocationDateTime": {
            "type": "string",
            "description": "LocationPart.AddedToLocationDateTime\n\nWhen part_inv_loc record was created.  \nVX_LOCATIONPART.AddedToLocationDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AtLocation": {
            "type": "boolean",
            "description": "LocationPart.AtLocation\n\nIs the part at the location, and not just defined in the part master?  \nVX_LOCATIONPART.AtLocation bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AvailableInTransitQty": {
            "type": "number",
            "description": "LocationPart.AvailableInTransitQty\n\nQuantity on its way here for stock  \nVX_LOCATIONPART.AvailableInTransitQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AvailableOnOrderQty": {
            "type": "number",
            "description": "LocationPart.AvailableOnOrderQty\n\nOn order for stock  \nVX_LOCATIONPART.AvailableOnOrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AvailableQty": {
            "type": "number",
            "description": "LocationPart.AvailableQty\n\nQuantity available  \nVX_LOCATIONPART.AvailableQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AverageCost": {
            "type": "number",
            "description": "LocationPart.AverageCost\n\nAverage cost, either location avg or system avg depending on modflag 1058  \nVX_LOCATIONPART.AverageCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AverageUsePerDay": {
            "type": "number",
            "description": "LocationPart.AverageUsePerDay\n\nAverage use per day according to reorder point calculator  \nVX_LOCATIONPART.AverageUsePerDay decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Bins": {
            "description": "LocationPart.Bins\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartBin"
          },
          "ChargeCodeDesc": {
            "type": "string",
            "description": "LocationPart.ChargeCodeDesc\n\nCharge code description  \nVX_LOCATIONPART.ChargeCodeDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "ChargeCodeId": {
            "type": "string",
            "description": "LocationPart.ChargeCodeId\n\nCharge code  \nVX_LOCATIONPART.ChargeCodeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Consigned": {
            "type": "boolean",
            "description": "LocationPart.Consigned\n\nIs this stock part consigned?  \nVX_LOCATIONPART.Consigned bool  \n\nSearchable: False ",
            "nullable": true
          },
          "CoreCharge": {
            "type": "number",
            "description": "LocationPart.CoreCharge\n\nCore value  \nVX_LOCATIONPART.CoreCharge decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CostCategoryDesc": {
            "type": "string",
            "description": "LocationPart.CostCategoryDesc\n\nCost category description  \nVX_LOCATIONPART.CostCategoryDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "CostCategoryId": {
            "type": "string",
            "description": "LocationPart.CostCategoryId\n\nCost category  \nVX_LOCATIONPART.CostCategoryId string  \n\nSearchable: False ",
            "nullable": true
          },
          "DefaultVendorDesc": {
            "type": "string",
            "description": "LocationPart.DefaultVendorDesc\n\nDefault vendor name  \nVX_LOCATIONPART.DefaultVendorDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DefaultVendorId": {
            "type": "string",
            "description": "LocationPart.DefaultVendorId\n\nPreferred vendor  \nVX_LOCATIONPART.DefaultVendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "LocationPart.Description\n\nPart description  \nVX_LOCATIONPART.Description string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "LocationPart.DisplayOrder\n\n1 = reserved (committed to the work order/task), 2 = fluids (not FA), 3 = availabile, 4 = other, 5 = not at location (not FA)  \nVX_LOCATIONPART.DisplayOrder int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "EOQOrderQty": {
            "type": "number",
            "description": "LocationPart.EOQOrderQty\n\nOrder qty according to calculator  \nVX_LOCATIONPART.EOQOrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EOQReorderPoint": {
            "type": "number",
            "description": "LocationPart.EOQReorderPoint\n\nReorder point according to calculator  \nVX_LOCATIONPART.EOQReorderPoint decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EOQSafetyStock": {
            "type": "number",
            "description": "LocationPart.EOQSafetyStock\n\nSafety stock from calculator  \nVX_LOCATIONPART.EOQSafetyStock decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "HasCore": {
            "type": "boolean",
            "description": "LocationPart.HasCore\n\nDoes it use core tracking?  \nVX_LOCATIONPART.HasCore bool  \n\nSearchable: False ",
            "nullable": true
          },
          "InTransitQty": {
            "type": "number",
            "description": "LocationPart.InTransitQty\n\nQuantity on its way here  \nVX_LOCATIONPART.InTransitQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IssueToAccountAllowed": {
            "type": "boolean",
            "description": "LocationPart.IssueToAccountAllowed\n\nCan the part be issued to an account, whether direct or indirect?  \nVX_LOCATIONPART.IssueToAccountAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueToDeptAllowed": {
            "type": "boolean",
            "description": "LocationPart.IssueToDeptAllowed\n\nCan the part be issued to a department without a work order?  \nVX_LOCATIONPART.IssueToDeptAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "LocationPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_LOCATIONPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastCountDateTime": {
            "type": "string",
            "description": "LocationPart.LastCountDateTime\n\nWhen part_inv_loc record was last counted.  \nVX_LOCATIONPART.LastCountDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationComments": {
            "type": "string",
            "description": "LocationPart.LocationComments\n\nLocation notes  \nVX_LOCATIONPART.LocationComments string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationDesc": {
            "type": "string",
            "description": "LocationPart.LocationDesc\n\nLocation name  \nVX_LOCATIONPART.LocationDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "LocationPart.LocationId\n\nPart inventory location  \nVX_LOCATIONPART.LocationId string 6 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "LocationPart.ManufacturerId\n\nPart Manufacturer  \nVX_LOCATIONPART.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "type": "string",
            "description": "LocationPart.ManufacturerPartNumber\n\nMaster xref number  \nVX_LOCATIONPART.ManufacturerPartNumber string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "MarkupSchemeId": {
            "type": "string",
            "description": "LocationPart.MarkupSchemeId\n\nPart-specific markup scheme  \nVX_LOCATIONPART.MarkupSchemeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "MasterComments": {
            "type": "string",
            "description": "LocationPart.MasterComments\n\nPart master notes  \nVX_LOCATIONPART.MasterComments string  \n\nSearchable: False ",
            "nullable": true
          },
          "MaximumInventoryQty": {
            "type": "number",
            "description": "LocationPart.MaximumInventoryQty\n\nManual maximum quantity on hand  \nVX_LOCATIONPART.MaximumInventoryQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MinimumInventoryQty": {
            "type": "number",
            "description": "LocationPart.MinimumInventoryQty\n\nManual minimim inventory quantity  \nVX_LOCATIONPART.MinimumInventoryQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "NewRebuiltUsed": {
            "type": "string",
            "description": "LocationPart.NewRebuiltUsed\n\nNewRebuiltUsed  \nVX_LOCATIONPART.NewRebuiltUsed string  \n\nSearchable: False ",
            "nullable": true
          },
          "OnHandQty": {
            "type": "number",
            "description": "LocationPart.OnHandQty\n\nQuantity on hand  \nVX_LOCATIONPART.OnHandQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OnOrderQty": {
            "type": "number",
            "description": "LocationPart.OnOrderQty\n\nOn order quantity  \nVX_LOCATIONPART.OnOrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "LocationPart.PartId\n\nPart number (the one the user sees)  \nVX_LOCATIONPART.PartId string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "PartOrFluid": {
            "type": "string",
            "description": "LocationPart.PartOrFluid\n\nIs this a part or a fluid?  \nVX_LOCATIONPART.PartOrFluid string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "LocationPart.PartSeq\n\nInternal part id sequence  \nVX_LOCATIONPART.PartSeq int 10 \n\nSearchable: False \nRequired for: POST  ",
            "format": "int32",
            "nullable": true
          },
          "PercentIssued": {
            "type": "number",
            "description": "LocationPart.PercentIssued\n\nPlaceholder for percent of the time issued to the task/spec  \nVX_LOCATIONPART.PercentIssued decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PrimaryBinId": {
            "type": "string",
            "description": "LocationPart.PrimaryBinId\n\nPrimary bin  \nVX_LOCATIONPART.PrimaryBinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ProductCategoryDesc": {
            "type": "string",
            "description": "LocationPart.ProductCategoryDesc\n\nCommodity description  \nVX_LOCATIONPART.ProductCategoryDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductCategoryId": {
            "type": "string",
            "description": "LocationPart.ProductCategoryId\n\nCommodity code  \nVX_LOCATIONPART.ProductCategoryId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "description": "LocationPart.Qty\n\nPlaceholder for parts searches to be filled with required qty from tech spec standard parts for example.  \nVX_LOCATIONPART.Qty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RAV": {
            "type": "number",
            "description": "LocationPart.RAV\n\nTotal value - (on hand qty * unit cost)  \nVX_LOCATIONPART.RAV decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReorderAllowed": {
            "type": "boolean",
            "description": "LocationPart.ReorderAllowed\n\nCan the part be ordered?  \nVX_LOCATIONPART.ReorderAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ReorderMethod": {
            "type": "string",
            "description": "LocationPart.ReorderMethod\n\nAUTOMATIC or MANUAL.  If part is not at the location, this is null.  \nVX_LOCATIONPART.ReorderMethod string  \n\nSearchable: False ",
            "nullable": true
          },
          "ReservedInTransitQty": {
            "type": "number",
            "description": "LocationPart.ReservedInTransitQty\n\nQuantity in transit for stock  \nVX_LOCATIONPART.ReservedInTransitQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReservedOnOrderQty": {
            "type": "number",
            "description": "LocationPart.ReservedOnOrderQty\n\nReserved on order  \nVX_LOCATIONPART.ReservedOnOrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReservedQty": {
            "type": "number",
            "description": "LocationPart.ReservedQty\n\nReserved quantity  \nVX_LOCATIONPART.ReservedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "LocationPart.Serialized\n\nIs the part master serialized?  \nVX_LOCATIONPART.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "StandardCost": {
            "type": "number",
            "description": "LocationPart.StandardCost\n\nStandard cost, either location standard or system standard depending on modflag 1058  \nVX_LOCATIONPART.StandardCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "StandardOrderQty": {
            "type": "number",
            "description": "LocationPart.StandardOrderQty\n\nStandard order quantity  \nVX_LOCATIONPART.StandardOrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Stocked": {
            "type": "boolean",
            "description": "LocationPart.Stocked\n\nStocked at this location?  \nVX_LOCATIONPART.Stocked bool  \n\nSearchable: False ",
            "nullable": true
          },
          "StockStatus": {
            "type": "string",
            "description": "LocationPart.StockStatus\n\n\"STOCK\", \"NON-STOCK\", or \"NOT DEFINED AT LOCATION\"  \nVX_LOCATIONpART.StockStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "LocationPart.TaskSystemId\n\nVMRS system code, called 'TaskSystemId' to match other tables.  \nVX_LOCATIONPART.TaskSystemId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TotalInTransitValue": {
            "type": "number",
            "description": "LocationPart.TotalInTransitValue\n\nTotal value of in-transit parts  \nVX_LOCATIONPART.TotalInTransitValue decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalOnOrderValue": {
            "type": "number",
            "description": "LocationPart.TotalOnOrderValue\n\nOn order value  \nVX_LOCATIONPART.TotalOnOrderValue decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalValue": {
            "type": "number",
            "description": "LocationPart.TotalValue\n\nTotal value on hand, including RAV  \nVX_LOCATIONPART.TotalValue decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "LocationPart.UnitCost\n\nUnit cost of the part at the location  \nVX_LOCATIONPART.UnitCost decimal 12 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfMeasureId": {
            "type": "string",
            "description": "LocationPart.UnitOfMeasureId\n\nUnit of measure  \nVX_LOCATIONPART.UnitOfMeasureId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "VMRSCode": {
            "type": "string",
            "description": "LocationPart.VMRSCode\n\nVMRS code, aka ATA code: system-assembly-part. A passed-in value is saved only if the part does not exist.  \nVX_LOCATIONPART.VMRSCode string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPartBin": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartBin"
            }
          }
        }
      },
      "IPartBin": {
        "type": "object",
        "description": "PartBin",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "PartBin.Active\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "PartBin.BinId\n\nBin  \nVX_PARTBIN.BinId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "PartBin.Description\n\nBin description  \nVX_PARTBIN.Description string  \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "PartBin.DescriptionLanguage1\n\nBin description, primary language  \nVX_PARTBIN.DescriptionLanguage1 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "PartBin.DescriptionLanguage2\n\nBin description, second language  \nVX_PARTBIN.DescriptionLanguage2 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "PartBin.DescriptionLanguage3\n\nBin description, third language  \nVX_PARTBIN.DescriptionLanguage3 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "IsPrimaryBin": {
            "type": "boolean",
            "description": "PartBin.IsPrimaryBin\n\nWhether this is primary bin or not.  \nVX_PARTBIN.IsPrimaryBin bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartBin.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTBIN.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PartBin.LocationId\n\nBin Location  \nVX_PARTBIN.LocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PartBin.ManufacturerId\n\nPart manufacturer  \nVX_PARTBIN.ManufacturerId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartBin.PartId\n\nPart Number  \nVX_PARTBIN.PartId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartBin.PartSeq\n\nVX_PARTBIN.PartSeq int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfILocationPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocationPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfILocationPart"
              }
            }
          }
        ]
      },
      "ETagOfILocationPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIPurchaseOrderLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrderLine"
                }
              }
            }
          }
        ]
      },
      "IPurchaseOrderLine": {
        "type": "object",
        "description": "PurchaseOrderLine",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "ManufacturerId",
          "PartId",
          "PoId",
          "PoLineNumber"
        ],
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "PurchaseOrderLine.AccountId\n\nAlways null, but the first property must always have a table  \nVX_PURCHASEORDERLINE.AccountId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Attributes": {
            "description": "PurchaseOrderLine.Attributes\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseOrderLineAttribute"
          },
          "Comments": {
            "type": "string",
            "description": "PurchaseOrderLine.Comments\n\nLine notes  \nVX_PURCHASEORDERLINE.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "ContractId": {
            "type": "string",
            "description": "PurchaseOrderLine.ContractId\n\nContract number for purchase order.  \nVX_PURCHASEORDERLINE.ContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "description": "PurchaseOrderLine.Destination\n\nSTOCK, DEPARTMENT, INDIRECT ACCOUNT, ASSET, WORK ORDER, DIRECT ACCOUNT  \nVX_PURCHASEORDERLINE.Destination string  \n\nSearchable: False ",
            "nullable": true
          },
          "DiscountPct": {
            "type": "number",
            "description": "PurchaseOrderLine.DiscountPct\n\nM5 Forced to: 0 \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseOrderLine.InternalId\n\npart_orders.part_orders_id  \nVX_PURCHASEORDERLINE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "PurchaseOrderLine.InvoiceNumber\n\nInvoice number related to the line, set as a side-effect of a receipt  \nVX_PURCHASEORDERLINE.InvoiceNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseOrderLine.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PURCHASEORDERLINE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastReceivedDateTime": {
            "type": "string",
            "description": "PurchaseOrderLine.LastReceivedDateTime\n\nLast time the part was received  \nVX_PURCHASEORDERLINE.LastReceivedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LeadDays": {
            "type": "integer",
            "description": "PurchaseOrderLine.LeadDays\n\nVendor lead time in days  \nVX_PURCHASEORDERLINE.LeadDays int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LineItemType": {
            "type": "string",
            "description": "PurchaseOrderLine.LineItemType\n\nSTOCK PART, NON-STOCK PART  \nVX_PURCHASEORDERLINE.LineItemType string  \n\nSearchable: False ",
            "nullable": true
          },
          "LineStatus": {
            "type": "string",
            "description": "PurchaseOrderLine.LineStatus\n\nOPEN, CLOSED  \nVX_PURCHASEORDERLINE.LineStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseOrderLine.LocationId\n\nReceiving location  \nVX_PURCHASEORDERLINE.LocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PurchaseOrderLine.ManufacturerId\n\nPart Manufacturer  \nVX_PURCHASEORDERLINE.ManufacturerId string 20 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "type": "string",
            "description": "PurchaseOrderLine.ManufacturerPartNumber\n\nManufacturer's cross-reference  \nVX_PURCHASEORDERLINE.ManufacturerPartNumber string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "NeedByDateTime": {
            "type": "string",
            "description": "PurchaseOrderLine.NeedByDateTime\n\nWhen we want to receive the order  \nVX_PURCHASEORDERLINE.NeedByDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Notes": {
            "description": "PurchaseOrderLine.Notes\n\nPurchase order line notes are comments  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "OrderDateTime": {
            "type": "string",
            "description": "PurchaseOrderLine.OrderDateTime\n\nWhen the order was opened  \nVX_PURCHASEORDERLINE.OrderDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderQty": {
            "type": "number",
            "description": "PurchaseOrderLine.OrderQty\n\nOrder quantity  \nVX_PURCHASEORDERLINE.OrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PurchaseOrderLine.PartDesc\n\nPart description  \nVX_PURCHASEORDERLINE.PartDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PurchaseOrderLine.PartDescLanguage1\n\nPart description, primary language  \nVX_PURCHASEORDERLINE.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PurchaseOrderLine.PartDescLanguage2\n\nPart description, second language  \nVX_PURCHASEORDERLINE.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PurchaseOrderLine.PartDescLanguage3\n\nPart description, third language  \nVX_PURCHASEORDERLINE.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PurchaseOrderLine.PartId\n\nPart number (the one the user sees)  \nVX_PURCHASEORDERLINE.PartId string 30 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PurchaseOrderLine.PartSeq\n\nInternal part id sequence  \nVX_PURCHASEORDERLINE.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoDestinations": {
            "description": "PurchaseOrderLine.PoDestinations\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseOrderDestination"
          },
          "PoId": {
            "type": "string",
            "description": "PurchaseOrderLine.PoId\n\nM5 part order ID  \nVX_PURCHASEORDERLINE.PoId string  \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "PoInternalId": {
            "type": "integer",
            "description": "PurchaseOrderLine.PoInternalId\n\npart_orders.po_id  \nVX_PURCHASEORDERLINE.PoInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PoLineNumber": {
            "type": "integer",
            "description": "PurchaseOrderLine.PoLineNumber\n\nPart order line  \nVX_PURCHASEORDERLINE.PoLineNumber int  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int32",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PurchaseOrderLine.ReceivedQty\n\nReceived quantity.  Negative if return.  \nVX_PURCHASEORDERLINE.ReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "PurchaseOrderLine.ReferenceNumber\n\nPurchase order line reference number  \nVX_PURCHASEORDERLINE.ReferenceNumber string 12 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "RequisitionId": {
            "type": "integer",
            "description": "PurchaseOrderLine.RequisitionId\n\nUnderlying requisition number  \nVX_PURCHASEORDERLINE.RequisitionId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "RequisitionLineNumber": {
            "type": "integer",
            "description": "PurchaseOrderLine.RequisitionLineNumber\n\nUnderlying requisition line number  \nVX_PURCHASEORDERLINE.RequisitionLineNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "SentDateTime": {
            "type": "string",
            "description": "PurchaseOrderLine.SentDateTime\n\nPurchase order sent date  \nVX_PURCHASEORDERLINE.SentDateTime DateTime 12 \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "PurchaseOrderLine.Serialized\n\nIs the part serialized?  \nVX_PURCHASEORDERLINE.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "TaxPct": {
            "type": "number",
            "description": "PurchaseOrderLine.TaxPct\n\nCumulative tax percent related to the order line  \nVX_PURCHASEORDERLINE.TaxPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "PurchaseOrderLine.TaxSchemeId\n\nLine's tax scheme  \nVX_PURCHASEORDERLINE.TaxSchemeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ToBeReceivedQty": {
            "type": "number",
            "description": "PurchaseOrderLine.ToBeReceivedQty\n\nQuantity yet to be received  \nVX_PURCHASEORDERLINE.ToBeReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfOrder": {
            "type": "string",
            "description": "PurchaseOrderLine.UnitOfOrder\n\nUnit of order  \nVX_PURCHASEORDERLINE.UnitOfOrder string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "PurchaseOrderLine.UnitPrice\n\nUnit price  \nVX_PURCHASEORDERLINE.UnitPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorPartNumber": {
            "type": "string",
            "description": "PurchaseOrderLine.VendorPartNumber\n\nVendor's cross-reference for the part  \nVX_PURCHASEORDERLINE.VendorPartNumber string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPurchaseOrderLineAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderLineAttribute"
            }
          }
        }
      },
      "IPurchaseOrderLineAttribute": {
        "type": "object",
        "description": "PurchaseOrderLineAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "InternalId": {
            "type": "integer",
            "description": "PurchaseOrderLineAttribute.InternalId\n\nM5 Forced to: 0 \nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPurchaseOrderDestination": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderDestination"
            }
          }
        }
      },
      "ODataQueryOptionsOfIPurchaseOrderLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderLine"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderLine"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseOrderLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfILocationPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ILocationPart"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfILocationPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ILocationPart"
            }
          }
        }
      },
      "SaveResponseOfILocationPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ILocationPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfILocationPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ILocationPart"
          }
        }
      },
      "SaveResponseOfILocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ILocation"
              }
            }
          }
        ]
      },
      "SaveBodyOfILocation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ILocation"
          }
        }
      },
      "QueryResponseOfINote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/INote"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfINote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfINote"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfINote"
              }
            }
          }
        ]
      },
      "ETagOfINote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfINote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/INote"
              }
            }
          }
        ]
      },
      "SaveBodyOfINote": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/INote"
          }
        }
      },
      "QueryResponseOfIOperationalClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperationalClass"
                }
              }
            }
          }
        ]
      },
      "IOperationalClass": {
        "type": "object",
        "description": "OperationalClass",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "OperationalClass.Active\n\nActive?  \nVX_OPERATIONALCLASS.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "OperationalClass.Description\n\nOperational class description  \nVX_OPERATIONALCLASS.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "OperationalClass.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_OPERATIONALCLASS.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OperationalClassId": {
            "type": "string",
            "description": "OperationalClass.OperationalClassId\n\nOperational class code  \nVX_OPERATIONALCLASS.OperationalClassId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIOperationalClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalClass"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalClass"
              }
            }
          }
        ]
      },
      "ETagOfIOperationalClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperationalClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperationalClass"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperationalClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperationalClass"
          }
        }
      },
      "QueryResponseOfIOperationalEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperationalEntity"
                }
              }
            }
          }
        ]
      },
      "IOperationalEntity": {
        "type": "object",
        "description": "OperationalEntity",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "OperationalEntity.Description\n\nDescription of the department or parking location  \nVX_OPERATIONALENTITY.Description string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "OperationalEntity.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_OPERATIONALENTITY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OperationalEntityId": {
            "type": "string",
            "description": "OperationalEntity.OperationalEntityId\n\nOperational entity; a department or parking location depending on flag 2032  \nVX_OPERATIONALENTITY.OperationalEntityId string 30 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIOperationalEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalEntity"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalEntity"
              }
            }
          }
        ]
      },
      "ETagOfIOperationalEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperationalEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperationalEntity"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperationalEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperationalEntity"
          }
        }
      },
      "QueryResponseOfIOperationalStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperationalStatus"
                }
              }
            }
          }
        ]
      },
      "IOperationalStatus": {
        "type": "object",
        "description": "OperationalStatus",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "OperationalStatus.Active\n\nActive?  \nVX_OPERATIONALSTATUS.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "OperationalStatus.Description\n\nOperational status description  \nVX_OPERATIONALSTATUS.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "DispositionCode": {
            "type": "integer",
            "description": "OperationalStatus.DispositionCode\n\nDisposition code (1 = available, etc.)  \nVX_OPERATIONALSTATUS.DispositionCode int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DispositionCodeDesc": {
            "type": "string",
            "description": "OperationalStatus.DispositionCodeDesc\n\nDisposition code description  \nVX_OPERATIONALSTATUS.DispositionCodeDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "IsAvailable": {
            "type": "boolean",
            "description": "OperationalStatus.IsAvailable\n\nIs it an available kind of status?  Determines whether it can be applied to an uncompleted work order  \nVX_OPERATIONALSTATUS.IsAvailable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "OperationalStatus.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_OPERATIONALSTATUS.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OperationalStatusId": {
            "type": "string",
            "description": "OperationalStatus.OperationalStatusId\n\nOperational status code  \nVX_OPERATIONALSTATUS.OperationalStatusId string 3 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIOperationalStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalStatus"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperationalStatus"
              }
            }
          }
        ]
      },
      "ETagOfIOperationalStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperationalStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperationalStatus"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperationalStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperationalStatus"
          }
        }
      },
      "QueryResponseOfIOperatorDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperatorDepartment"
                }
              }
            }
          }
        ]
      },
      "IOperatorDepartment": {
        "type": "object",
        "description": "OperatorDepartment",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIOperatorDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperatorDepartment"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperatorDepartment"
              }
            }
          }
        ]
      },
      "ETagOfIOperatorDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperatorDepartment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperatorDepartment"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperatorDepartment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperatorDepartment"
          }
        }
      },
      "SaveResponseOfListOfIOperatorCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperatorCreditCard"
                }
              }
            }
          }
        ]
      },
      "IOperatorCreditCard": {
        "type": "object",
        "description": "OperatorCreditCard",
        "x-abstract": true,
        "additionalProperties": false
      },
      "SaveBodyOfListOfIOperatorCreditCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IOperatorCreditCard"
            }
          }
        }
      },
      "QueryResponseOfIOperatorCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperatorCreditCard"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIOperatorCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperatorCreditCard"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperatorCreditCard"
              }
            }
          }
        ]
      },
      "ETagOfIOperatorCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperatorCreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperatorCreditCard"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperatorCreditCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperatorCreditCard"
          }
        }
      },
      "SaveResponseOfListOfIOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperator"
                }
              }
            }
          }
        ]
      },
      "IOperator": {
        "type": "object",
        "description": "Operator",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "CreditCards": {
            "description": "Operator.CreditCards\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIOperatorCreditCard"
          },
          "SupportedDepartments": {
            "description": "Operator.SupportedDepartments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIOperatorDepartment"
          }
        }
      },
      "ILookupItemOfIOperatorCreditCard": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IOperatorCreditCard"
            }
          }
        }
      },
      "ILookupItemOfIOperatorDepartment": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IOperatorDepartment"
            }
          }
        }
      },
      "SaveBodyOfListOfIOperator": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IOperator"
            }
          }
        }
      },
      "QueryResponseOfIOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IOperator"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperator"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIOperator"
              }
            }
          }
        ]
      },
      "ETagOfIOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIOperator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IOperator"
              }
            }
          }
        ]
      },
      "SaveBodyOfIOperator": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IOperator"
          }
        }
      },
      "QueryResponseOfIParkingSpot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IParkingSpot"
                }
              }
            }
          }
        ]
      },
      "IParkingSpot": {
        "type": "object",
        "description": "ParkingSpot",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "ParkingSpot.Active\n\nIs the parking spot active?  \nVX_PARKINGSPOT.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Concurrency": {
            "type": "string",
            "description": "ParkingSpot.Concurrency\n\nCan more than one asset be parked here?  ALLOWED, WARNING, ERROR  \nVX_PARKINGSPOT.Concurrency string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "ParkingSpot.Description\n\nParking spot''s description  \nVX_PARKINGSPOT.Description string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "ParkingSpot.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARKINGSPOT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "ParkingSpot.LocationId\n\nLocation ID  \nVX_PARKINGSPOT.Description string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "ParkingSpotId": {
            "type": "string",
            "description": "ParkingSpot.ParkingSpotId\n\nParking spot  \nVX_PARKINGSPOT.ParkingSpotId string 20 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIParkingSpot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIParkingSpot"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIParkingSpot"
              }
            }
          }
        ]
      },
      "ETagOfIParkingSpot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIParkingSpot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IParkingSpot"
              }
            }
          }
        ]
      },
      "SaveBodyOfIParkingSpot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IParkingSpot"
          }
        }
      },
      "SaveResponseOfIPartAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartAdjustment"
              }
            }
          }
        ]
      },
      "IPartAdjustment": {
        "type": "object",
        "description": "PartAdjustment",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AdjustmentLocationId",
          "AdjustmentMode",
          "EmployeeId",
          "InternalId",
          "ManufacturerId",
          "NewQtyOnHand",
          "PartId",
          "ReasonId"
        ],
        "properties": {
          "Action": {
            "type": "string",
            "description": "PartAdjustment.Action\n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "AdjustmentLocationId": {
            "type": "string",
            "description": "PartAdjustment.AdjustmentLocationId\n\nPart Inv Location  \nVX_PARTADJUSTMENT.AdjustmentLocationId string 6 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "AdjustmentMode": {
            "type": "string",
            "description": "PartAdjustment.AdjustmentMode\n\nUNIT PRICE ONLY, QUANTITY ONLY  \nVX_PARTADJUSTMENT.AdjustmentMode string 15 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "PartAdjustment.EmployeeId\n\nEmployee Requesting the Part Adjustment  \nVX_PARTADJUSTMENT.EmployeeId string 11 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "EmployeeInternalId": {
            "type": "integer",
            "description": "PartAdjustment.EmployeeInternalId\n\nUnique Employee ID system generated  \nVX_PARTADJUSTMENT.EmployeeInternalId long 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "PartAdjustment.EmployeeName\n\nEmployee Name Requesting the Part Adjustment  \nVX_PARTADJUSTMENT.EmployeeName string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PartAdjustment.InternalId\n\nUnique ID system generated  \nVX_PARTADJUSTMENT.InternalId long 10 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "int64",
            "nullable": true
          },
          "InventoryCountId": {
            "type": "integer",
            "description": "PartAdjustment.InventoryCountId\n\nPhysical inventory ID  \nVX_PARTADJUSTMENT.InventoryCountId long 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartAdjustment.LastChangedDateTime\n\nThe last changed date of part adjustment  \nVX_PARTADJUSTMENT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PartAdjustment.ManufacturerId\n\nPart manufacturer  \nVX_PARTADJUSTMENT.ManufacturerId string 20 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "NewQtyOnHand": {
            "type": "number",
            "description": "PartAdjustment.NewQtyOnHand\n\nAdjusted Quantity Total; present for physical inventory for M5 v23.0 and later, required if the AdjustmentMode is UNIT PRICE ONLY or QTY AT A DIFFERENT PRICE.  \nVX_PARTADJUSTMENT.NewQtyOnHand decimal  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "NewUnitCost": {
            "type": "number",
            "description": "PartAdjustment.NewUnitCost\n\nAdjusted Cost Total, required if the AdjustmentMode is UNIT PRICE ONLY or QTY AT A DIFFERENT PRICE.  \nVX_PARTADJUSTMENT.NewUnitCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "NewValue": {
            "type": "number",
            "description": "PartAdjustment.NewValue\n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "PartAdjustment.Notes\n\nNotes  \nVX_PARTADJUSTMENT.Notes string  \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PartAdjustment.PartDesc\n\nPart description  \nVX_PARTADJUSTMENT.PartDesc string 30 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartAdjustment.PartId\n\nPart number  \nVX_PARTADJUSTMENT.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "PartAdjustment.PartInternalId\n\nUnique Part ID system generated  \nVX_PARTADJUSTMENT.PartInternalId long 10 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "QtyAdjustment": {
            "type": "number",
            "description": "PartAdjustment.QtyAdjustment\n\nAmount Qty Adjusted by  \nVX_PARTADJUSTMENT.QtyAdjustment decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ReasonDesc": {
            "type": "string",
            "description": "PartAdjustment.ReasonDesc\n\nReason Description  \nVX_PARTADJUSTMENT.ReasonDesc string 4 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ReasonId": {
            "type": "string",
            "description": "PartAdjustment.ReasonId\n\nReason Code  \nVX_PARTADJUSTMENT.ReasonId string 4 \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "UnitCostAdjustment": {
            "type": "number",
            "description": "PartAdjustment.UnitCostAdjustment\n\nAmount Cost Adjusted By  \nVX_PARTADJUSTMENT.UnitCostAdjustment decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfMeasure": {
            "type": "string",
            "description": "PartAdjustment.UnitOfMeasure\n\nUnit of Measure  \nVX_PARTADJUSTMENT.UnitOfMeasure string 4 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ValueAdjustment": {
            "type": "number",
            "description": "PartAdjustment.ValueAdjustment\n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "SaveBodyOfIPartAdjustment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartAdjustment"
          }
        }
      },
      "SaveResponseOfListOfIPartAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartAdjustment"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIPartAdjustment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartAdjustment"
            }
          }
        }
      },
      "QueryResponseOfIPartAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartAdjustment"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPartAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartAdjustment"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartAdjustment"
              }
            }
          }
        ]
      },
      "ETagOfIPartAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIPartBin": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartBin"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPartBin": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartBin"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartBin"
              }
            }
          }
        ]
      },
      "ETagOfIPartBin": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartBin": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartBin"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartBin": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartBin"
          }
        }
      },
      "QueryResponseOfIPartCycle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartCycle"
                }
              }
            }
          }
        ]
      },
      "IPartCycle": {
        "type": "object",
        "description": "PartCycle",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "PartCycle.Description\n\nPart Cycle Description  \nVX_PARTCYCLE.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "PartCycle.DescriptionLanguage1\n\nPart Cycle Description, primary language  \nVX_PARTCYCLE.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "PartCycle.DescriptionLanguage2\n\nPart Cycle Description, second language  \nVX_PARTCYCLE.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "PartCycle.DescriptionLanguage3\n\nPart Cycle Description, third language  \nVX_PARTCYCLE.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartCycle.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTCYCLE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartCycleId": {
            "type": "string",
            "description": "PartCycle.PartCycleId\n\nPart Cycle Id  \nVX_PARTCYCLE.PartCycleId string 30 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartCycle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartCycle"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartCycle"
              }
            }
          }
        ]
      },
      "ETagOfIPartCycle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartCycle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartCycle"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartCycle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartCycle"
          }
        }
      },
      "QueryResponseOfIPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartIssue"
                }
              }
            }
          }
        ]
      },
      "IPartIssue": {
        "type": "object",
        "description": "PartIssue",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "PartIssue.AssetDesc\n\nAsset description issued to  \nVX_PARTISSUE.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PartIssue.AssetId\n\nAsset issued to  \nVX_PARTISSUE.AssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "PartIssue.BinId\n\nUsed for the hose for M5 fluids  \nVX_PARTISSUE.BinId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "PartIssue.Comments\n\npart_jnl.notes  \nVX_PARTISSUE.Comments string  \n\nSearchable: False ",
            "nullable": true
          },
          "CoreCost": {
            "type": "number",
            "description": "PartIssue.CoreCost\n\nCore cost  \nVX_PARTISSUE.CoreCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "PartIssue.Description\n\nPart number description  \nVX_PARTISSUE.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "PartIssue.DescriptionLanguage1\n\nPart description, primary language  \nVX_PARTISSUE.DescriptionLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "PartIssue.DescriptionLanguage2\n\nPart description, second language  \nVX_PARTISSUE.DescriptionLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "PartIssue.DescriptionLanguage3\n\nPart description, third language  \nVX_PARTISSUE.DescriptionLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DiscountPct": {
            "type": "number",
            "description": "PartIssue.DiscountPct\n\nPart discount percent  \nVX_PARTISSUE.DiscountPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "PartIssue.EmployeeId\n\nThe employee who issued the part  \nVX_PARTISSUE.EmployeeId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "PartIssue.EmployeeName\n\nThe employee name who issued the part.  \nVX_PARTISSUE.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDesc": {
            "type": "string",
            "description": "PartIssue.FailureDesc\n\nFailure code description  \nVX_PARTISSUE.FailureDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDescLanguage1": {
            "type": "string",
            "description": "PartIssue.FailureDescLanguage1\n\nFailure description, primary language  \nVX_PARTISSUE.FailureDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDescLanguage2": {
            "type": "string",
            "description": "PartIssue.FailureDescLanguage2\n\nFailure description, second language  \nVX_PARTISSUE.FailureDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureDescLanguage3": {
            "type": "string",
            "description": "PartIssue.FailureDescLanguage3\n\nFailure description, third language  \nVX_PARTISSUE.FailureDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "FailureId": {
            "type": "string",
            "description": "PartIssue.FailureId\n\nFailure code for part  \nVX_PARTISSUE.FailureId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "FromStock": {
            "type": "boolean",
            "description": "PartIssue.FromStock\n\nPart is stock, 1 = yes, 0 = no  \nVX_PARTISSUE.FromStock bool  \n\nSearchable: False ",
            "nullable": true
          },
          "HasCoreCharge": {
            "type": "boolean",
            "description": "PartIssue.HasCoreCharge\n\nFlag to denote if the core cost is added to the total cost  \nVX_PARTISSUE.HasCoreCharge bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PartIssue.InternalId\n\nUnique ID system generated  \nVX_PARTISSUE.InternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "PartIssue.InvoiceNumber\n\nInvoice number for the part issue  \nVX_PARTISSUE.InvoiceNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "PartIssue.IsReturn\n\nWhen set to true, this tells the server to treat it like a part-return-request.  \nVX_PARTISSUE.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturnable": {
            "type": "boolean",
            "description": "PartIssue.IsReturnable\n\nIsn't on a closed work order, isn't a non-stock part, etc.  \nVX_PARTISSUE.IsReturnable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IssueDateTime": {
            "type": "string",
            "description": "PartIssue.IssueDateTime\n\nIssue Date Time of part  \nVX_PARTISSUE.IssueDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IssueQty": {
            "type": "number",
            "description": "PartIssue.IssueQty\n\nQuantity of part issued  \nVX_PARTISSUE.IssueQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "IsWarrantyViolation": {
            "type": "boolean",
            "description": "PartIssue.IsWarrantyViolation\n\nWas the part issued due to a warranty violation?  \nVX_PARTISSUE.IsWarrantyViolation bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartIssue.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTISSUE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationDesc": {
            "type": "string",
            "description": "PartIssue.LocationDesc\n\nIssue location description of the part  \nVX_PARTISSUE.LocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PartIssue.LocationId\n\nIssue location of the part  \nVX_PARTISSUE.LocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PartIssue.ManufacturerId\n\nPart manufacturer  \nVX_PARTISSUE.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartIssue.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_PARTISSUE.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartIssue.PartSeq\n\nUnique parts.part_id  \nVX_PARTISSUE.PartSeq long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PoItem": {
            "type": "string",
            "description": "PartIssue.PoItem\n\nPO Item  \nVX_PARTISSUE.PoItem string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "PoLineItem": {
            "type": "integer",
            "description": "PartIssue.PoLineItem\n\nPO Line number  \nVX_PARTISSUE.PoLineItem int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "PartIssue.PoNumber\n\nPurchase Order number for the part issue  \nVX_PARTISSUE.PoNumber string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDesc": {
            "type": "string",
            "description": "PartIssue.PositionDesc\n\nPosition Code Description  \nVX_PARTISSUE.PositionDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage1": {
            "type": "string",
            "description": "PartIssue.PositionDescLanguage1\n\nPosition description, primary language  \nVX_PARTISSUE.PositionDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage2": {
            "type": "string",
            "description": "PartIssue.PositionDescLanguage2\n\nPosition description, second language  \nVX_PARTISSUE.PositionDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage3": {
            "type": "string",
            "description": "PartIssue.PositionDescLanguage3\n\nPosition description, third language  \nVX_PARTISSUE.PositionDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "PartIssue.PositionId\n\nPositon Code  \nVX_PARTISSUE.PositionId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "ProNumber": {
            "type": "string",
            "description": "PartIssue.ProNumber\n\nPRO Number for part  \nVX_PARTISSUE.ProNumber string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "PartIssue.ReferenceNumber\n\nReference number for part issue  \nVX_PARTISSUE.ReferenceNumber string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonComment": {
            "type": "string",
            "description": "PartIssue.ReturnReasonComment\n\nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonDesc": {
            "type": "string",
            "description": "PartIssue.ReturnReasonDesc\n\nReturn reason's description  \nVX_PARTISSUE.ReturnReasonDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonId": {
            "type": "string",
            "description": "PartIssue.ReturnReasonId\n\nReturn reason code  \nVX_PARTISSUE.ReturnReasonId string 4 \n\nSearchable: False ",
            "nullable": true
          },
          "ReturnReasonStatus": {
            "type": "string",
            "description": "PartIssue.ReturnReasonStatus\n\nNull for M5 because there's no return-request; it just happens  \nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "PartIssue.Serialized\n\nSerialized part.  (null - no, M - Mandatory, O - Optional)  \nVX_PARTISSUE.Serialized string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "PartIssue.SerialNumber\n\nPart's serial number  \nVX_PARTISSUE.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "Target": {
            "type": "string",
            "description": "PartIssue.Target\n\nWORK ORDER, UNIT, DEPARTMENT, INDIRECT ACCOUNT, DIRECT ACCOUNT, COMPONENT  \nVX_PARTISSUE.Target string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "PartIssue.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_PARTISSUE.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "PartIssue.TaskId\n\nWac-System-System/Assembly code  \nVX_PARTISSUE.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "PartIssue.TotalCost\n\nTotal value of issue, including tax  \nVX_PARTISSUE.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "PartIssue.UniqueId\n\nString representation of part_jnl.part_jnl_id  \nVX_PARTISSUE.UniqueId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "PartIssue.UnitCost\n\nVX_PARTISSUE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfIssue": {
            "type": "string",
            "description": "PartIssue.UnitOfIssue\n\nUnit of issue for part  \nVX_PARTISSUE.UnitOfIssue string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorContractId": {
            "type": "string",
            "description": "PartIssue.VendorContractId\n\nContract numbers for part price; used for issuing non stock parts.  \nVX_PARTISSUE.VendorContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PartIssue.VendorDesc\n\nVendor name  \nVX_PARTISSUE.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PartIssue.VendorId\n\nVendor number the part was received and issued from  \nVX_PARTISSUE.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PartIssue.WorkOrderId\n\nWork Order Number   \nVX_PARTISSUE.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "PartIssue.WorkOrderLocationId\n\nWork Order Location  \nVX_PARTISSUE.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "PartIssue.WorkOrderTitle\n\nVisit reason description  \nVX_PARTISSUE.WorkOrderTitle string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderYear": {
            "type": "integer",
            "description": "PartIssue.WorkOrderYear\n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartIssue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartIssue"
              }
            }
          }
        ]
      },
      "ETagOfIPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartIssue"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartIssue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartIssue"
          }
        }
      },
      "QueryResponseOfIPartManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartManufacturer"
                }
              }
            }
          }
        ]
      },
      "IPartManufacturer": {
        "type": "object",
        "description": "PartManufacturer",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "PartManufacturer.Active\n\nNot disabled?  \nVX_PARTMANUFACTURER.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "PartManufacturer.Description\n\nM5 doesn't have a separate description; this is the code again  \nVX_PARTMANUFACTURER.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartManufacturer.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTMANUFACTURER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartManufacturerId": {
            "type": "string",
            "description": "PartManufacturer.PartManufacturerId\n\nManufacturer ID  \nVX_PARTMANUFACTURER.PartManufacturerId string 30 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartManufacturer"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartManufacturer"
              }
            }
          }
        ]
      },
      "ETagOfIPartManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartManufacturer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartManufacturer"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartManufacturer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartManufacturer"
          }
        }
      },
      "QueryResponseOfIPartReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartReceipt"
                }
              }
            }
          }
        ]
      },
      "IPartReceipt": {
        "type": "object",
        "description": "PartReceipt",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AccountId",
          "AssetId",
          "DepartmentId",
          "IndirectId",
          "InvoiceId",
          "LocationId",
          "PartId",
          "PartSeq",
          "PoId",
          "PoLineNumber",
          "ReceivedDateTime",
          "ReceivedQty",
          "Serialized",
          "SerialNumbers",
          "VendorPartNumber",
          "WorkOrderId"
        ],
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "PartReceipt.AccountId\n\nDirect account, if any  \nVX_PARTRECEIPT.AccountId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "PartReceipt.AssetDesc\n\nAsset description, if received for a department  \nVX_PARTRECEIPT.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PartReceipt.AssetId\n\nAsset received for, if any  \nVX_PARTRECEIPT.AssetId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "Attachments": {
            "description": "PartReceipt.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "PartReceipt.DepartmentDesc\n\nDepartment name, if ordered for a department  \nVX_PARTRECEIPT.DepartmentDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "PartReceipt.DepartmentId\n\nDepartment ID, if received for a department  \nVX_PARTRECEIPT.DepartmentId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "description": "PartReceipt.Destination\n\nSTOCK, DEPARTMENT, ASSET, TRANSFER, INDIRECT ACCOUNT, DIRECT ACCOUNT, WORK ORDER  \nVX_PARTRECEIPT.Destination string  \n\nSearchable: False ",
            "nullable": true
          },
          "DestinationStatus": {
            "type": "string",
            "description": "PartReceipt.DestinationStatus\n\nISSUED, RECEIVED, ORDERED  \nVX_PARTRECEIPT.DestinationStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "DiscountPct": {
            "type": "string",
            "description": "PartReceipt.DiscountPct\n\nDiscount percentage  \nVX_PARTRECEIPT.DiscountPct decimal  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectDesc": {
            "type": "string",
            "description": "PartReceipt.IndirectDesc\n\nIndirect account description, if ordered for an indirect account  \nVX_PARTRECEIPT.IndirectDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "PartReceipt.IndirectId\n\nIndirect account number, if any  \nVX_PARTRECEIPT.IndirectId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PartReceipt.InternalId\n\n.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceId": {
            "type": "string",
            "description": "PartReceipt.InvoiceId\n\nInvoice number  \nVX_PARTRECEIPT.InvoiceId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "IsIssued": {
            "type": "boolean",
            "description": "PartReceipt.IsIssued\n\nfalse for stock, may be true for others  \nVX_PARTRECEIPT.IsIssued bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsPutaway": {
            "type": "boolean",
            "description": "PartReceipt.IsPutaway\n\nHas the part been put away?  \nVX_PARTRECEIPT.IsPutaway bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IsReturn": {
            "type": "boolean",
            "description": "PartReceipt.IsReturn\n\nIs it a return?  \nVX_PARTRECEIPT.IsReturn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartReceipt.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTRECEIPT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastIssueDateTime": {
            "type": "string",
            "description": "PartReceipt.LastIssueDateTime\n\nWhen last issued  \nVX_PARTRECEIPT.LastIssueDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PartReceipt.LocationId\n\nReceiving location  \nVX_PARTRECEIPT.LocationId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartReceipt.PartId\n\nPart number (the one the user sees)  \nVX_PARTRECEIPT.PartId string 30 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartReceipt.PartSeq\n\nInternal part id sequence  \nVX_PARTRECEIPT.PartSeq int 10 \n\nSearchable: False \nRequired for: POST  ",
            "format": "int32",
            "nullable": true
          },
          "PartXrefId": {
            "type": "string",
            "description": "PartReceipt.PartXrefId\n\nCross-reference used on receipt or order  \nVX_PARTRECEIPT.PartXrefId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "PartReceipt.PoId\n\nM5 part order ID  \nVX_PARTRECEIPT.PoId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "PoLineNumber": {
            "type": "integer",
            "description": "PartReceipt.PoLineNumber\n\nPart order line  \nVX_PARTRECEIPT.PoLineNumber int  \n\nSearchable: False \nRequired for: POST  ",
            "format": "int32",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "PartReceipt.PositionId\n\nPosition issued to  \nVX_PARTRECEIPT.PositionId string  \n\nSearchable: False ",
            "nullable": true
          },
          "PositionRequired": {
            "type": "boolean",
            "description": "PartReceipt.PositionRequired\n\nIs a position required when issuing?  \nVX_PARTRECEIPT.PositionRequired bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceiptId": {
            "type": "string",
            "description": "PartReceipt.ReceiptId\n\nReceipt Id for the entire receipt  \nVX_PARTRECEIPT.ReceiptId int  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceiptType": {
            "type": "string",
            "description": "PartReceipt.ReceiptType\n\nVX_PARTRECEIPT.ReceiptType string  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceivedDateTime": {
            "type": "string",
            "description": "PartReceipt.ReceivedDateTime\n\nLast time the part was received  \nVX_PARTRECEIPT.ReceivedDateTime DateTime  \n\nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PartReceipt.ReceivedQty\n\nReceived quantity.  Negative if return.  \nVX_PARTRECEIPT.ReceivedQty decimal  \n\nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "PartReceipt.Serialized\n\nDoes the part require serial numbers?  \nVX_PARTRECEIPT.Serialized bool  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "PartReceipt.SerialNumber\n\nSerial number received  \nVX_PARTRECEIPT.SerialNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumbers": {
            "description": "PartReceipt.SerialNumbers\n\nSearchable: False \nRequired for: POST  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "TaskId": {
            "type": "string",
            "description": "PartReceipt.TaskId\n\nWork order job  \nVX_PARTRECEIPT.TaskId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaxPct": {
            "type": "number",
            "description": "PartReceipt.TaxPct\n\nCumulative tax percentage from the tax scheme  \nVX_PARTRECEIPT.TaxPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "PartReceipt.TaxSchemeId\n\nTax Scheme ID  \nVX_PARTRECEIPT.TaxSchemeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "PartReceipt.UnitPrice\n\nUnit price  \nVX_PARTRECEIPT.UnitPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorComments": {
            "type": "string",
            "description": "PartReceipt.VendorComments\n\nVX_PARTRECEIPT.VendorComments string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PartReceipt.VendorDesc\n\nVendor description  \nVX_PARTRECEIPT.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PartReceipt.VendorId\n\nVendor received from  \nVX_PARTRECEIPT.VendorId string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "PartReceipt.VendorInternalId\n\nVendor internal ID  \nVX_PARTRECEIPT.VendorInternalId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "VendorPartNumber": {
            "type": "string",
            "description": "PartReceipt.VendorPartNumber\n\nVendor's cross-reference for the part, whether actually used in the transaction or not  \nVX_PARTRECEIPT.VendorPartNumber string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "VendorRank": {
            "type": "string",
            "description": "PartReceipt.VendorRank\n\nPRIMARY, SECONDARY, or nothing  \nVX_PARTRECEIPT.VendorRank string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PartReceipt.WorkOrderId\n\nWork order received for, if any  \nVX_PARTRECEIPT.WorkOrderId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartReceipt"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartReceipt"
              }
            }
          }
        ]
      },
      "ETagOfIPartReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIPartReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartReceipt"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIPartReceipt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartReceipt"
            }
          }
        }
      },
      "SaveResponseOfIPartReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartReceipt"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartReceipt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartReceipt"
          }
        }
      },
      "SaveResponseOfListOfIPartRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartRequest"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIPartRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPartRequest"
            }
          }
        }
      },
      "SaveResponseOfIPartRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartRequest"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartRequest"
          }
        }
      },
      "QueryResponseOfIPartRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartRequest"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPartRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartRequest"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartRequest"
              }
            }
          }
        ]
      },
      "ETagOfIPartRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartReturnRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartReturnRequest"
              }
            }
          }
        ]
      },
      "IPartReturnRequest": {
        "type": "object",
        "description": "PartReturnRequest",
        "x-abstract": true,
        "additionalProperties": false
      },
      "SaveBodyOfIPartReturnRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartReturnRequest"
          }
        }
      },
      "QueryResponseOfIPartReturnRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartReturnRequest"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPartReturnRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartReturnRequest"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartReturnRequest"
              }
            }
          }
        ]
      },
      "ETagOfIPartReturnRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPart"
                }
              }
            }
          }
        ]
      },
      "IPart": {
        "type": "object",
        "description": "Part",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Description",
          "PartId"
        ],
        "properties": {
          "Comments": {
            "type": "string",
            "description": "Part.Comments\n\nPart notes  \nVX_PART.Comments string 30 \n\nValue can be updated via: POST  \nSearchable: True ",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "Part.CreatedDateTime\n\nWhen created  \nVX_PART.CreatedDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DefaultVendorId": {
            "type": "string",
            "description": "Part.DefaultVendorId\n\nPreferred vendor  \nVX_PART.DefaultVendorId string 12 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Part.Description\n\nPart Description  \nVX_PART.Description string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "Part.DescriptionLanguage1\n\nPart description, primary language  \nVX_PART.DescriptionLanguage1 string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "Part.DescriptionLanguage2\n\nPart description, second language  \nVX_PART.DescriptionLanguage2 string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "Part.DescriptionLanguage3\n\nPart description, third language  \nVX_PART.DescriptionLanguage3 string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "Part.InternalId\n\nInternal 'part_id'  \nVX_PART.InternalId long  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Part.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PART.LastChangedDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "Part.ManufacturerId\n\nPart manufacturer  \nVX_PART.ManufacturerId string 30 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "Part.PartId\n\nPart Number  \nVX_PART.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "ProductCategoryDesc": {
            "type": "string",
            "description": "Part.ProductCategoryDesc\n\nPart commodity  \nVX_PART.ProductCategoryDesc string 13 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "ProductCategoryId": {
            "type": "string",
            "description": "Part.ProductCategoryId\n\nPart commodity  \nVX_PART.ProductCategoryId string 13 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "Part.Serialized\n\nIs this part ever serialized?  \nVX_PART.Serialized bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "Stocked": {
            "type": "boolean",
            "description": "Part.Stocked\n\nStocked at this location?  \nVX_PART.Stocked bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "Part.TaskSystemId\n\nVMRS system code, called 'TaskSystemId' to match other tables.  \nVX_PART.TaskSystemId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "TaskSystemIdMustMatch": {
            "type": "boolean",
            "description": "Part.TaskSystemIdMustMatch\n\nMust the part's system match the job's system in order to issue?  \nVX_PART.TaskSystemIdMustMatch bool  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "UnitOfMeasureId": {
            "type": "string",
            "description": "Part.UnitOfMeasureId\n\nUnit of measure  \nVX_PART.UnitOfMeasureId string 11 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "VMRSCode": {
            "type": "string",
            "description": "Part.VMRSCode\n\nVMRS code, aka ATA code: system-assembly-part  \nVX_PART.VMRSCode string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPart"
            }
          }
        }
      },
      "SaveResponseOfIPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPart"
          }
        }
      },
      "QueryResponseOfIPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPart"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPart"
              }
            }
          }
        ]
      },
      "ETagOfIPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIPartSerialNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartSerialNumber"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPartSerialNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartSerialNumber"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartSerialNumber"
              }
            }
          }
        ]
      },
      "ETagOfIPartSerialNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartSerialNumber": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartSerialNumber"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartSerialNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartSerialNumber"
          }
        }
      },
      "QueryResponseOfIPartTransferLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartTransferLine"
                }
              }
            }
          }
        ]
      },
      "IPartTransferLine": {
        "type": "object",
        "description": "PartTransferLine",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "PartTransferLine.AssetDesc\n\nAsset description issued to  \nVX_PARTTRANSFERLINE.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PartTransferLine.AssetId\n\nAsset issued to  \nVX_PARTTRANSFERLINE.AssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "FromLocationDesc": {
            "type": "string",
            "description": "PartTransferLine.FromLocationDesc\n\nDescription of stock location from which part is transferred.  \nVX_PARTTRANSFERLINE.FromLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "FromLocationId": {
            "type": "string",
            "description": "PartTransferLine.FromLocationId\n\nFrom stock location  \nVX_PARTTRANSFERLINE.FromLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PartTransferLine.InternalId\n\nUnique ID system generated  \nVX_PARTTRANSFERLINE.InternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartTransferLine.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTTRANSFERLINE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PartTransferLine.ManufacturerId\n\nPart manufacturer  \nVX_PARTTRANSFERLINE.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PartTransferLine.PartDesc\n\nPart number description  \nVX_PARTTRANSFERLINE.PartDesc string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PartTransferLine.PartDescLanguage1\n\nPart description, primary language  \nVX_PARTTRANSFERLINE.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PartTransferLine.PartDescLanguage2\n\nPart description, second language  \nVX_PARTTRANSFERLINE.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PartTransferLine.PartDescLanguage3\n\nPart description, third language  \nVX_PARTTRANSFERLINE.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartTransferLine.PartId\n\nPart number (or fluid product number) issued to the work order task  \nVX_PARTTRANSFERLINE.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartTransferLine.PartSeq\n\nUnique parts.part_id  \nVX_PARTTRANSFERLINE.PartSeq long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "PartTransferId": {
            "type": "string",
            "description": "PartTransferLine.PartTransferId\n\nInternal transfer ID, not ticket number  \nVX_PARTTRANSFERLINE.PartTransferId int  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceivedDateTime": {
            "type": "string",
            "description": "PartTransferLine.ReceivedDateTime\n\nWhen parts received  \nVX_PARTTRANSFERLINE.ReceivedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PartTransferLine.ReceivedQty\n\nQuantity received  \nVX_PARTTRANSFERLINE.ReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RequestedDateTime": {
            "type": "string",
            "description": "PartTransferLine.RequestedDateTime\n\nWhen part requested  \nVX_PARTTRANSFERLINE.RequestedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequestedQty": {
            "type": "number",
            "description": "PartTransferLine.RequestedQty\n\nQuantity requested  \nVX_PARTTRANSFERLINE.RequestedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RequestingUserId": {
            "type": "string",
            "description": "PartTransferLine.RequestingUserId\n\nThe user (not employee) who requested the part  \nVX_PARTTRANSFERLINE.RequestingUserId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "RequestingUserName": {
            "type": "string",
            "description": "PartTransferLine.RequestingUserName\n\nRequesting user's name  \nVX_PARTTRANSFERLINE.RequestingUserName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "PartTransferLine.Serialized\n\nSerialized part, at least sometimes  \nVX_PARTTRANSFERLINE.Serialized bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumbers": {
            "description": "PartTransferLine.SerialNumbers\n\nPart Serial Numbers  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPartSerialNumber"
          },
          "Status": {
            "type": "string",
            "description": "PartTransferLine.Status\n\nBUILD, REQUEST, IN-TRANSIT, COMPLETE, SHORT, PICK, or TICKET  \nVX_PARTTRANSFERLINE.Status string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Target": {
            "type": "string",
            "description": "PartTransferLine.Target\n\nSTOCK, WORK ORDER, UNIT, DEPARTMENT, INDIRECT ACCOUNT, DIRECT ACCOUNT  \nVX_PARTTRANSFERLINE.Target string  \n\nSearchable: False ",
            "nullable": true
          },
          "ToLocationDesc": {
            "type": "string",
            "description": "PartTransferLine.ToLocationDesc\n\nDescription of stock location to which part is transferred.  \nVX_PARTTRANSFERLINE.ToLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "ToLocationId": {
            "type": "string",
            "description": "PartTransferLine.ToLocationId\n\nTo stock location  \nVX_PARTTRANSFERLINE.ToLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "PartTransferLine.TotalCost\n\nTotal value of transfer  \nVX_PARTTRANSFERLINE.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TransferredDateTime": {
            "type": "string",
            "description": "PartTransferLine.TransferredDateTime\n\nWhen part transferred  \nVX_PARTTRANSFERLINE.TransferredDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TransferredQty": {
            "type": "number",
            "description": "PartTransferLine.TransferredQty\n\nQuantity sent  \nVX_PARTTRANSFERLINE.TransferredQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "PartTransferLine.UnitCost\n\nVX_PARTTRANSFERLINE.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PartTransferLine.WorkOrderId\n\nVisit reason description  \nVX_PARTTRANSFERLINE.WorkOrderId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "PartTransferLine.WorkOrderTitle\n\nVisit reason description  \nVX_PARTTRANSFERLINE.WorkOrderTitle string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartTransferLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartTransferLine"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartTransferLine"
              }
            }
          }
        ]
      },
      "ETagOfIPartTransferLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartTransferLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartTransferLine"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartTransferLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartTransferLine"
          }
        }
      },
      "QueryResponseOfIPartWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartWarranty"
                }
              }
            }
          }
        ]
      },
      "IPartWarranty": {
        "type": "object",
        "description": "PartWarranty",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "DurationDistance": {
            "type": "integer",
            "description": "PartWarranty.DurationDistance\n\nDuration in miles or KM  \nVX_PARTWARRANTY.DurationDistance int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DurationMonths": {
            "type": "integer",
            "description": "PartWarranty.DurationMonths\n\nWarranty duration in months  \nVX_PARTWARRANTY.DurationMonths decimal  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartWarranty.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTWARRANTY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartWarranty.PartId\n\nPart number (the one the user sees)  \nVX_PARTWARRANTY.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartWarranty.PartSeq\n\nInternal part id sequence  \nVX_PARTWARRANTY.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PartWarranty.VendorDesc\n\nVendor name  \nVX_PARTWARRANTY.VendorDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PartWarranty.VendorId\n\nVendor with the warranty; null means default warranty  \nVX_PARTWARRANTY.VendorId string 12 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartWarranty"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartWarranty"
              }
            }
          }
        ]
      },
      "ETagOfIPartWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartWarranty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartWarranty"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartWarranty": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartWarranty"
          }
        }
      },
      "QueryResponseOfIPartXref": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPartXref"
                }
              }
            }
          }
        ]
      },
      "IPartXref": {
        "type": "object",
        "description": "PartXref",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "PartXref.Active\n\nActive?  \nVX_PARTXREF.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "EquivalentPartId": {
            "type": "string",
            "description": "PartXref.EquivalentPartId\n\nEquivalent part number  \nVX_PARTXREF.EquivalentPartId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "EquivalentPartSeq": {
            "type": "integer",
            "description": "PartXref.EquivalentPartSeq\n\nparts.part_id of the equivalent part  \nVX_PARTXREF.EquivalentPartSeq int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PartXref.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PARTXREF.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastUsedDateTime": {
            "type": "string",
            "description": "PartXref.LastUsedDateTime\n\nLast time the xref was entered  \nVX_PARTXREF.LastUsedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PartXref.PartId\n\nPart number (the one the user sees)  \nVX_PARTXREF.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PartXref.PartSeq\n\nInternal part id sequence  \nVX_PARTXREF.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PartXrefId": {
            "type": "string",
            "description": "PartXref.PartXrefId\n\nCross-reference  \nVX_PARTXREF.PartXrefId string  \n\nSearchable: True ",
            "nullable": true
          },
          "XrefManufacturerDesc": {
            "type": "string",
            "description": "PartXref.XrefManufacturerDesc\n\nCross-reference manufacturer description  \nVX_PARTXREF.XrefManufacturerDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "XrefManufacturerId": {
            "type": "string",
            "description": "PartXref.XrefManufacturerId\n\nCross-reference's manufacturer  \nVX_PARTXREF.XrefManufacturerId string  \n\nSearchable: False ",
            "nullable": true
          },
          "XrefType": {
            "type": "string",
            "description": "PartXref.XrefType\n\nVX_PARTXREF.XrefType string  \n\nSearchable: False ",
            "nullable": true
          },
          "XrefVendorDesc": {
            "type": "string",
            "description": "PartXref.XrefVendorDesc\n\nVendor name  \nVX_PARTXREF.XrefVendorDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "XrefVendorId": {
            "type": "string",
            "description": "PartXref.XrefVendorId\n\nVendor, if a vendor xref  \nVX_PARTXREF.XrefVendorId string 12 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPartXref": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartXref"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPartXref"
              }
            }
          }
        ]
      },
      "ETagOfIPartXref": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPartXref": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPartXref"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPartXref": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPartXref"
          }
        }
      },
      "QueryResponseOfIPmChecklistItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPmChecklistItem"
                }
              }
            }
          }
        ]
      },
      "IPmChecklistItem": {
        "type": "object",
        "description": "PmChecklistItem",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIPmChecklistItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPmChecklistItem"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPmChecklistItem"
              }
            }
          }
        ]
      },
      "ETagOfIPmChecklistItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPmChecklistItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPmChecklistItem"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPmChecklistItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPmChecklistItem"
          }
        }
      },
      "QueryResponseOfIPoolClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPoolClass"
                }
              }
            }
          }
        ]
      },
      "IPoolClass": {
        "type": "object",
        "description": "PoolClass",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "PoolClass.Description\n\nRental Class Description  \n.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PoolClass.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_POOLCLASS.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PoolClass.LocationId\n\nMotor Pool Location  \nVX_POOLCLASS.LocationId string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "PoolClassId": {
            "type": "string",
            "description": "PoolClass.PoolClassId\n\nRental Class Code  \nVX_POOLCLASS.PoolClassId string 6 \n\nSearchable: True ",
            "nullable": true
          },
          "TotalAssetQty": {
            "type": "integer",
            "description": "PoolClass.TotalAssetQty\n\nTotal Units  \nVX_POOLCLASS.TotalAssetQty int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIPoolClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPoolClass"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPoolClass"
              }
            }
          }
        ]
      },
      "ETagOfIPoolClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPoolClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPoolClass"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPoolClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPoolClass"
          }
        }
      },
      "QueryResponseOfIProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IProductCategory"
                }
              }
            }
          }
        ]
      },
      "IProductCategory": {
        "type": "object",
        "description": "ProductCategory",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "ProductCategory.Description\n\nCommodity description  \nVX_PRODUCTCATEGORY.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "ProductCategory.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PRODUCTCATEGORY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProductCategoryId": {
            "type": "string",
            "description": "ProductCategory.ProductCategoryId\n\nCommodity code  \nVX_PRODUCTCATEGORY.ProductCategoryId string 13 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIProductCategory"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIProductCategory"
              }
            }
          }
        ]
      },
      "ETagOfIProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IProductCategory"
              }
            }
          }
        ]
      },
      "SaveBodyOfIProductCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IProductCategory"
          }
        }
      },
      "SaveResponseOfListOfIPurchaseOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrderAttribute"
                }
              }
            }
          }
        ]
      },
      "IPurchaseOrderAttribute": {
        "type": "object",
        "description": "PurchaseOrderAttribute",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AttributeId",
          "PoId"
        ],
        "properties": {
          "AttributeId": {
            "type": "string",
            "description": "PurchaseOrderAttribute.AttributeId\n\nItem description  \nVX_PURCHASEORDERATTRIBUTE.AttributeId string 24 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "DataType": {
            "type": "string",
            "description": "PurchaseOrderAttribute.DataType\n\nType of data value  \nVX_PURCHASEORDERATTRIBUTE.DataType string 7 \n\nSearchable: False ",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "description": "PurchaseOrderAttribute.DefaultValue\n\nDefault value  \nVX_PURCHASEORDERATTRIBUTE.DefaultValue string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "PurchaseOrderAttribute.DisplayOrder\n\nAlphabetical order  \nVX_PURCHASEORDERATTRIBUTE.DisplayOrder int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseOrderAttribute.InternalId\n\nM5 Forced to: 0 \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "PurchaseOrderAttribute.LabelText\n\nItem description  \nVX_PURCHASEORDERATTRIBUTE.LabelText string 24 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseOrderAttribute.LastChangedDateTime\n\nWhen the item value last changed  \nVX_PURCHASEORDERATTRIBUTE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "PurchaseOrderAttribute.PoId\n\nPurchaseOrder number  \nVX_PURCHASEORDERATTRIBUTE.PoId string 15 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "PoInternalId": {
            "type": "integer",
            "description": "PurchaseOrderAttribute.PoInternalId\n\nPurchaseOrder number  \nVX_PURCHASEORDERATTRIBUTE.PoInternalId long 15 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          },
          "ValidateAgainstList": {
            "type": "boolean",
            "description": "PurchaseOrderAttribute.ValidateAgainstList\n\nRequire entry to be within ValidList?  \nVX_PURCHASEORDERATTRIBUTE.ValidateAgainstList bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ValidList": {
            "description": "PurchaseOrderAttribute.ValidList\n\nList of valid values  \nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfICustomListValue"
          },
          "Value": {
            "type": "string",
            "description": "PurchaseOrderAttribute.Value\n\nItem value  \nVX_PURCHASEORDERATTRIBUTE.Value string 50 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ValueRequired": {
            "type": "boolean",
            "description": "PurchaseOrderAttribute.ValueRequired\n\nIs a value required?  \nVX_PURCHASEORDERATTRIBUTE.ValueRequired bool  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIPurchaseOrderAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderAttribute"
            }
          }
        }
      },
      "QueryResponseOfIPurchaseOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrderAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPurchaseOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrderAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPurchaseOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseOrderAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseOrderAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseOrderAttribute"
          }
        }
      },
      "SaveResponseOfIPurchaseOrderDestination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseOrderDestination"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseOrderDestination": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseOrderDestination"
          }
        }
      },
      "SaveResponseOfListOfIPurchaseOrderLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrderLine"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIPurchaseOrderLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderLine"
            }
          }
        }
      },
      "SaveResponseOfIPurchaseOrderLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseOrderLine"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseOrderLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseOrderLine"
          }
        }
      },
      "SaveResponseOfListOfIPurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrder"
                }
              }
            }
          }
        ]
      },
      "IPurchaseOrder": {
        "type": "object",
        "description": "PurchaseOrder",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "LocationId",
          "PoId",
          "PoLines",
          "VendorId"
        ],
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "PurchaseOrder.AccountId\n\nAlways null for M5 but the first property always needs a table  \nVX_PURCHASEORDER.AccountId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Address1": {
            "type": "string",
            "description": "PurchaseOrder.Address1\n\nShipping address1  \nVX_PURCHASEORDER.Address1 string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "description": "PurchaseOrder.Address2\n\nShipping address2  \nVX_PURCHASEORDER.Address2 string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "AllowCommercial": {
            "type": "boolean",
            "description": "PurchaseOrder.AllowCommercial\n\nCan this order have commercial?  \nVX_PURCHASEORDER.AllowCommercial bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "AllowParts": {
            "type": "boolean",
            "description": "PurchaseOrder.AllowParts\n\nCan parts be ordered?  \nVX_PURCHASEORDER.AllowParts bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "PurchaseOrder.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "Attributes": {
            "description": "PurchaseOrder.Attributes\n\nPurchase order items  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseOrderAttribute"
          },
          "City": {
            "type": "string",
            "description": "PurchaseOrder.City\n\nShipping city  \nVX_PURCHASEORDER.City string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "PurchaseOrder.Comments\n\nM5 notes are one big note  \nVX_PURCHASEORDER.Comments string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "description": "PurchaseOrder.ContactName\n\nShipping contact  \nVX_PURCHASEORDER.ContactName string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CorporateVendorId": {
            "type": "string",
            "description": "PurchaseOrder.CorporateVendorId\n\nCorporate vendor number  \nVX_PURCHASEORDER.CorporateVendorId string 12 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "description": "PurchaseOrder.Country\n\nShipping country  \nVX_PURCHASEORDER.Country string 3 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CreateDateTime": {
            "type": "string",
            "description": "PurchaseOrder.CreateDateTime\n\nWhen the record was created  \nVX_PURCHASEORDER.CreateDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DistributorId": {
            "type": "integer",
            "description": "PurchaseOrder.DistributorId\n\nDistributor Id  \nVX_PURCHASEORDER.DistributorId int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseOrder.InternalId\n\npart_orders.po_id  \nVX_PURCHASEORDER.InternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseOrder.LastChangedDateTime\n\nWhen the purchase order header or a line (but not item) last changed  \nVX_PURCHASEORDER.LastChangedDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastReceivedDateTime": {
            "type": "string",
            "description": "PurchaseOrder.LastReceivedDateTime\n\nLast time there was a receipt  \nVX_PURCHASEORDER.LastReceivedDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseOrder.LocationId\n\nOrder's main location  \nVX_PURCHASEORDER.LocationId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "NeedByDateTime": {
            "type": "string",
            "description": "PurchaseOrder.NeedByDateTime\n\nWhen we want to receive the order  \nVX_PURCHASEORDER.NeedByDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Notes": {
            "description": "PurchaseOrder.Notes\n\nM5 notes kept as Comments  \nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "OpenLines": {
            "type": "integer",
            "description": "PurchaseOrder.OpenLines\n\nNumber of unreceived lines on the order  \nVX_PURCHASEORDER.OpenLines int  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "OrderDateTime": {
            "type": "string",
            "description": "PurchaseOrder.OrderDateTime\n\nWhen the order was opened  \nVX_PURCHASEORDER.OrderDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderedByUserId": {
            "type": "string",
            "description": "PurchaseOrder.OrderedByUserId\n\nWho opened the order?  \nVX_PURCHASEORDER.OrderedByUserId string 8 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "PurchaseOrder.Phone\n\nShipping phone  \nVX_PURCHASEORDER.Phone string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "PurchaseOrder.PoId\n\nM5 part order ID  \nVX_PURCHASEORDER.PoId string  \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "PoLines": {
            "description": "PurchaseOrder.PoLines\n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseOrderLine"
          },
          "POReferenceNumber": {
            "type": "string",
            "description": "PurchaseOrder.POReferenceNumber\n\nPurchase order reference number  \nVX_PURCHASEORDER.POReferenceNumber string 12 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "State": {
            "type": "string",
            "description": "PurchaseOrder.State\n\nShipping state  \nVX_PURCHASEORDER.State string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "PurchaseOrder.Status\n\nCommon status:  PENDING, OPEN, CLOSED  \nVX_PURCHASEORDER.Status string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "PurchaseOrder.TotalCost\n\nVX_PURCHASEORDER.TotalCost decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UserData1": {
            "type": "number",
            "description": "PurchaseOrder.UserData1\n\nData #1 for customer use, numeric, sometimes delivery charges  \nVX_PURCHASEORDER.UserData1 decimal 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UserData2": {
            "type": "string",
            "description": "PurchaseOrder.UserData2\n\nData #2 for customer use, string, sometimes 'EXEMPT'  \nVX_PURCHASEORDER.UserData2 string 15 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData3": {
            "type": "string",
            "description": "PurchaseOrder.UserData3\n\nData #3 for customer use, string, sometimes an employee name  \nVX_PURCHASEORDER.UserData3 string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData4": {
            "type": "string",
            "description": "PurchaseOrder.UserData4\n\nData #4 for customer use, string, sometimes an employee title  \nVX_PURCHASEORDER.UserData4 string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "UserData5": {
            "type": "string",
            "description": "PurchaseOrder.UserData5\n\nData #5 for customer use, string, sometimes an employee phone  \nVX_PURCHASEORDER.UserData5 string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PurchaseOrder.VendorDesc\n\nVendor description  \nVX_PURCHASEORDER.VendorDesc string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PurchaseOrder.VendorId\n\nVendor ordered from  \nVX_PURCHASEORDER.VendorId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "PurchaseOrder.VendorInternalId\n\nVendor internal ID  \nVX_PURCHASEORDER.VendorInternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "description": "PurchaseOrder.ZipCode\n\nShipping zip code  \nVX_PURCHASEORDER.ZipCode string 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPurchaseOrderAttribute": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderAttribute"
            }
          }
        }
      },
      "ILookupItemOfIPurchaseOrderLine": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrderLine"
            }
          }
        }
      },
      "SaveBodyOfListOfIPurchaseOrder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseOrder"
            }
          }
        }
      },
      "SaveResponseOfIPurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseOrder"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseOrder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseOrder"
          }
        }
      },
      "QueryResponseOfIPurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseOrder"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrder"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseOrder"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIPurchaseRequisitionLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseRequisitionLine"
                }
              }
            }
          }
        ]
      },
      "IPurchaseRequisitionLine": {
        "type": "object",
        "description": "PurchaseRequisitionLine",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "ManufacturerId",
          "PartId",
          "RequisitionId",
          "RequisitionLineNumber"
        ],
        "properties": {
          "Comments": {
            "type": "string",
            "description": "PurchaseRequisitionLine.Comments\n\nLine notes  \nVX_PURCHASEREQUISITIONLINE.Comments string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ContractId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.ContractId\n\nContract number for purchase requisition.  \nVX_PURCHASEREQUISITIONLINE.ContractId string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "description": "PurchaseRequisitionLine.Destination\n\nSTOCK, DEPARTMENT, INDIRECT ACCOUNT, ASSET, WORK ORDER, DIRECT ACCOUNT  \nVX_PURCHASEREQUISITIONLINE.Destination string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseRequisitionLine.InternalId\n\npart_orders.part_orders_id  \nVX_PURCHASEREQUISITIONLINE.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseRequisitionLine.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PURCHASEREQUISITIONLINE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastReceivedDateTime": {
            "type": "string",
            "description": "PurchaseRequisitionLine.LastReceivedDateTime\n\nLast time the part was received  \nVX_PURCHASEREQUISITIONLINE.LastReceivedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LeadDays": {
            "type": "integer",
            "description": "PurchaseRequisitionLine.LeadDays\n\nVendor lead time in days  \nVX_PURCHASEREQUISITIONLINE.LeadDays int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LineItemType": {
            "type": "string",
            "description": "PurchaseRequisitionLine.LineItemType\n\nSTOCK PART, NON-STOCK PART  \nVX_PURCHASEREQUISITIONLINE.LineItemType string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "LineStatus": {
            "type": "string",
            "description": "PurchaseRequisitionLine.LineStatus\n\nOPEN, CLOSED  \nVX_PURCHASEREQUISITIONLINE.LineStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.LocationId\n\nReceiving location  \nVX_PURCHASEREQUISITIONLINE.LocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.ManufacturerId\n\nPart Manufacturer  \nVX_PURCHASEREQUISITIONLINE.ManufacturerId string 20 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "NeedByDateTime": {
            "type": "string",
            "description": "PurchaseRequisitionLine.NeedByDateTime\n\nWhen we want to receive the requisition  \nVX_PURCHASEREQUISITIONLINE.NeedByDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderDateTime": {
            "type": "string",
            "description": "PurchaseRequisitionLine.OrderDateTime\n\nWhen the requisition was opened  \nVX_PURCHASEREQUISITIONLINE.OrderDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderQty": {
            "type": "number",
            "description": "PurchaseRequisitionLine.OrderQty\n\nRequisition quantity  \nVX_PURCHASEREQUISITIONLINE.OrderQty decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PurchaseRequisitionLine.PartDesc\n\nPart description  \nVX_PURCHASEREQUISITIONLINE.PartDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PurchaseRequisitionLine.PartDescLanguage1\n\nPart description, primary language  \nVX_PURCHASEREQUISITIONLINE.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PurchaseRequisitionLine.PartDescLanguage2\n\nPart description, second language  \nVX_PURCHASEREQUISITIONLINE.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PurchaseRequisitionLine.PartDescLanguage3\n\nPart description, third language  \nVX_PURCHASEREQUISITIONLINE.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.PartId\n\nPart number (the one the user sees)  \nVX_PURCHASEREQUISITIONLINE.PartId string 30 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PurchaseRequisitionLine.PartSeq\n\nInternal part id sequence  \nVX_PURCHASEREQUISITIONLINE.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PurchaseRequisitionLine.ReceivedQty\n\nReceived quantity.  Negative if return.  \nVX_PURCHASEREQUISITIONLINE.ReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RequisitionDestinations": {
            "description": "PurchaseRequisitionLine.RequisitionDestinations\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseReqDestination"
          },
          "RequisitionId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.RequisitionId\n\nM5 part requisition ID  \nVX_PURCHASEREQUISITIONLINE.RequisitionId string  \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "RequisitionLineNumber": {
            "type": "integer",
            "description": "PurchaseRequisitionLine.RequisitionLineNumber\n\nPart requisition line  \nVX_PURCHASEREQUISITIONLINE.RequisitionLineNumber int  \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int32",
            "nullable": true
          },
          "SentDateTime": {
            "type": "string",
            "description": "PurchaseRequisitionLine.SentDateTime\n\nPurchase requisition sent date  \nVX_PURCHASEREQUISITIONLINE.SentDateTime DateTime 12 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "PurchaseRequisitionLine.Serialized\n\nIs the part serialized?  \nVX_PURCHASEREQUISITIONLINE.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "TaxPct": {
            "type": "number",
            "description": "PurchaseRequisitionLine.TaxPct\n\nCumulative tax percent related to the requisition line  \nVX_PURCHASEREQUISITIONLINE.TaxPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "PurchaseRequisitionLine.TaxSchemeId\n\nLine's tax scheme  \nVX_PURCHASEREQUISITIONLINE.TaxSchemeId string  \n\nSearchable: False ",
            "nullable": true
          },
          "ToBeReceivedQty": {
            "type": "number",
            "description": "PurchaseRequisitionLine.ToBeReceivedQty\n\nQuantity yet to be received  \nVX_PURCHASEREQUISITIONLINE.ToBeReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitOfOrder": {
            "type": "string",
            "description": "PurchaseRequisitionLine.UnitOfOrder\n\nUnit of order  \nVX_PURCHASEREQUISITIONLINE.UnitOfOrder string  \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "PurchaseRequisitionLine.UnitPrice\n\nUnit price  \nVX_PURCHASEREQUISITIONLINE.UnitPrice decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPurchaseReqDestination": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseReqDestination"
            }
          }
        }
      },
      "IPurchaseReqDestination": {
        "type": "object",
        "description": "PurchaseReqDestination",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AccountId": {
            "type": "string",
            "description": "PurchaseReqDestination.AccountId\n\nDirect account number, if any  \nVX_PURCHASEREQDESTINATION.AccountId string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "PurchaseReqDestination.AssetDesc\n\nEquipment Description  \nVX_PURCHASEREQDESTINATION.AssetDesc string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "PurchaseReqDestination.AssetId\n\nEquipment Number  \nVX_PURCHASEREQDESTINATION.AssetId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "AssetLicenseNumber": {
            "type": "string",
            "description": "PurchaseReqDestination.AssetLicenseNumber\n\nAsset's license number  \nVX_PURCHASEREQDESTINATION.AssetLicenseNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "PurchaseReqDestination.DepartmentDesc\n\nDepartment number, if any  \nVX_PURCHASEREQDESTINATION.DepartmentDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "PurchaseReqDestination.DepartmentId\n\nDepartment number, if any  \nVX_PURCHASEREQDESTINATION.DepartmentId string  \n\nSearchable: False ",
            "nullable": true
          },
          "Destination": {
            "type": "string",
            "description": "PurchaseReqDestination.Destination\n\nSTOCK, DEPARTMENT, INDIRECT ACCOUNT, DIRECT ACCOUNT, ASSET, WORK ORDER  \nVX_PURCHASEREQDESTINATION.Destination string  \n\nSearchable: False ",
            "nullable": true
          },
          "DestinationStatus": {
            "type": "string",
            "description": "PurchaseReqDestination.DestinationStatus\n\nCANCELED, ISSUED, RECEIVED, ORDERED, PENDING  \nVX_PURCHASEREQDESTINATION.DestinationStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectDesc": {
            "type": "string",
            "description": "PurchaseReqDestination.IndirectDesc\n\nDescription of indirect account number, if any  \nVX_PURCHASEREQDESTINATION.IndirectDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "PurchaseReqDestination.IndirectId\n\nIndirect account number, if any  \nVX_PURCHASEREQDESTINATION.IndirectId string  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseReqDestination.InternalId\n\npart_orders.part_orders_id  \nVX_PURCHASEREQDESTINATION.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IssuedQty": {
            "type": "number",
            "description": "PurchaseReqDestination.IssuedQty\n\nIssued quantity.  Negative if return.  \nVX_PURCHASEREQDESTINATION.IssuedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseReqDestination.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_PURCHASEREQDESTINATION.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LineItemType": {
            "type": "string",
            "description": "PurchaseReqDestination.LineItemType\n\nSTOCK PART, NON-STOCK PART  \nVX_PURCHASEREQDESTINATION.LineItemType string  \n\nSearchable: False ",
            "nullable": true
          },
          "LineStatus": {
            "type": "string",
            "description": "PurchaseReqDestination.LineStatus\n\nOPEN, CLOSED  \nVX_PURCHASEREQDESTINATION.LineStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseReqDestination.LocationId\n\nReceiving location  \nVX_PURCHASEREQDESTINATION.LocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "OrderQty": {
            "type": "number",
            "description": "PurchaseReqDestination.OrderQty\n\nOrder quantity  \nVX_PURCHASEREQDESTINATION.OrderQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "PurchaseReqDestination.PartDesc\n\nPart description  \nVX_PURCHASEREQDESTINATION.PartDesc string 200 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "PurchaseReqDestination.PartDescLanguage1\n\nPart description, primary language  \nVX_PURCHASEREQDESTINATION.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "PurchaseReqDestination.PartDescLanguage2\n\nPart description, second language  \nVX_PURCHASEREQDESTINATION.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "PurchaseReqDestination.PartDescLanguage3\n\nPart description, third language  \nVX_PURCHASEREQDESTINATION.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "PurchaseReqDestination.PartId\n\nPart number (the one the user sees)  \nVX_PURCHASEREQDESTINATION.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "PurchaseReqDestination.PartSeq\n\nInternal part id sequence  \nVX_PURCHASEREQDESTINATION.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ReceivedQty": {
            "type": "number",
            "description": "PurchaseReqDestination.ReceivedQty\n\nReceived quantity.  Negative if return.  \nVX_PURCHASEREQDESTINATION.ReceivedQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "RequisitionId": {
            "type": "string",
            "description": "PurchaseReqDestination.RequisitionId\n\nM5 part order ID  \nVX_PURCHASEREQDESTINATION.RequisitionId string  \n\nSearchable: False ",
            "nullable": true
          },
          "RequisitionInternalId": {
            "type": "integer",
            "description": "PurchaseReqDestination.RequisitionInternalId\n\npart_orders.req_id  \nVX_PURCHASEREQDESTINATION.RequisitionInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "RequisitionLineNumber": {
            "type": "integer",
            "description": "PurchaseReqDestination.RequisitionLineNumber\n\nPart requisition line  \nVX_PURCHASEREQDESTINATION.RequisitionLineNumber int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "PurchaseReqDestination.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_PURCHASEREQDESTINATION.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "PurchaseReqDestination.TaskId\n\nWac-System-System/Assembly code  \nVX_PURCHASEREQDESTINATION.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "PurchaseReqDestination.UnitPrice\n\nUnit price  \nVX_PURCHASEREQDESTINATION.UnitPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "PurchaseReqDestination.WorkOrderId\n\nWork Order Number   \nVX_PURCHASEREQDESTINATION.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIPurchaseRequisitionLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseRequisitionLine"
            }
          }
        }
      },
      "SaveResponseOfIPurchaseRequisitionLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseRequisitionLine"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseRequisitionLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseRequisitionLine"
          }
        }
      },
      "QueryResponseOfIPurchaseRequisitionLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseRequisitionLine"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPurchaseRequisitionLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseRequisitionLine"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseRequisitionLine"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseRequisitionLine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIPurchaseRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseRequisition"
                }
              }
            }
          }
        ]
      },
      "IPurchaseRequisition": {
        "type": "object",
        "description": "PurchaseRequisition",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "LocationId",
          "RequisitionId",
          "VendorId"
        ],
        "properties": {
          "Comments": {
            "type": "string",
            "description": "PurchaseRequisition.Comments\n\nM5 notes are one big note  \nVX_PURCHASEREQUISITION.Comments string 4000 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "CreateDateTime": {
            "type": "string",
            "description": "PurchaseRequisition.CreateDateTime\n\nWhen the record was created  \nVX_PURCHASEREQUISITION.CreateDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "PurchaseRequisition.InternalId\n\npart_req.req_id  \nVX_PURCHASEREQUISITION.InternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "IsQuoteAll": {
            "type": "boolean",
            "description": "PurchaseRequisition.IsQuoteAll\n\nQuote All Flag  \nVX_PURCHASEREQUISITION.IsQuoteAll bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "PurchaseRequisition.LastChangedDateTime\n\nWhen the purchase requisition header or a line (but not item) last changed  \nVX_PURCHASEREQUISITION.LastChangedDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastReceivedDateTime": {
            "type": "string",
            "description": "PurchaseRequisition.LastReceivedDateTime\n\nLast time there was a receipt  \nVX_PURCHASEREQUISITION.LastReceivedDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "PurchaseRequisition.LocationId\n\nRequisition's main location  \nVX_PURCHASEREQUISITION.LocationId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "RequestorName": {
            "type": "string",
            "description": "PurchaseRequisition.RequestorName\n\nRequestor Name  \nVX_PURCHASEREQUISITION.RequestorName string 40 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "RequisitionDateTime": {
            "type": "string",
            "description": "PurchaseRequisition.RequisitionDateTime\n\nWhen the requisition was opened  \nVX_PURCHASEREQUISITION.RequisitionDateTime DateTime  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequisitionId": {
            "type": "string",
            "description": "PurchaseRequisition.RequisitionId\n\nM5 purchase requisition ID  \nVX_PURCHASEREQUISITION.RequisitionId string  \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "RequisitionLines": {
            "description": "PurchaseRequisition.RequisitionLines\n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPurchaseRequisitionLine"
          },
          "SendNotesToVendor": {
            "type": "boolean",
            "description": "PurchaseRequisition.SendNotesToVendor\n\nSend Notes to Vendor Flag  \nVX_PURCHASEREQUISITION.SendNotesToVendor bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "PurchaseRequisition.Status\n\nCommon status:  REQUEST, INPROCESS, APPROVED, REJECTED  \nVX_PURCHASEREQUISITION.Status string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "PurchaseRequisition.TotalCost\n\nVX_PURCHASEREQUISITION.TotalCost decimal  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UseSpecialHandling": {
            "type": "boolean",
            "description": "PurchaseRequisition.UseSpecialHandling\n\nSpecial Handling Flag  \nVX_PURCHASEREQUISITION.UseSpecialHandling bool  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "PurchaseRequisition.VendorDesc\n\nVendor description  \nVX_PURCHASEREQUISITION.VendorDesc string  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "PurchaseRequisition.VendorId\n\nVendor used for requisition  \nVX_PURCHASEREQUISITION.VendorId string  \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "PurchaseRequisition.VendorInternalId\n\nVendor internal ID  \nVX_PURCHASEREQUISITION.VendorInternalId long  \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPurchaseRequisitionLine": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseRequisitionLine"
            }
          }
        }
      },
      "SaveBodyOfListOfIPurchaseRequisition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPurchaseRequisition"
            }
          }
        }
      },
      "QueryResponseOfIPurchaseRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPurchaseRequisition"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPurchaseRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseRequisition"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPurchaseRequisition"
              }
            }
          }
        ]
      },
      "ETagOfIPurchaseRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIPurchaseRequisition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPurchaseRequisition"
              }
            }
          }
        ]
      },
      "SaveBodyOfIPurchaseRequisition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPurchaseRequisition"
          }
        }
      },
      "SaveResponseOfIPushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IPushMessage"
              }
            }
          }
        ]
      },
      "IPushMessage": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ReceiverIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "Event": {
            "type": "string",
            "nullable": true
          },
          "IsRead": {
            "type": "boolean"
          },
          "IsDelivered": {
            "type": "boolean"
          },
          "Message": {
            "nullable": true
          },
          "MessageId": {
            "type": "string",
            "nullable": true
          },
          "SenderId": {
            "type": "string",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SaveBodyOfIPushMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IPushMessage"
          }
        }
      },
      "SaveResponseOfIEnumerableOfIPushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPushMessage"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfIEnumerableOfIPushMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPushMessage"
            }
          }
        }
      },
      "PushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ReceiverIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "Event": {
                "type": "string",
                "nullable": true
              },
              "Message": {
                "nullable": true
              },
              "SenderId": {
                "type": "string",
                "nullable": true
              },
              "ReceiverId": {
                "type": "string",
                "nullable": true
              },
              "Timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "MessageId": {
                "type": "string",
                "nullable": true
              },
              "Subject": {
                "type": "string",
                "nullable": true
              },
              "SenderName": {
                "type": "string",
                "nullable": true
              },
              "Link": {
                "type": "string",
                "nullable": true
              },
              "Notified": {
                "type": "string",
                "nullable": true
              },
              "IsDelivered": {
                "type": "boolean"
              },
              "Received": {
                "type": "string",
                "nullable": true
              },
              "IsRead": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "BaseModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_recordId": {
            "type": "string",
            "description": "Identifies an individual record in, for example, a POST body.\nThis property's value can be anything and a user of the API is expected to provide it in the body.",
            "nullable": true
          }
        }
      },
      "QueryResponseOfIPushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPushMessage"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIPushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPushMessage"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIPushMessage"
              }
            }
          }
        ]
      },
      "ETagOfIPushMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIRepairReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IRepairReason"
                }
              }
            }
          }
        ]
      },
      "IRepairReason": {
        "type": "object",
        "description": "RepairReason",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "RepairReason.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_REPAIRREASON.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "RepairReason.Description\n\nVisit Reason Description  \nVX_REPAIRREASON.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "RepairReason.DescriptionLanguage1\n\nVisit reason description, primary language  \nVX_REPAIRREASON.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "RepairReason.DescriptionLanguage2\n\nVisit reason description, second language  \nVX_REPAIRREASON.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "RepairReason.DescriptionLanguage3\n\nVisit reason description, third language  \nVX_REPAIRREASON.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "RepairReason.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_REPAIRREASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RepairReasonId": {
            "type": "string",
            "description": "RepairReason.RepairReasonId\n\nWork Order Visit Reason  \nVX_REPAIRREASON.RepairReasonId string 1 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIRepairReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIRepairReason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIRepairReason"
              }
            }
          }
        ]
      },
      "ETagOfIRepairReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIRepairReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IRepairReason"
              }
            }
          }
        ]
      },
      "SaveBodyOfIRepairReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IRepairReason"
          }
        }
      },
      "QueryResponseOfIReportingSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IReportingSource"
                }
              }
            }
          }
        ]
      },
      "IReportingSource": {
        "type": "object",
        "description": "ReportingSource",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "ReportingSource.Description\n\nReporting source description  \nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "ReportingSource.InternalId\n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "ReportingSourceId": {
            "type": "string",
            "description": "ReportingSource.ReportingSourceId\n\nReporting source  \nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIReportingSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIReportingSource"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIReportingSource"
              }
            }
          }
        ]
      },
      "ETagOfIReportingSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIReportingSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IReportingSource"
              }
            }
          }
        ]
      },
      "SaveBodyOfIReportingSource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IReportingSource"
          }
        }
      },
      "QueryResponseOfIReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IReturnReason"
                }
              }
            }
          }
        ]
      },
      "IReturnReason": {
        "type": "object",
        "description": "ReturnReason",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "ReturnReason.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_RETURNREASON.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "ReturnReason.Description\n\nReturn reason code description  \nVX_RETURNREASON.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "ReturnReason.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_RETURNREASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ReturnReasonId": {
            "type": "string",
            "description": "ReturnReason.ReturnReasonId\n\nReturn reason code  \nVX_RETURNREASON.ReturnReasonId string 4 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIReturnReason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIReturnReason"
              }
            }
          }
        ]
      },
      "ETagOfIReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIReturnReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IReturnReason"
              }
            }
          }
        ]
      },
      "SaveBodyOfIReturnReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IReturnReason"
          }
        }
      },
      "QueryResponseOfISeason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISeason"
                }
              }
            }
          }
        ]
      },
      "ISeason": {
        "type": "object",
        "description": "Season",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Season.Active\n\nIndicator if the code is active or disabled.  \nVX_SEASON.Active bool 1 \n\nSearchable: True ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Season.Description\n\nPart Season Code Description  \nVX_SEASON.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "Season.DescriptionLanguage1\n\nPart Season Code Description, primary language  \nVX_SEASON.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "Season.DescriptionLanguage2\n\nPart Season Code Description, second language  \nVX_SEASON.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "Season.DescriptionLanguage3\n\nPart Season Code Description, third language  \nVX_SEASON.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Season.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SEASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SeasonEndDate": {
            "type": "string",
            "description": "Season.SeasonEndDate\n\nSeason end date.  \nVX_SEASON.SeasonEndDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SeasonId": {
            "type": "string",
            "description": "Season.SeasonId\n\nPart Season Code  \nVX_SEASON.SeasonId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "SeasonStartDate": {
            "type": "string",
            "description": "Season.SeasonStartDate\n\nSeason start date.  \nVX_SEASON.SeasonStartDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfISeason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISeason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISeason"
              }
            }
          }
        ]
      },
      "ETagOfISeason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfISeason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISeason"
              }
            }
          }
        ]
      },
      "SaveBodyOfISeason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISeason"
          }
        }
      },
      "QueryResponseOfISerialInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISerialInventoryCountItem"
                }
              }
            }
          }
        ]
      },
      "ISerialInventoryCountItem": {
        "type": "object",
        "description": "SerialInventoryCountItem",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "LocationId",
          "PartId",
          "SerialInventoryCountId",
          "SerialNumber"
        ],
        "properties": {
          "BinDescription": {
            "type": "string",
            "description": "SerialInventoryCountItem.BinDescription\n\nBin description  \nVX_SERIALINVENTORYCOUNTITEM.BinDescription string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "BinId": {
            "type": "string",
            "description": "SerialInventoryCountItem.BinId\n\nBin Id  \nVX_SERIALINVENTORYCOUNTITEM.BinId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "SerialInventoryCountItem.Comments\n\nNotes  \nVX_SERIALINVENTORYCOUNTITEM.Comments string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CycleCountDate": {
            "type": "string",
            "description": "SerialInventoryCountItem.CycleCountDate\n\nCycle Count Date.  \nVX_SERIALINVENTORYCOUNTITEM.CycleCountDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CycleCountDays": {
            "type": "string",
            "description": "SerialInventoryCountItem.CycleCountDays\n\nCycle Count Days.  \nVX_SERIALINVENTORYCOUNTITEM.CycleCountDays string  \n\nSearchable: False ",
            "nullable": true
          },
          "CycleCountId": {
            "type": "string",
            "description": "SerialInventoryCountItem.CycleCountId\n\nCycle Count Code.  \nVX_SERIALINVENTORYCOUNTITEM.CycleCountId string  \n\nSearchable: False ",
            "nullable": true
          },
          "EffectiveDateTime": {
            "type": "string",
            "description": "SerialInventoryCountItem.EffectiveDateTime\n\nWhen the count is effective  \nVX_SERIALINVENTORYCOUNTITEM.EffectiveDateTime DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IsMissing": {
            "type": "boolean",
            "description": "SerialInventoryCountItem.IsMissing\n\nIs this serialized part missing?  \nVX_SERIALINVENTORYCOUNTITEM.IsMissing bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "IsVerified": {
            "type": "boolean",
            "description": "SerialInventoryCountItem.IsVerified\n\nIs this serialized part verified?  \nVX_SERIALINVENTORYCOUNTITEM.IsVerified bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "SerialInventoryCountItem.LastChangedDateTime\n\nWhen the count was updated  \nVX_SERIALINVENTORYCOUNTITEM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "SerialInventoryCountItem.LocationId\n\nUnique code for the Location  \nVX_SERIALINVENTORYCOUNTITEM.LocationId string 6 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "LocationName": {
            "type": "string",
            "description": "SerialInventoryCountItem.LocationName\n\nLocation's name  \nVX_SERIALINVENTORYCOUNTITEM.LocationName string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "SerialInventoryCountItem.ManufacturerId\n\nManufacturer  \nVX_SERIALINVENTORYCOUNTITEM.ManufacturerId string  \n\nSearchable: True ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "SerialInventoryCountItem.PartDescLanguage1\n\nPart description, primary language  \nVX_SERIALINVENTORYCOUNTITEM.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "SerialInventoryCountItem.PartDescLanguage2\n\nPart description, second language  \nVX_SERIALINVENTORYCOUNTITEM.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "SerialInventoryCountItem.PartDescLanguage3\n\nPart description, third language  \nVX_SERIALINVENTORYCOUNTITEM.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescription": {
            "type": "string",
            "description": "SerialInventoryCountItem.PartDescription\n\nDescription of the part  \nVX_SERIALINVENTORYCOUNTITEM.PartDescription string 60 \n\nSearchable: True ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "SerialInventoryCountItem.PartId\n\npart_id  \nVX_SERIALINVENTORYCOUNTITEM.PartId string  \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "SerialInventoryCountItem.PartSeq\n\nInternal part id sequence.  \nVX_SERIALINVENTORYCOUNTITEM.PartSeq int 10 \n\nSearchable: True ",
            "format": "int32",
            "nullable": true
          },
          "ProductCategoryDesc": {
            "type": "string",
            "description": "SerialInventoryCountItem.ProductCategoryDesc\n\nPart commodity description  \nVX_SERIALINVENTORYCOUNTITEM.ProductCategoryDesc string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "ProductCategoryId": {
            "type": "string",
            "description": "SerialInventoryCountItem.ProductCategoryId\n\nUnique code for the Commodity  \nVX_SERIALINVENTORYCOUNTITEM.ProductCategoryId string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "SeasonId": {
            "type": "string",
            "description": "SerialInventoryCountItem.SeasonId\n\nSeason Code.  \nVX_SERIALINVENTORYCOUNTITEM.SeasonId string  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialInventoryCountId": {
            "type": "string",
            "description": "SerialInventoryCountItem.SerialInventoryCountId\n\nSerial Inventory Count Id  \nVX_SERIALINVENTORYCOUNTITEM.SerialInventoryCountId string 7 \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "SerialInventoryCountInternalId": {
            "type": "integer",
            "description": "SerialInventoryCountItem.SerialInventoryCountInternalId\n\npart_serial_pi_cnt.serial_pi_id, used for more efficient joins  \nVX_SERIALINVENTORYCOUNTITEM.SerialInventoryCountInternalId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "SerialInventoryCountItem.SerialNumber\n\nSerial Number  \nVX_SERIALINVENTORYCOUNTITEM.SerialNumber string 32 \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "TaskSystemAssemblyId": {
            "type": "string",
            "description": "SerialInventoryCountItem.TaskSystemAssemblyId\n\nATA Task System Assembly Code.  \nVX_SERIALINVENTORYCOUNTITEM.TaskSystemAssemblyId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "SerialInventoryCountItem.TaskSystemId\n\nATA System Code, called 'TaskSystemId' to match other tables.  \nVX_SERIALINVENTORYCOUNTITEM.TaskSystemId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TotalValue": {
            "type": "number",
            "description": "SerialInventoryCountItem.TotalValue\n\nTotal Cost  \nVX_SERIALINVENTORYCOUNTITEM.TotalValue decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "SerialInventoryCountItem.UnitCost\n\nUnit Cost  \nVX_SERIALINVENTORYCOUNTITEM.UnitCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfISerialInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISerialInventoryCountItem"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISerialInventoryCountItem"
              }
            }
          }
        ]
      },
      "ETagOfISerialInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfISerialInventoryCountItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISerialInventoryCountItem"
              }
            }
          }
        ]
      },
      "SaveBodyOfISerialInventoryCountItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISerialInventoryCountItem"
          }
        }
      },
      "QueryResponseOfISerialInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISerialInventoryCount"
                }
              }
            }
          }
        ]
      },
      "ISerialInventoryCount": {
        "type": "object",
        "description": "SerialInventoryCount",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Items",
          "LocationId"
        ],
        "properties": {
          "CountedPartLines": {
            "type": "integer",
            "description": "SerialInventoryCount.CountedPartLines\n\nNumber of parts either verified or confirmed missing  \nVX_SERIALINVENTORYCOUNT.CountedPartLines int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "SerialInventoryCount.CreatedDateTime\n\nWhen the count was first created  \nVX_SERIALINVENTORYCOUNT.CreatedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "SerialInventoryCount.InternalId\n\nserial_pi_id  \nVX_SERIALINVENTORYCOUNT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "Items": {
            "description": "SerialInventoryCount.Items\n\nSerialnumber, partID, and unitcost are required. Manufacturer ID is sometimes required depending on the part.  \nSearchable: False \nRequired for: POST  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfISerialInventoryCountItem"
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "SerialInventoryCount.LastChangedDateTime\n\nWhen the count was updated  \nVX_SERIALINVENTORYCOUNT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "description": "SerialInventoryCount.LocationId\n\nUnique code for the Location  \nVX_SERIALINVENTORYCOUNT.LocationId string 6 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "LocationName": {
            "type": "string",
            "description": "SerialInventoryCount.LocationName\n\nLocation's name  \nVX_SERIALINVENTORYCOUNT.LocationName string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "SerialInventoryCountId": {
            "type": "string",
            "description": "SerialInventoryCount.SerialInventoryCountId\n\nCount ID that the user sees, serial_pi_id converted to string  \nVX_SERIALINVENTORYCOUNT.SerialInventoryCountId string 7 \n\nSearchable: True ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "SerialInventoryCount.Status\n\nInventory count status -- PENDING (Selected), OPEN,(In Progress), COMPLETED  \nVX_SERIALINVENTORYCOUNT.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalPartLines": {
            "type": "integer",
            "description": "SerialInventoryCount.TotalPartLines\n\nNumber of part lines in the count  \nVX_SERIALINVENTORYCOUNT.TotalPartLines int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ILookupItemOfISerialInventoryCountItem": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ISerialInventoryCountItem"
            }
          }
        }
      },
      "ODataQueryOptionsOfISerialInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISerialInventoryCount"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISerialInventoryCount"
              }
            }
          }
        ]
      },
      "ETagOfISerialInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfISerialInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISerialInventoryCount"
              }
            }
          }
        ]
      },
      "SaveBodyOfISerialInventoryCount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISerialInventoryCount"
          }
        }
      },
      "QueryResponseOfIServiceRequestPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceRequestPart"
                }
              }
            }
          }
        ]
      },
      "IServiceRequestPart": {
        "type": "object",
        "description": "ServiceRequestPart",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "Manufacturer",
          "Occurrence",
          "PartId",
          "ServiceRequestId"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "ServiceRequestPart.AssetId\n\nAsset/unit number.  \nVX_SERVICEREQUESTPART.AssetId string 30 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "ServiceRequestPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SERVICEREQUESTPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Manufacturer": {
            "type": "string",
            "description": "ServiceRequestPart.Manufacturer\n\nPart Manufacturer  \nVX_SERVICEREQUESTPART.Manufacturer string 20 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Occurrence": {
            "type": "integer",
            "description": "ServiceRequestPart.Occurrence\n\nWork Request Occurence  \nVX_SERVICEREQUESTPART.Occurrence int 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int32",
            "nullable": true
          },
          "PartCost": {
            "type": "number",
            "description": "ServiceRequestPart.PartCost\n\nPart Cost.  \nVX_SERVICEREQUESTPART.PartCost decimal 10 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "ServiceRequestPart.PartDesc\n\nPart Number Description  \nVX_SERVICEREQUESTPART.PartDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "ServiceRequestPart.PartId\n\nPart Number  \nVX_SERVICEREQUESTPART.PartId string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "ServiceRequestPart.PartSeq\n\nPart Id  \nVX_SERVICEREQUESTPART.PartSeq int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "QuantityNeeded": {
            "type": "integer",
            "description": "ServiceRequestPart.QuantityNeeded\n\nPart Quantity Needed  \nVX_SERVICEREQUESTPART.QuantityNeeded int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "QuantityOnHand": {
            "type": "integer",
            "description": "ServiceRequestPart.QuantityOnHand\n\nPart Quantity On Hand  \nVX_SERVICEREQUESTPART.QuantityOnHand int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "integer",
            "description": "ServiceRequestPart.ServiceRequestId\n\nWork Request Number  \nVX_SERVICEREQUESTPART.ServiceRequestId int 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIServiceRequestPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequestPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequestPart"
              }
            }
          }
        ]
      },
      "ETagOfIServiceRequestPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIServiceRequestPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IServiceRequestPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfIServiceRequestPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IServiceRequestPart"
          }
        }
      },
      "SaveResponseOfListOfIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceRequest"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIServiceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IServiceRequest"
            }
          }
        }
      },
      "SaveResponseOfIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IServiceRequest"
              }
            }
          }
        ]
      },
      "SaveBodyOfIServiceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IServiceRequest"
          }
        }
      },
      "SaveResponseOfListOfIServiceRequestTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceRequestTask"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIServiceRequestTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IServiceRequestTask"
            }
          }
        }
      },
      "QueryResponseOfIServiceRequestTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceRequestTask"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIServiceRequestTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequestTask"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceRequestTask"
              }
            }
          }
        ]
      },
      "ETagOfIServiceRequestTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIServiceRequestTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IServiceRequestTask"
              }
            }
          }
        ]
      },
      "SaveBodyOfIServiceRequestTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IServiceRequestTask"
          }
        }
      },
      "QueryResponseOfIServiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IServiceStatus"
                }
              }
            }
          }
        ]
      },
      "IServiceStatus": {
        "type": "object",
        "description": "ServiceStatus",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIServiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceStatus"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIServiceStatus"
              }
            }
          }
        ]
      },
      "ETagOfIServiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIServiceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IServiceStatus"
              }
            }
          }
        ]
      },
      "SaveBodyOfIServiceStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IServiceStatus"
          }
        }
      },
      "QueryResponseOfISetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISetting"
                }
              }
            }
          }
        ]
      },
      "ISetting": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean"
          },
          "BoolValue": {
            "type": "boolean",
            "nullable": true
          },
          "DataType": {
            "$ref": "#/components/schemas/SettingDataType"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "NumericValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "SettingName": {
            "type": "string",
            "nullable": true
          },
          "StringValue": {
            "type": "string",
            "nullable": true
          },
          "Changeable": {
            "type": "boolean"
          },
          "DefaultValue": {
            "type": "string",
            "nullable": true
          },
          "RuleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "SourceDesc": {
            "type": "string",
            "nullable": true
          },
          "TrueIsGood": {
            "type": "boolean"
          },
          "UserGroupId": {
            "type": "string",
            "nullable": true
          },
          "InternalID": {
            "type": "integer",
            "format": "int32"
          },
          "M5AuthorizationName": {
            "type": "string",
            "nullable": true
          },
          "M5ModFlag": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "M5FunctionNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SettingDataType": {
        "type": "integer",
        "description": "0 = BOOL\n1 = DATETIME\n2 = NUMERIC\n3 = INTEGER\n4 = STRING\n5 = UNKNOWN",
        "x-enumNames": [
          "BOOL",
          "DATETIME",
          "NUMERIC",
          "INTEGER",
          "STRING",
          "UNKNOWN"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "RuleType": {
        "type": "integer",
        "description": "0 = DEFAULT\n1 = LOCATION\n2 = GLOBAL\n3 = CUSTOM\n4 = USERGROUP\n5 = M5MODFLAG\n6 = M5AUTHORIZATION",
        "x-enumNames": [
          "DEFAULT",
          "LOCATION",
          "GLOBAL",
          "CUSTOM",
          "USERGROUP",
          "M5MODFLAG",
          "M5AUTHORIZATION"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ODataQueryOptionsOfISetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISetting"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISetting"
              }
            }
          }
        ]
      },
      "ETagOfISetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfISetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISetting"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfISetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ISetting"
            }
          }
        }
      },
      "SaveResponseOfISetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISetting"
              }
            }
          }
        ]
      },
      "SaveBodyOfISetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISetting"
          }
        }
      },
      "QueryResponseOfString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "QueryResponseOfIShift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IShift"
                }
              }
            }
          }
        ]
      },
      "IShift": {
        "type": "object",
        "description": "Shift",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "EndDateTime": {
            "type": "string",
            "description": "Shift.EndDateTime\n\nVX_SHIFT.EndDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Shift.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SHIFT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PlannableHours": {
            "type": "number",
            "description": "Shift.PlannableHours\n\nShift hours minus unpaid breaks  \nVX_SHIFT.PlannableHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ShiftDesc": {
            "type": "string",
            "description": "Shift.ShiftDesc\n\nShift code description  \nVX_SHIFT.ShiftDesc string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "ShiftId": {
            "type": "string",
            "description": "Shift.ShiftId\n\nShift code  \nVX_SHIFT.ShiftId int 6 \n\nSearchable: True ",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "description": "Shift.StartDateTime\n\nStart of the shift  \nVX_SHIFT.StartDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIShift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIShift"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIShift"
              }
            }
          }
        ]
      },
      "ETagOfIShift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIShift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IShift"
              }
            }
          }
        ]
      },
      "SaveBodyOfIShift": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IShift"
          }
        }
      },
      "QueryResponseOfISkillType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISkillType"
                }
              }
            }
          }
        ]
      },
      "ISkillType": {
        "type": "object",
        "description": "SkillType",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "SkillType.Active\n\nActive?  \nVX_SKILLTYPE.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "SkillType.Description\n\nResource type description  \nVX_SKILLTYPE.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "SkillType.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SKILLTYPE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "QualifiedPerson": {
            "type": "boolean",
            "description": "SkillType.QualifiedPerson\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SkillTypeId": {
            "type": "string",
            "description": "SkillType.SkillTypeId\n\nResource or skill type  \nVX_SKILLTYPE.SkillTypeId string 5 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfISkillType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISkillType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISkillType"
              }
            }
          }
        ]
      },
      "ETagOfISkillType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfISkillType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISkillType"
              }
            }
          }
        ]
      },
      "SaveBodyOfISkillType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISkillType"
          }
        }
      },
      "QueryResponseOfIStandardJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IStandardJob"
                }
              }
            }
          }
        ]
      },
      "IStandardJob": {
        "type": "object",
        "description": "StandardJob",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Tasks": {
            "description": "StandardJob.Tasks\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfITaskComponent"
          }
        }
      },
      "ILookupItemOfITaskComponent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ITaskComponent"
            }
          }
        }
      },
      "ITaskComponent": {
        "type": "object",
        "description": "TaskComponent",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaskComponent.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_TASKCOMPONENT.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaskComponent.Description\n\nAssembly Code Description  \nVX_TASKCOMPONENT.Description string 45 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "TaskComponent.DescriptionLanguage1\n\nAssembly Code Description, primary language  \nVX_TASKCOMPONENT.DescriptionLanguage1 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "TaskComponent.DescriptionLanguage2\n\nAssembly Code Description, second language  \nVX_TASKCOMPONENT.DescriptionLanguage2 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "TaskComponent.DescriptionLanguage3\n\nAssembly Code Description, third language  \nVX_TASKCOMPONENT.DescriptionLanguage3 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaskComponent.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TASKCOMPONENT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProcedureInfo": {
            "type": "string",
            "description": "TaskComponent.ProcedureInfo\n\nDummy column because it's searchable.  \nVX_TASKCOMPONENT.ProcedureInfo string  \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsAllAssetCategories": {
            "type": "boolean",
            "description": "TaskComponent.SupportsAllAssetCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "TaskComponent.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllProductCategories": {
            "type": "boolean",
            "description": "TaskComponent.SupportsAllProductCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllTaskStatuses": {
            "type": "boolean",
            "description": "TaskComponent.SupportsAllTaskStatuses\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "TaskComponentId": {
            "type": "string",
            "description": "TaskComponent.TaskComponentId\n\nAssembly Code  \nVX_TASKCOMPONENT.TaskComponentId string 3 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "TaskComponent.TaskSystemId\n\nSystem code  \nVX_TASKCOMPONENT.TaskSystemId string 3 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIStandardJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIStandardJob"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIStandardJob"
              }
            }
          }
        ]
      },
      "ETagOfIStandardJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIStandardJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IStandardJob"
              }
            }
          }
        ]
      },
      "SaveBodyOfIStandardJob": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IStandardJob"
          }
        }
      },
      "QueryResponseOfISymptom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ISymptom"
                }
              }
            }
          }
        ]
      },
      "ISymptom": {
        "type": "object",
        "description": "Symptom",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "Symptom.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_SYMPTOM.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "Symptom.Comments\n\nLong description  \nVX_SYMPTOM.Comments string 400 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Symptom.Description\n\nSymptom description  \nVX_SYMPTOM.Description string 40 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "Symptom.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_SYMPTOM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SymptomId": {
            "type": "string",
            "description": "Symptom.SymptomId\n\nSymptom code  \nVX_SYMPTOM.SymptomId string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "Symptom.TaskId\n\nDefault job code for jobs stemming from the symptom  \nVX_SYMPTOM.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskReasonId": {
            "type": "string",
            "description": "Symptom.TaskReasonId\n\nDefault reason for jobs stemming from this symptom  \nVX_SYMPTOM.TaskReasonId string 1 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfISymptom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISymptom"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfISymptom"
              }
            }
          }
        ]
      },
      "ETagOfISymptom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfISymptom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ISymptom"
              }
            }
          }
        ]
      },
      "SaveBodyOfISymptom": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ISymptom"
          }
        }
      },
      "QueryResponseOfITaskCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaskCode"
                }
              }
            }
          }
        ]
      },
      "ITaskCode": {
        "type": "object",
        "description": "TaskCode",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaskCode.Active\n\nIndicator if the code is active or disabled.  \nVX_TASKCODE.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaskCode.Description\n\nJob description  \nVX_TASKCODE.Description string  \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaskCode.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TASKCODE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SupportsAllAssetCategories": {
            "type": "boolean",
            "description": "TaskCode.SupportsAllAssetCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "TaskCode.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllProductCategories": {
            "type": "boolean",
            "description": "TaskCode.SupportsAllProductCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllTaskStatuses": {
            "type": "boolean",
            "description": "TaskCode.SupportsAllTaskStatuses\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "TaskAssemblyId": {
            "type": "string",
            "description": "TaskCode.TaskAssemblyId\n\nAssembly of the job code, if any.  \nVX_TASKCODE.TaskAssemblyId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "TaskCode.TaskId\n\nJob code  \nVX_TASKCODE.TaskId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "TaskCode.TaskSystemId\n\nSystem code  \nVX_TASKCODE.TaskSystemId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkAccomplishedCodeId": {
            "type": "string",
            "description": "TaskCode.WorkAccomplishedCodeId\n\nWork accomplished code  \nVX_TASKCODE.WorkAccomplishedCodeId string 3 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITaskCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskCode"
              }
            }
          }
        ]
      },
      "ETagOfITaskCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaskCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaskCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaskCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaskCode"
          }
        }
      },
      "QueryResponseOfITaskComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaskComponent"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfITaskComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskComponent"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskComponent"
              }
            }
          }
        ]
      },
      "ETagOfITaskComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaskComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaskComponent"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaskComponent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaskComponent"
          }
        }
      },
      "QueryResponseOfITaskReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaskReason"
                }
              }
            }
          }
        ]
      },
      "ITaskReason": {
        "type": "object",
        "description": "TaskReason",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaskReason.Active\n\nFlag denoting if the job reason code is active.  \nVX_TASKREASON.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaskReason.Description\n\nJob reason description  \nVX_TASKREASON.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "TaskReason.DescriptionLanguage1\n\nJob reason description, primary language  \nVX_TASKREASON.DescriptionLanguage1 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "TaskReason.DescriptionLanguage2\n\nJob reason description, second language  \nVX_TASKREASON.DescriptionLanguage2 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "TaskReason.DescriptionLanguage3\n\nJob reason description, third language  \nVX_TASKREASON.DescriptionLanguage3 string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaskReason.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TASKREASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskReasonId": {
            "type": "string",
            "description": "TaskReason.TaskReasonId\n\nJob Reason Code  \nVX_TASKREASON.TaskReasonId string 1 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITaskReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskReason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskReason"
              }
            }
          }
        ]
      },
      "ETagOfITaskReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaskReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaskReason"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaskReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaskReason"
          }
        }
      },
      "QueryResponseOfITaskStatusCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaskStatusCode"
                }
              }
            }
          }
        ]
      },
      "ITaskStatusCode": {
        "type": "object",
        "description": "TaskStatusCode",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaskStatusCode.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_TASKSTATUSCODES.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "CloseWOAllowed": {
            "type": "boolean",
            "description": "TaskStatusCode.CloseWOAllowed\n\nCan a work order be closed if a job status is this?  If this is true and a job signature is required, it is asked for  \nVX_TASKSTATUSCODES.CloseWOAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaskStatusCode.Description\n\nJob Status code description.  \nVX_TASKSTATUSCODES.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "IsFinalStatus": {
            "type": "boolean",
            "description": "TaskStatusCode.IsFinalStatus\n\nEquivalent to CloseWOAllowed.  \nVX_TASKSTATUSCODES.IsFinalStatus bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaskStatusCode.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TASKSTATUSCODES.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PartsAllowed": {
            "type": "boolean",
            "description": "TaskStatusCode.PartsAllowed\n\nForced true in view  \nVX_TASKSTATUSCODES.PartsAllowed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireCauseNote": {
            "type": "boolean",
            "description": "TaskStatusCode.RequireCauseNote\n\nIs the user required to enter cause note. Y or null.  \nVX_TASKSTATUSCODES.RequireCauseNote bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequireComplaintNote": {
            "type": "boolean",
            "description": "TaskStatusCode.RequireComplaintNote\n\nIs the user required to enter complaint note. Y or null.  \nVX_TASKSTATUSCODES.RequireComplaintNote bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequireCorrectionNote": {
            "type": "boolean",
            "description": "TaskStatusCode.RequireCorrectionNote\n\nIs the user required to enter correction note. Y or null.  \nVX_TASKSTATUSCODES.RequireCorrectionNote bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "TaskStatusCode.TaskStatusId\n\nJob status  \nVX_TASKSTATUSCODES.TaskStatusId string 3 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITaskStatusCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskStatusCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskStatusCode"
              }
            }
          }
        ]
      },
      "ETagOfITaskStatusCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaskStatusCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaskStatusCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaskStatusCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaskStatusCode"
          }
        }
      },
      "QueryResponseOfITaskSystem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaskSystem"
                }
              }
            }
          }
        ]
      },
      "ITaskSystem": {
        "type": "object",
        "description": "TaskSystem",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaskSystem.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_TASKSYSTEM.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AssemblyCount": {
            "type": "integer",
            "description": "TaskSystem.AssemblyCount\n\nCount of assemblies (components) under this system  \nVX_TASKSYSTEM.AssemblyCount int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaskSystem.Description\n\nSystem Code Description  \nVX_TASKSYSTEM.Description string 45 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "TaskSystem.DescriptionLanguage1\n\nSystem Code Description, primary language  \nVX_TASKSYSTEM.DescriptionLanguage1 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "TaskSystem.DescriptionLanguage2\n\nSystem Code Description, second language  \nVX_TASKSYSTEM.DescriptionLanguage2 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "TaskSystem.DescriptionLanguage3\n\nSystem Code Description, third language  \nVX_TASKSYSTEM.DescriptionLanguage3 string 45 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaskSystem.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TASKSYSTEM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProcedureInfo": {
            "type": "string",
            "description": "TaskSystem.ProcedureInfo\n\nDummy column needed because it's searchable  \nVX_TASKSYSTEM.ProcedureInfo string  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireTaskAssembly": {
            "type": "boolean",
            "description": "TaskSystem.RequireTaskAssembly\n\nDoes the system require an assembly?  \nVX_TASKSYSTEM.RequireTaskAssembly bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "SupportsAllAssetCategories": {
            "type": "boolean",
            "description": "TaskSystem.SupportsAllAssetCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllLocations": {
            "type": "boolean",
            "description": "TaskSystem.SupportsAllLocations\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllProductCategories": {
            "type": "boolean",
            "description": "TaskSystem.SupportsAllProductCategories\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "SupportsAllTaskStatuses": {
            "type": "boolean",
            "description": "TaskSystem.SupportsAllTaskStatuses\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "TaskSystemId": {
            "type": "string",
            "description": "TaskSystem.TaskSystemId\n\nSystem Code  \nVX_TASKSYSTEM.TaskSystemId string 3 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITaskSystem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskSystem"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaskSystem"
              }
            }
          }
        ]
      },
      "ETagOfITaskSystem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaskSystem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaskSystem"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaskSystem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaskSystem"
          }
        }
      },
      "QueryResponseOfITaxScheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITaxScheme"
                }
              }
            }
          }
        ]
      },
      "ITaxScheme": {
        "type": "object",
        "description": "TaxScheme",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TaxScheme.Active\n\nIs the tax scheme active?  \nVX_TAXSCHEME.Active string  \n\nSearchable: False ",
            "nullable": true
          },
          "ApplyTo": {
            "type": "string",
            "description": "TaxScheme.ApplyTo\n\nDIESEL, GASOLINE, LABOR ISSUE, LEASE, MISCELLANEOUS, PART ISSUE, PART RECEIPT  \nVX_TAXSCHEME.ApplyTo string  \n\nSearchable: False ",
            "nullable": true
          },
          "CumulativeTaxPct": {
            "type": "number",
            "description": "TaxScheme.CumulativeTaxPct\n\nCumulative tax percentage for taxes where the rate is added to the base cost  \nVX_TAXSCHEME.CumulativeTaxPct decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TaxScheme.Description\n\nTax scheme description  \nVX_TAXSCHEME.Description string  \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TaxScheme.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TAXSCHEME.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastEffectiveDateTime": {
            "type": "string",
            "description": "TaxScheme.LastEffectiveDateTime\n\nMost recent rate effective date  \nVX_TAXSCHEME.LastEffectiveDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaxSchemeId": {
            "type": "string",
            "description": "TaxScheme.TaxSchemeId\n\nTax scheme ID  \nVX_TAXSCHEME.TaxSchemeId string  \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITaxScheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaxScheme"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITaxScheme"
              }
            }
          }
        ]
      },
      "ETagOfITaxScheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITaxScheme": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITaxScheme"
              }
            }
          }
        ]
      },
      "SaveBodyOfITaxScheme": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITaxScheme"
          }
        }
      },
      "QueryResponseOfITechSpecPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITechSpecPartUsed"
                }
              }
            }
          }
        ]
      },
      "ITechSpecPartUsed": {
        "type": "object",
        "description": "TechSpecPartUsed",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfITechSpecPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecPartUsed"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecPartUsed"
              }
            }
          }
        ]
      },
      "ETagOfITechSpecPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITechSpecPartUsed": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITechSpecPartUsed"
              }
            }
          }
        ]
      },
      "SaveBodyOfITechSpecPartUsed": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITechSpecPartUsed"
          }
        }
      },
      "QueryResponseOfITechSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITechSpec"
                }
              }
            }
          }
        ]
      },
      "ITechSpec": {
        "type": "object",
        "description": "TechSpec",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TechSpec.Active\n\nVX_TECHSPEC.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetCategoryId": {
            "type": "string",
            "description": "TechSpec.AssetCategoryId\n\nCategory  \nVX_TECHSPEC.AssetCategoryId string 13 \n\nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "TechSpec.Attachments\n\nTech spec attachments  \nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "Description": {
            "type": "string",
            "description": "TechSpec.Description\n\nEquipment type (spec) description  \nVX_TECHSPEC.Description string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "ExpectedLifeMonths": {
            "type": "integer",
            "description": "TechSpec.ExpectedLifeMonths\n\nExpected life in months  \nVX_ASSET.ExpectedLifeMonths int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ExpectedLifeUsage1": {
            "type": "integer",
            "description": "TechSpec.ExpectedLifeUsage1\n\nExpected life usage for meter 1  \nVX_ASSET.ExpectedLifeUsage1 long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "GHGFuelClass": {
            "type": "string",
            "description": "TechSpec.GHGFuelClass\n\nGreenhouse gas fuel class  \nVX_TECHSPEC.GHGFuelClass string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "GHGFuelEfficiencyCity": {
            "type": "number",
            "description": "TechSpec.GHGFuelEfficiencyCity\n\nFuel efficiency, city  \nVX_TECHSPEC.GHGFuelEfficiencyCity decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "GHGFuelEfficiencyCombined": {
            "type": "number",
            "description": "TechSpec.GHGFuelEfficiencyCombined\n\nFuel efficiency, combined  \nVX_TECHSPEC.GHGFuelEfficiencyCombined decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "GHGFuelEfficiencyHighway": {
            "type": "number",
            "description": "TechSpec.GHGFuelEfficiencyHighway\n\nFuel efficiency, highway  \nVX_TECHSPEC.GHGFuelEfficiencyHighway decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "GHGOnRoad": {
            "type": "boolean",
            "description": "TechSpec.GHGOnRoad\n\nGreenhouse gas: On road?  \nVX_TECHSPEC.GHGOnRoad bool  \n\nSearchable: False ",
            "nullable": true
          },
          "GHGVehicleType": {
            "type": "string",
            "description": "TechSpec.GHGVehicleType\n\nGreenhouse gas vehicle type  \nVX_TECHSPEC.GHGVehicleType string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TechSpec.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TECHSPEC.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "TechSpec.ManufacturerId\n\nM5 make (not manufacturer!)  \nVX_TECHSPEC.ManufacturerId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ModelId": {
            "type": "string",
            "description": "TechSpec.ModelId\n\nModel  \nVX_TECHSPEC.ModelId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "TechSpecId": {
            "type": "string",
            "description": "TechSpec.TechSpecId\n\nEquipment type (M5 tech spec)  \nVX_TECHSPEC.TechSpecId string 13 \n\nSearchable: True ",
            "nullable": true
          },
          "WeightGross": {
            "type": "integer",
            "description": "TechSpec.WeightGross\n\nGross vehicle weight  \nVX_TECHSPEC.WeightGross int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "TechSpec.Year\n\nModel year  \nVX_TECHSPEC.Year int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITechSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpec"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpec"
              }
            }
          }
        ]
      },
      "ETagOfITechSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITechSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITechSpec"
              }
            }
          }
        ]
      },
      "SaveBodyOfITechSpec": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITechSpec"
          }
        }
      },
      "QueryResponseOfITechSpecStandardPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITechSpecStandardPart"
                }
              }
            }
          }
        ]
      },
      "ITechSpecStandardPart": {
        "type": "object",
        "description": "TechSpecStandardPart",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "LastChangedDateTime": {
            "type": "string",
            "description": "TechSpecStandardPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TECHSPECSTANDARDPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "TechSpecStandardPart.ManufacturerId\n\nPart's manufacturer  \nVX_TECHSPECSTANDARDPART.ManufacturerId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "TechSpecStandardPart.PartDesc\n\nPart Description  \nVX_TECHSPECSTANDARDPART.PartDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "TechSpecStandardPart.PartDescLanguage1\n\nPart description, primary language  \nVX_TECHSPECSTANDARDPART.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "TechSpecStandardPart.PartDescLanguage2\n\nPart description, second language  \nVX_TECHSPECSTANDARDPART.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "TechSpecStandardPart.PartDescLanguage3\n\nPart description, third language  \nVX_TECHSPECSTANDARDPART.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "TechSpecStandardPart.PartId\n\nPart Number  \nVX_TECHSPECSTANDARDPART.PartId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartSeq": {
            "type": "integer",
            "description": "TechSpecStandardPart.PartSeq\n\nInternal part_id  \nVX_TECHSPECSTANDARDPART.PartSeq int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PercentIssued": {
            "type": "number",
            "description": "TechSpecStandardPart.PercentIssued\n\nM5 Forced to: null \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Qty": {
            "type": "number",
            "description": "TechSpecStandardPart.Qty\n\nQuantity  \nVX_TECHSPECSTANDARDPART.Qty double 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "StandardsClassId": {
            "type": "string",
            "description": "TechSpecStandardPart.StandardsClassId\n\nSpec Number  \nVX_TECHSPECSTANDARDPART.StandardsClassId string 13 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "TechSpecStandardPart.TaskDesc\n\nJob description  \nVX_TECHSPECSTANDARDPART.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "TechSpecStandardPart.TaskId\n\nJob Code  \nVX_TECHSPECSTANDARDPART.TaskId string 12 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITechSpecStandardPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecStandardPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecStandardPart"
              }
            }
          }
        ]
      },
      "ETagOfITechSpecStandardPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITechSpecStandardPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITechSpecStandardPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfITechSpecStandardPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITechSpecStandardPart"
          }
        }
      },
      "QueryResponseOfITechSpecStandardTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITechSpecStandardTask"
                }
              }
            }
          }
        ]
      },
      "ITechSpecStandardTask": {
        "type": "object",
        "description": "TechSpecStandardTask",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TechSpecStandardTask.Active\n\nCustom view reviews code restrictions, only valid jobs are returned.  Forcing active for all.  \nVX_TECHSPECSTANDARDTASK.Active bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ChecklistTasks": {
            "description": "TechSpecStandardTask.ChecklistTasks\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIPmChecklistItem"
          },
          "LaborHours": {
            "type": "number",
            "description": "TechSpecStandardTask.LaborHours\n\nIndustry standard labor hours.  \nVX_TECHSPECSTANDARDTASK.LaborHours decimal 12 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TechSpecStandardTask.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TECHSPECSTANDARDTASK.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "RequiresPosition": {
            "type": "boolean",
            "description": "TechSpecStandardTask.RequiresPosition\n\nCheck flag 5016 to use position code  \nVX_TECHSPECSTANDARDTASK.RequiresPosition bool  \n\nSearchable: False ",
            "nullable": true
          },
          "StandardsClassId": {
            "type": "string",
            "description": "TechSpecStandardTask.StandardsClassId\n\nEquipment Technical Specification number.  \nVX_TECHSPECSTANDARDTASK.StandardsClassId string 13 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "TechSpecStandardTask.TaskDesc\n\nStandard Job description, will need to be adjusted for multi-language  \nVX_TECHSPECSTANDARDTASK.TaskDesc string 100 \n\nSearchable: True ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "TechSpecStandardTask.TaskId\n\nStandard Job   \nVX_TECHSPECSTANDARDTASK.TaskId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIPmChecklistItem": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPmChecklistItem"
            }
          }
        }
      },
      "ODataQueryOptionsOfITechSpecStandardTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecStandardTask"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITechSpecStandardTask"
              }
            }
          }
        ]
      },
      "ETagOfITechSpecStandardTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITechSpecStandardTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITechSpecStandardTask"
              }
            }
          }
        ]
      },
      "SaveBodyOfITechSpecStandardTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITechSpecStandardTask"
          }
        }
      },
      "QueryResponseOfITestResultLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITestResultLineItem"
                }
              }
            }
          }
        ]
      },
      "ITestResultLineItem": {
        "type": "object",
        "description": "TestResultLineItem",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AllowDateAndTime",
          "InternalIndex",
          "TestId"
        ],
        "properties": {
          "AllowAttachment": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowAttachment\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowComment": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowComment\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowCondition": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowCondition\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "AllowConditionScore": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowConditionScore\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "AllowDate": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowDate\n\nCan the user enter a date?  \nVX_TESTRESULTLINEITEM.AllowDate bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowDateAndTime": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowDateAndTime\n\nResult is datetime value  \nVX_TESTRESULTLINEITEM.AllowDateAndTime bool  \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "AllowFile": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowFile\n\nThis allows the user to always take a picture.  \nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowM5Data": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowM5Data\n\nAllow M5 data entry  \nVX_TESTRESULTLINEITEM.AllowM5Data bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowNotPerformed": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowNotPerformed\n\nCan the user select the N/A option?  \nVX_TESTRESULTLINEITEM.AllowNotPerformed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowNumericAdjusted": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowNumericAdjusted\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "AllowNumericFound": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowNumericFound\n\nResutlt is a number  \nVX_TESTRESULTLINEITEM.AllowNumericFound bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowQualitative": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowQualitative\n\nAllow character entry  \nVX_TESTRESULTLINEITEM.AllowQualitative bool  \n\nSearchable: False ",
            "nullable": true
          },
          "AllowResult": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowResult\n\nM5 Forced to: true \nSearchable: False ",
            "nullable": true
          },
          "AllowYN": {
            "type": "boolean",
            "description": "TestResultLineItem.AllowYN\n\nShow YES and NO as choices?  \nVX_TESTRESULTLINEITEM.AllowYN bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Attachments": {
            "description": "TestResultLineItem.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "Comments": {
            "type": "string",
            "description": "TestResultLineItem.Comments\n\nNotes for the item tested  \nVX_TESTRESULTLINEITEM.Comments string 4000 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveEstCost": {
            "type": "number",
            "description": "TestResultLineItem.CorrectiveEstCost\n\nCorrective estimated cost for work request   \nVX_TESTRESULTLINEITEM.CorrectiveEstCost decimal 12 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "CorrectiveRepairReasonId": {
            "type": "string",
            "description": "TestResultLineItem.CorrectiveRepairReasonId\n\nJob Reason needed to create work request for item failure  \nVX_TESTRESULTLINEITEM.CorrectiveRepairReasonId string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveTaskId": {
            "type": "string",
            "description": "TestResultLineItem.CorrectiveTaskId\n\nCorrective job created for item failure on the work request  \nVX_TESTRESULTLINEITEM.CorrectiveTaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveTaskLocationId": {
            "type": "string",
            "description": "TestResultLineItem.CorrectiveTaskLocationId\n\nCorrective job location to create work request for item failure  \nVX_TESTRESULTLINEITEM.CorrectiveTaskLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "CorrectiveTaskPriorityId": {
            "type": "integer",
            "description": "TestResultLineItem.CorrectiveTaskPriorityId\n\nCorrective job priority needed to create work request for item failure  \nVX_TESTRESULTLINEITEM.CorrectiveTaskPriorityId int 5 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "DateValue": {
            "type": "string",
            "description": "TestResultLineItem.DateValue\n\nDate value, no time  \nVX_TESTRESULTLINEITEM.DateValue DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DateValueFound": {
            "type": "boolean",
            "description": "TestResultLineItem.DateValueFound\n\nDoes the line have a date (no time) on it?  \nVX_TESTRESULTLINEITEM.DateValueFound bool  \n\nSearchable: False ",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "integer",
            "description": "TestResultLineItem.DisplayOrder\n\nSequence of the labels  \nVX_TESTRESULTLINEITEM.DisplayOrder int 3 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ExternalIdNumber": {
            "type": "string",
            "description": "TestResultLineItem.ExternalIdNumber\n\nCustomer's ID number  \nVX_TESTRESULTLINEITEM.ExternalIdNumber string  \n\nSearchable: False ",
            "nullable": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "TestResultLineItem.HasAttachments\n\nTrue if the line item has attachments  \nVX_TESTRESULTLINEITEM.HasAttachments bool  \n\nSearchable: False ",
            "nullable": true
          },
          "IdNumber": {
            "type": "string",
            "description": "TestResultLineItem.IdNumber\n\nID number for safety related inspections.  \nVX_TESTRESULTLINEITEM.IdNumber string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "InfoOnly": {
            "type": "boolean",
            "description": "TestResultLineItem.InfoOnly\n\nInformation Only  \nVX_TESTRESULTLINEITEM.InfoOnly bool  \n\nSearchable: False ",
            "nullable": true
          },
          "InternalIndex": {
            "type": "integer",
            "description": "TestResultLineItem.InternalIndex\n\nDisplay order, starting over with each subsection  \nVX_TESTRESULTLINEITEM.InternalIndex int  \n\nSearchable: False \nRequired for: PUT  ",
            "format": "int32",
            "nullable": true
          },
          "LabelText": {
            "type": "string",
            "description": "TestResultLineItem.LabelText\n\nTest element label  \nVX_TESTRESULTLINEITEM.LabelText string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TestResultLineItem.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TESTRESULTLINEITEM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "M5ColumnName": {
            "type": "string",
            "description": "TestResultLineItem.M5ColumnName\n\nM5 column name  \nVX_TESTRESULTLINEITEM.M5ColumnName string  \n\nSearchable: False ",
            "nullable": true
          },
          "M5TableName": {
            "type": "string",
            "description": "TestResultLineItem.M5TableName\n\nM5 table name  \nVX_TESTRESULTLINEITEM.M5TableName string  \n\nSearchable: False ",
            "nullable": true
          },
          "Monitored": {
            "type": "boolean",
            "description": "TestResultLineItem.Monitored\n\nIs this test line in monitored status?  \nVX_TESTRESULTLINEITEM.Monitored bool  \n\nSearchable: False ",
            "nullable": true
          },
          "NotPerformed": {
            "type": "boolean",
            "description": "TestResultLineItem.NotPerformed\n\nWas this \"N/A\"?  \nVX_TESTRESULTLINEITEM.NotPerformed bool  \n\nSearchable: False ",
            "nullable": true
          },
          "NumericValueFound": {
            "type": "number",
            "description": "TestResultLineItem.NumericValueFound\n\nResult if the datatype is 'NUMERIC'  \nVX_TESTRESULTLINEITEM.NumericValueFound decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "NumericValueMax": {
            "type": "number",
            "description": "TestResultLineItem.NumericValueMax\n\nAllowable Maximum  \nVX_TESTRESULTLINEITEM.NumericValueMax decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "NumericValueMin": {
            "type": "number",
            "description": "TestResultLineItem.NumericValueMin\n\nAllowable Minimum  \nVX_TESTRESULTLINEITEM.NumericValueMin decimal 20 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ObservationDescription": {
            "type": "string",
            "description": "TestResultLineItem.ObservationDescription\n\nTest label description  \nVX_TESTRESULTLINEITEM.ObservationDescription string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "ObservationId": {
            "type": "string",
            "description": "TestResultLineItem.ObservationId\n\nTest element label  \nVX_TESTRESULTLINEITEM.ObservationId string 50 \n\nSearchable: False ",
            "nullable": true
          },
          "Occurrence": {
            "type": "integer",
            "description": "TestResultLineItem.Occurrence\n\nWork Request occurrence number needed to find the proper record  \nVX_TESTRESULTLINEITEM.Occurrence int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "OverrideJob": {
            "type": "boolean",
            "description": "TestResultLineItem.OverrideJob\n\nOverride Flag  \nVX_TESTRESULTLINEITEM.OverrideJob bool  \n\nSearchable: False ",
            "nullable": true
          },
          "QualitativeValue": {
            "type": "string",
            "description": "TestResultLineItem.QualitativeValue\n\nCharacter value entered for test item  \nVX_TESTRESULTLINEITEM.QualitativeValue string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "QualitativeValueMax": {
            "type": "string",
            "description": "TestResultLineItem.QualitativeValueMax\n\nQualitativeValue cannot be large than this value to be a pass  \nVX_TESTRESULTLINEITEM.QualitativeValueMax string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "QualitativeValueMin": {
            "type": "string",
            "description": "TestResultLineItem.QualitativeValueMin\n\nQualitativeValue must be at least this value to be a pass  \nVX_TESTRESULTLINEITEM.QualitativeValueMin string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairTaskId": {
            "type": "string",
            "description": "TestResultLineItem.RepairTaskId\n\nJob test is performed on  \nVX_TESTRESULTLINEITEM.RepairTaskId string  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireAttachment": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireAttachment\n\nFlag to show whether attachment is required.  \nVX_TESTRESULTLINEITEM.RequireAttachment bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequireComment": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireComment\n\nIs test result line item note required?  \nVX_TESTRESULTLINEITEM.RequireComment bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireCondition": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireCondition\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireConditionScore": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireConditionScore\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireDate": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireDate\n\nIs a date entry required?  \nVX_TESTRESULTLINEITEM.RequireDate bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireDateAndTime": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireDateAndTime\n\nRequire date time entry  \nVX_TESTRESULTLINEITEM.RequireDateAndTime bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireEntry": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireEntry\n\nFlag showing whether entry is required.  \nVX_TESTRESULTLINEITEM.RequireEntry bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "RequireFailComment": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireFailComment\n\nIs test result line item fail note required?  \nVX_TESTRESULTLINEITEM.RequireFailComment bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireFile": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireFile\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireM5Data": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireM5Data\n\nRequire M5 data  \nVX_TESTRESULTLINEITEM.RequireM5Data bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireNumericAdjusted": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireNumericAdjusted\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireNumericFound": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireNumericFound\n\nRequire numeric found  \nVX_TESTRESULTLINEITEM.RequireNumericFound bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireQualitative": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireQualitative\n\nRequire Y/N  \nVX_TESTRESULTLINEITEM.RequireQualitative bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireResult": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireResult\n\nM5 doesn't let the user pick a result of pass/fail/corrected  \nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireYN": {
            "type": "boolean",
            "description": "TestResultLineItem.RequireYN\n\nDoes the user have to give a Y or N?  \nVX_TESTRESULTLINEITEM.RequireYN bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Result": {
            "type": "string",
            "description": "TestResultLineItem.Result\n\nPASS, FAIL, or null  \nVX_TESTRESULTLINEITEM.Result string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "SafetyRelated": {
            "type": "boolean",
            "description": "TestResultLineItem.SafetyRelated\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "ServiceRequestId": {
            "type": "integer",
            "description": "TestResultLineItem.ServiceRequestId\n\nWork Request created for item failure  \nVX_TESTRESULTLINEITEM.ServiceRequestId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "ShowResult": {
            "type": "boolean",
            "description": "TestResultLineItem.ShowResult\n\nTrue if info_only is not equal to 'Y'.  \nVX_TESTRESULTLINEITEM.ShowResult bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SpawnJob": {
            "type": "boolean",
            "description": "TestResultLineItem.SpawnJob\n\nSpawn job. Will create the work request even if the test passed.  \nVX_TESTRESULTLINEITEM.SpawnJob bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Subsection": {
            "type": "string",
            "description": "TestResultLineItem.Subsection\n\nOptional subsection  \nVX_TESTRESULTLINEITEM.Subsection string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "SubsectionDesc": {
            "type": "string",
            "description": "TestResultLineItem.SubsectionDesc\n\nOptional subsection's description'  \nVX_TESTRESULTLINEITEM.SubsectionDesc string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "SubsectionSeq": {
            "type": "number",
            "description": "TestResultLineItem.SubsectionSeq\n\nNumber used to order test suite subsections.  \nvx_testresultlineitem.SubsectionSeq decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TestDate": {
            "type": "string",
            "description": "TestResultLineItem.TestDate\n\nDate of the test  \nVX_TESTRESULTLINEITEM.TestDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TestId": {
            "type": "integer",
            "description": "TestResultLineItem.TestId\n\nTest Suite result Id  \nVX_TESTRESULTLINEITEM.TestId int 10 \n\nSearchable: True \nRequired for: PUT  ",
            "format": "int32",
            "nullable": true
          },
          "TestResultStatus": {
            "type": "string",
            "description": "TestResultLineItem.TestResultStatus\n\nPASS, FAIL, INCOMPLETE  \nVX_TESTRESULTLINEITEM.TestResultStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "TestSuiteEntrySeq": {
            "type": "number",
            "description": "TestResultLineItem.TestSuiteEntrySeq\n\nTESTSUITE_ENTRY.RE_SEQ  \nvx_testresultlineitem.TestSuiteEntrySeq decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TestSuiteInternalId": {
            "type": "integer",
            "description": "TestResultLineItem.TestSuiteInternalId\n\nTESTSUITE_ENTRY.TESTSUITE_ID  \nvx_testresultlineitem.TestSuiteInternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "TestTypeId": {
            "type": "string",
            "description": "TestResultLineItem.TestTypeId\n\nTest suite name  \nVX_TESTRESULTLINEITEM.TestTypeId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "UnsafeToDrive": {
            "type": "boolean",
            "description": "TestResultLineItem.UnsafeToDrive\n\nIs it safe to drive?  \nVX_TESTRESULTLINEITEM.UnsafeToDrive bool  \n\nSearchable: False ",
            "nullable": true
          },
          "YNValue": {
            "type": "string",
            "description": "TestResultLineItem.YNValue\n\nY, N, or null  \nVX_TESTRESULTLINEITEM.YNValue string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "YNValueMin": {
            "type": "string",
            "description": "TestResultLineItem.YNValueMin\n\nYNValue must be this value to be a pass (unless this is null)  \nVX_TESTRESULTLINEITEM.YNValueMin string 1 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITestResultLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestResultLineItem"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestResultLineItem"
              }
            }
          }
        ]
      },
      "ETagOfITestResultLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITestResultLineItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITestResultLineItem"
              }
            }
          }
        ]
      },
      "SaveBodyOfITestResultLineItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITestResultLineItem"
          }
        }
      },
      "SaveResponseOfITestResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITestResult"
              }
            }
          }
        ]
      },
      "ITestResult": {
        "type": "object",
        "description": "TestResult",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AssetId",
          "EmployeeId",
          "LineItems",
          "TaskId",
          "TestId",
          "TestTypeId",
          "WorkOrderId"
        ],
        "properties": {
          "AssetId": {
            "type": "string",
            "description": "TestResult.AssetId\n\nUnit Number  \nVX_TESTRESULT.AssetId string 30 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Attachments": {
            "description": "TestResult.Attachments\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIAttachment"
          },
          "CertificateNumber": {
            "type": "string",
            "description": "TestResult.CertificateNumber\n\nReference number for test  \nVX_TESTRESULT.CertificateNumber string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Closed": {
            "type": "boolean",
            "description": "TestResult.Closed\n\nReturns Y for complete, null if incomplete  \nVX_TESTRESULT.Closed bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "CloseDate": {
            "type": "string",
            "description": "TestResult.CloseDate\n\nTested Date used, only have one date tied to a test.  \nVX_TESTRESULT.CloseDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "TestResult.EmployeeId\n\nEmployee number who performed the test  \nVX_TESTRESULT.EmployeeId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "TestResult.InternalId\n\ntestsuite_result_id  \nVX_TESTRESULT.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TestResult.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TESTRESULT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LineItems": {
            "description": "TestResult.LineItems\n\nLine Items  \nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfITestResultLineItem"
          },
          "LocationId": {
            "type": "string",
            "description": "TestResult.LocationId\n\nThe location of the test, could be the work order location  \nVX_TESTRESULT.LocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "Meter1Reading": {
            "type": "string",
            "description": "TestResult.Meter1Reading\n\nMeter1 Reading at time of test  \nVX_TESTRESULT.Meter1Reading long 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Meter2Reading": {
            "type": "string",
            "description": "TestResult.Meter2Reading\n\nMeter2 reading at time of test  \nVX_TESTRESULT.Meter2Reading long 10 \n\nSearchable: False ",
            "nullable": true
          },
          "Notes": {
            "description": "TestResult.Notes\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfINote"
          },
          "RequireCertificate": {
            "type": "boolean",
            "description": "TestResult.RequireCertificate\n\nDoes the test require a signature (certification)?  \nVX_TESTRESULT.RequireCertificate bool  \n\nSearchable: False ",
            "nullable": true
          },
          "RequireVendor": {
            "type": "boolean",
            "description": "TestResult.RequireVendor\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "RequireVendorInvoice": {
            "type": "boolean",
            "description": "TestResult.RequireVendorInvoice\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "Signature": {
            "type": "string",
            "description": "TestResult.Signature\n\n.Signature string  \n\nSearchable: False ",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "TestResult.Status\n\nStatus of the test: Pass, Fail, Pending (no entries answer), In-Progress (some have)  \nVX_TESTRESULT.Status string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "StatusChangeable": {
            "type": "boolean",
            "description": "TestResult.StatusChangeable\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "TestResult.TaskDesc\n\nDB function to build the job description from each piece of the code.  \nVX_TESTRESULT.TaskDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "TestResult.TaskId\n\nJob the test was performed on (tr.test_job)  \nVX_TESTRESULT.TaskId string 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TestDate": {
            "type": "string",
            "description": "TestResult.TestDate\n\nDate of the test  \nVX_TESTRESULT.TestDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TestId": {
            "type": "string",
            "description": "TestResult.TestId\n\nTest Suite Unique ID  \nVX_TESTRESULT.TestId int 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "TestTypeDesc": {
            "type": "string",
            "description": "TestResult.TestTypeDesc\n\nTest Suite description  \nVX_TESTRESULT.TestTypeDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "TestTypeId": {
            "type": "string",
            "description": "TestResult.TestTypeId\n\nTest Suite Name  \nVX_TESTRESULT.TestTypeId string 30 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "TestResult.WorkOrderId\n\nWork Order Number  \nVX_TESTRESULT.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "TestResult.WorkOrderLocationId\n\nLocation of the work order  \nVX_TESTRESULT.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfITestResultLineItem": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ITestResultLineItem"
            }
          }
        }
      },
      "SaveBodyOfITestResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITestResult"
          }
        }
      },
      "QueryResponseOfITestResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITestResult"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfITestResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestResult"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITestResult"
              }
            }
          }
        ]
      },
      "ETagOfITestResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITestType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITestType"
              }
            }
          }
        ]
      },
      "SaveBodyOfITestType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITestType"
          }
        }
      },
      "QueryResponseOfITimeCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITimeCard"
                }
              }
            }
          }
        ]
      },
      "ITimeCard": {
        "type": "object",
        "description": "TimeCard",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "UniqueId"
        ],
        "properties": {
          "ApprovedBySupervisor": {
            "type": "boolean",
            "description": "TimeCard.ApprovedBySupervisor\n\nLabor Approved flag  \nVX_TIMECARD.ApprovedBySupervisor bool  \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "TimeCard.EmployeeId\n\nEmployee number  \nVX_TIMECARD.EmployeeId string 11 \n\nSearchable: True ",
            "nullable": true
          },
          "IndirectAccountDesc": {
            "type": "string",
            "description": "TimeCard.IndirectAccountDesc\n\nIndirect Account Code Description  \nVX_TIMECARD.IndirectAccountDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "IndirectId": {
            "type": "string",
            "description": "TimeCard.IndirectId\n\nIndirect Account Code  \nVX_TIMECARD.IndirectId string 5 \n\nSearchable: False ",
            "nullable": true
          },
          "IsCurrent": {
            "type": "boolean",
            "description": "TimeCard.IsCurrent\n\nIndicates whether this is what the employee is currently punched into.  \nVX_TIMECARD.IsCurrent bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "TimeCard.LaborCost\n\nLabor Cost of the transaction  \nVX_TIMECARD.LaborCost decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "TimeCard.LaborHours\n\nLabor hours for transaction  \nVX_TIMECARD.LaborHours decimal 10 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TimeCard.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TIMECARD.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "description": "TimeCard.Notes\n\nNotes  \nVX_TIMECARD.Notes string  \n\nSearchable: False ",
            "nullable": true
          },
          "PayClass": {
            "type": "string",
            "description": "TimeCard.PayClass\n\nPay class  \nVX_TIMECARD.PayClass string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "PayrollDate": {
            "type": "string",
            "description": "TimeCard.PayrollDate\n\nFA Column: .PayrollDate DateTime \nFA Comments: Payroll date\nM5 Column: VX_TIMECARD.PayrollDate DateTime \nM5 Comments: Payroll date\nSearchable: False",
            "format": "date-time",
            "nullable": true
          },
          "PayrollDay": {
            "type": "string",
            "description": "TimeCard.PayrollDay\n\nFA Column: .PayrollDay string \nFA Comments: Payroll date\nM5 Column: VX_TIMECARD.PayrollDay string \nM5 Comments: Payroll day\nSearchable: False",
            "nullable": true
          },
          "PayStep": {
            "type": "string",
            "description": "TimeCard.PayStep\n\nPay step  \nVX_TIMECARD.PayStep string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDesc": {
            "type": "string",
            "description": "TimeCard.PositionDesc\n\nPosition code description  \nVX_TIMECARD.PositionDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage1": {
            "type": "string",
            "description": "TimeCard.PositionDescLanguage1\n\nPosition description, primary language  \nVX_TIMECARD.PositionDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage2": {
            "type": "string",
            "description": "TimeCard.PositionDescLanguage2\n\nPosition description, second language  \nVX_TIMECARD.PositionDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage3": {
            "type": "string",
            "description": "TimeCard.PositionDescLanguage3\n\nPosition description, third language  \nVX_TIMECARD.PositionDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "TimeCard.PositionId\n\nPosition code  \nVX_TIMECARD.PositionId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "description": "TimeCard.StartDateTime\n\nStart date and time of labor transaction  \nVX_TIMECARD.StartDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "StopDateTime": {
            "type": "string",
            "description": "TimeCard.StopDateTime\n\nEnd date and time of labor transaction  \nVX_TIMECARD.StopDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "TimeCard.TaskDesc\n\nJob Description  \nVX_TIMECARD.TaskDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "TimeCard.TaskId\n\nJob Code from the work order  \nVX_TIMECARD.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "TimeCard.TaskStatusDesc\n\nJob status code description  \nVX_TIMECARD.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "TimeCard.TaskStatusId\n\nJob status code  \nVX_TIMECARD.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeTypeDesc": {
            "type": "string",
            "description": "TimeCard.TimeTypeDesc\n\nTime type code description  \nVX_TIMECARD.TimeTypeDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeTypeId": {
            "type": "string",
            "description": "TimeCard.TimeTypeId\n\nTime type code  \nVX_TIMECARD.TimeTypeId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "TimeCard.Type\n\nTransaction type, Direct or Indirect  \nVX_TIMECARD.Type string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "UniqueId": {
            "type": "string",
            "description": "TimeCard.UniqueId\n\nLabor Id  \nVX_TIMECARD.UniqueId int  \n\nSearchable: False \nRequired for: PUT  ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "TimeCard.WorkOrderId\n\nWork Order Number  \nVX_TIMECARD.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "TimeCard.WorkOrderLocationId\n\nWork Order Location  \nVX_TIMECARD.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderTitle": {
            "type": "string",
            "description": "TimeCard.WorkOrderTitle\n\nWO Visit Reason Description  \nVX_TIMECARD.WorkOrderTitle string 20 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITimeCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeCard"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeCard"
              }
            }
          }
        ]
      },
      "ETagOfITimeCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfITimeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITimeSummary"
                }
              }
            }
          }
        ]
      },
      "ITimeSummary": {
        "type": "object",
        "description": "TimeSummary",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ApprovedBySupervisor": {
            "type": "boolean",
            "description": "TimeSummary.ApprovedBySupervisor\n\nLabor Approved flag  \nM5 Forced to: null \nSearchable: False ",
            "nullable": true
          },
          "CalendarDate": {
            "type": "string",
            "description": "TimeSummary.CalendarDate\n\nDay (no time) of the summary  \nVX_TIMESUMMARY.CalendarDate DateTime  \n\nSearchable: True ",
            "format": "date-time",
            "nullable": true
          },
          "DirectHours": {
            "type": "number",
            "description": "TimeSummary.DirectHours\n\nWork order hours  \nVX_TIMESUMMARY.DirectHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "TimeSummary.EmployeeId\n\nEmployee number  \nVX_TIMESUMMARY.EmployeeId string 11 \n\nSearchable: True ",
            "nullable": true
          },
          "EmployeeLocationDesc": {
            "type": "string",
            "description": "TimeSummary.EmployeeLocationDesc\n\nEmployee's home location's description  \nVX_TIMESUMMARY.EmployeeLocationDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeLocationId": {
            "type": "string",
            "description": "TimeSummary.EmployeeLocationId\n\nEmployee's home location  \nVX_TIMESUMMARY.EmployeeLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "TimeSummary.EmployeeName\n\nEmployee's name  \nVX_TIMESUMMARY.EmployeeName string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "FilterBeginDateTime": {
            "type": "string",
            "description": "TimeSummary.FilterBeginDateTime\n\nBeginning of the filter's date range, at midnight.  View returns null.  \nVX_TIMESUMMARY.FilterBeginDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FilterEndDateTime": {
            "type": "string",
            "description": "TimeSummary.FilterEndDateTime\n\nEnd of the filter's date range.  View returns null.  \nVX_TIMESUMMARY.FilterEndDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FirstDateTime": {
            "type": "string",
            "description": "TimeSummary.FirstDateTime\n\nBeginning of the first record in the date range.  \nVX_TIMESUMMARY.FirstDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IndirectHours": {
            "type": "number",
            "description": "TimeSummary.IndirectHours\n\nTime charged to indirect accounts  \nVX_TIMESUMMARY.IndirectHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TimeSummary.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TIMESUMMARY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastDateTime": {
            "type": "string",
            "description": "TimeSummary.LastDateTime\n\nEnd of the employee's last charged time in the date range  \nVX_TIMESUMMARY.LastDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PayrollDate": {
            "type": "string",
            "description": "TimeSummary.PayrollDate\n\nFA Column: .PayrollDate DateTime \nFA Comments: Payroll date\nM5 Column: VX_TIMESUMMARY.PayrollDate DateTime \nM5 Comments: Payroll date\nSearchable: False",
            "format": "date-time",
            "nullable": true
          },
          "PayrollDay": {
            "type": "string",
            "description": "TimeSummary.PayrollDay\n\nFA Column: .PayrollDay string \nFA Comments: Payroll date\nM5 Column: VX_TIMESUMMARY.PayrollDay string \nM5 Comments: Payroll day\nSearchable: False",
            "nullable": true
          },
          "ShiftDesc": {
            "type": "string",
            "description": "TimeSummary.ShiftDesc\n\nShift description  \nVX_TIMESUMMARY.ShiftDesc string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "ShiftHours": {
            "type": "number",
            "description": "TimeSummary.ShiftHours\n\nTotal hours the employee was expected to work  \nVX_TIMESUMMARY.ShiftHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ShiftId": {
            "type": "string",
            "description": "TimeSummary.ShiftId\n\nShift code  \nVX_TIMESUMMARY.ShiftId int  \n\nSearchable: False ",
            "nullable": true
          },
          "SupervisorId": {
            "type": "string",
            "description": "TimeSummary.SupervisorId\n\nVX_TIMESUMMARY.SupervisorId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "TotalHours": {
            "type": "number",
            "description": "TimeSummary.TotalHours\n\nAll charged hours during the date range  \nVX_TIMESUMMARY.TotalHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITimeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeSummary"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeSummary"
              }
            }
          }
        ]
      },
      "ETagOfITimeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITimeCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITimeCard"
              }
            }
          }
        ]
      },
      "SaveBodyOfITimeCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITimeCard"
          }
        }
      },
      "SaveResponseOfITimeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITimeSummary"
              }
            }
          }
        ]
      },
      "SaveBodyOfITimeSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITimeSummary"
          }
        }
      },
      "QueryResponseOfITimeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ITimeType"
                }
              }
            }
          }
        ]
      },
      "ITimeType": {
        "type": "object",
        "description": "TimeType",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "TimeType.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_TIMETYPE.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "CanPunchIn": {
            "type": "boolean",
            "description": "TimeType.CanPunchIn\n\nIs this a base time type where a user can punch into it?  \nVX_TIMETYPE.CanPunchIn bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "TimeType.Description\n\nTime type description  \nVX_TIMETYPE.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "TimeType.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_TIMETYPE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TimeTypeId": {
            "type": "string",
            "description": "TimeType.TimeTypeId\n\nTime type  \nVX_TIMETYPE.TimeTypeId string 3 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfITimeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfITimeType"
              }
            }
          }
        ]
      },
      "ETagOfITimeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfITimeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/ITimeType"
              }
            }
          }
        ]
      },
      "SaveBodyOfITimeType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/ITimeType"
          }
        }
      },
      "QueryResponseOfIUnitOfMeasure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUnitOfMeasure"
                }
              }
            }
          }
        ]
      },
      "IUnitOfMeasure": {
        "type": "object",
        "description": "UnitOfMeasure",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "UnitOfMeasure.Description\n\nUOM description  \nVX_UNITOFMEASURE.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "IsDefault": {
            "type": "boolean",
            "description": "UnitOfMeasure.IsDefault\n\nDefault UOM?  \nVX_UNITOFMEASURE.IsDefault bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "UnitOfMeasure.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_UNITOFMEASURE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "UnitOfMeasureId": {
            "type": "string",
            "description": "UnitOfMeasure.UnitOfMeasureId\n\nUnit of measure code  \nVX_UNITOFMEASURE.UnitOfMeasureId string 11 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIUnitOfMeasure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUnitOfMeasure"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUnitOfMeasure"
              }
            }
          }
        ]
      },
      "ETagOfIUnitOfMeasure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIUnitOfMeasure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IUnitOfMeasure"
              }
            }
          }
        ]
      },
      "SaveBodyOfIUnitOfMeasure": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IUnitOfMeasure"
          }
        }
      },
      "SaveResponseOfListOfIUserClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUserClass"
                }
              }
            }
          }
        ]
      },
      "IUserClass": {
        "type": "object",
        "description": "UserClass",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "Description",
          "UserClassId"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "UserClass.Active\n\nIndicator if the code is active or disabled. 1 means active, 0 means disabled.  \nVX_USERCLASS.Active bool 1 \n\nValue can be updated via: PUT and POST  \nSearchable: False ",
            "nullable": true
          },
          "ClassNumber": {
            "type": "integer",
            "description": "UserClass.ClassNumber\n\nUser class number, 1 through 5.  \nVX_USERCLASS.ClassNumber int  \n\nValue can be updated via: PUT and POST  \nSearchable: True ",
            "format": "int32",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "UserClass.Description\n\nUser Class Code Description.  \nVX_USERCLASS.Description string 30 \n\nValue can be updated via: PUT and POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "UserClassId": {
            "type": "string",
            "description": "UserClass.UserClassId\n\nUser Class Code.  \nVX_USERCLASS.UserClassId string 100 \n\nValue can be updated via: POST  \nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIUserClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IUserClass"
            }
          }
        }
      },
      "SaveResponseOfIUserClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IUserClass"
              }
            }
          }
        ]
      },
      "SaveBodyOfIUserClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IUserClass"
          }
        }
      },
      "QueryResponseOfIUserClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUserClass"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIUserClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserClass"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserClass"
              }
            }
          }
        ]
      },
      "ETagOfIUserClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUserGroup"
                }
              }
            }
          }
        ]
      },
      "IUserGroup": {
        "type": "object",
        "description": "UserGroup",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "UserGroup.Description\n\nRole description  \nVX_USERGROUP.Description string 60 \n\nSearchable: True ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "UserGroup.InternalId\n\nNot used, forced to 0 in view  \nVX_USERGROUP.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "UserGroup.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_USERGROUP.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "UserGroupId": {
            "type": "string",
            "description": "UserGroup.UserGroupId\n\nRole ID  \nVX_USERGROUP.UserGroupId string 60 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserGroup"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserGroup"
              }
            }
          }
        ]
      },
      "ETagOfIUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IUserGroup"
              }
            }
          }
        ]
      },
      "SaveBodyOfIUserGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IUserGroup"
          }
        }
      },
      "SaveResponseOfListOfIUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUser"
                }
              }
            }
          }
        ]
      },
      "IUser": {
        "type": "object",
        "description": "User",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "UserId"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "User.Active\n\nIs the user active (not disabled)?  \nVX_USER.Active bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CanChangePassword": {
            "type": "boolean",
            "description": "User.CanChangePassword\n\nIs the user allowed to change password?  \nVX_USER.CanChangePassword bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CrystalUser": {
            "type": "string",
            "description": "User.CrystalUser\n\nCrystal username.  'POOLED' sets the checkmark on Application User Maintenance.  Cannot be other than blank or 'POOLED' because otherwise password must be saved, which is not allowed by this API.  \nVX_USER.CrystalUser string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CurrentLocationId": {
            "type": "string",
            "description": "User.CurrentLocationId\n\nComes from login location, entered on login screen.  \nVX_USER.CurrentLocationId string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "DepartmentDesc": {
            "type": "string",
            "description": "User.DepartmentDesc\n\nDescription or name of the department assigned to the user  \nVX_USER.DepartmentDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentGroup": {
            "type": "string",
            "description": "User.DepartmentGroup\n\nDepartment group assigned to the user  \nVX_USER.DepartmentGroup string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "description": "User.DepartmentId\n\nDepartment assigned to the user  \nVX_USER.DepartmentId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "Division": {
            "type": "string",
            "description": "User.Division\n\nUser division  \nVX_USER.Division string 60 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "User.Email\n\nEmail address contact, required for email-based notifications  \nVX_USER.Email string 128 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "User.EmployeeId\n\nEmployee ID mapped to user, used for logging labor hours, etc.  \nVX_USER.EmployeeId string 10 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "User.ExpirationDateTime\n\nAccount expiration date and time.  \nVX_USER.ExpirationDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "IdleTimeoutMinutes": {
            "type": "integer",
            "description": "User.IdleTimeoutMinutes\n\nThe number of minutes the user's web session may remain inactive without requiring them to logon again.  \nVX_USER.IdleTImeoutMinutes int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "User.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_USER.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LoginFailures": {
            "type": "integer",
            "description": "User.LoginFailures\n\nNumber of login failures since last success  \nVX_USER.LoginFailures int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "LoginLastDateTime": {
            "type": "string",
            "description": "User.LoginLastDateTime\n\nDate the user last logged in  \nVX_USER.LoginLastDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MobilePIN": {
            "type": "string",
            "description": "User.MobilePIN\n\nPIN or password for mobile use  \nVX_USER.MobilePIN string  \n\nSearchable: False ",
            "nullable": true
          },
          "MobileUser": {
            "type": "boolean",
            "description": "User.MobileUser\n\nIs this a mobile user? (Not required for EDGE)  \nVX_USER.MobileUser bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "User.Name\n\nFull name for display  \nVX_USER.Name string 60 \n\nSearchable: True ",
            "nullable": true
          },
          "OldPassword": {
            "type": "string",
            "description": "User.OldPassword\n\nUser's old password; used only verify the user when PUTting a new password, never selected  \nVX_USER.OldPassword string 512 \n\nSearchable: False ",
            "nullable": true
          },
          "OverrideLocaleId": {
            "type": "string",
            "description": "User.OverrideLocaleId\n\nOverride locale ID  \nVX_USER.OverrideLocaleId string  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "User.Password\n\nUser's password; used only for PUTting a new password, never selected  \nVX_USER.Password string 512 \n\nSearchable: False ",
            "nullable": true
          },
          "PasswordExpireDays": {
            "type": "integer",
            "description": "User.PasswordExpireDays\n\nThe number of days that a new application password is valid. If a value is supplied here it overrides the M5_INIT default value for this user.  \nVX_USER.PasswordExpireDays int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PasswordLastChangedDate": {
            "type": "string",
            "description": "User.PasswordLastChangedDate\n\nDate the password was last changed  \nVX_USER.PasswordLastChangedDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PasswordMustChange": {
            "type": "boolean",
            "description": "User.PasswordMustChange\n\nMust the user change their password at next login?  \nVX_USER.PasswordMustChange bool  \n\nSearchable: False ",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "User.Phone\n\nPhone number  \nVX_USER.Phone string 15 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "UserGroupId": {
            "type": "string",
            "description": "User.UserGroupId\n\nM5 role  \nVX_USER.UserGroupId string  \n\nSearchable: False ",
            "nullable": true
          },
          "UserGroups": {
            "description": "User.UserGroups\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIUserUserGroup"
          },
          "UserId": {
            "type": "string",
            "description": "User.UserId\n\nApplication User  \nVX_USER.UserId string 60 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "UserUniqueId": {
            "type": "string",
            "description": "User.UserUniqueId\n\nInternal unique identifier, typically the same as UserId but is limited to 8 characters  \nVX_USER.UserUniqueId string 8 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "User.VendorId\n\nAssociated vendor ID  \nVX_USER.VendorId string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "WebUser": {
            "type": "boolean",
            "description": "User.WebUser\n\nIs the user allowed web access, including EDGE?  \nVX_USER.WebUser bool  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIUserUserGroup": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IUserUserGroup"
            }
          }
        }
      },
      "IUserUserGroup": {
        "type": "object",
        "description": "UserUserGroup",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "string",
            "description": "UserUserGroup.UserId\n\nApplication User  \n.UserId string 60 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IUser"
            }
          }
        }
      },
      "QueryResponseOfIUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUser"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUser"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUser"
              }
            }
          }
        ]
      },
      "ETagOfIUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IUser"
              }
            }
          }
        ]
      },
      "SaveBodyOfIUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IUser"
          }
        }
      },
      "QueryResponseOfIUserUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IUserUserGroup"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIUserUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserUserGroup"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIUserUserGroup"
              }
            }
          }
        ]
      },
      "ETagOfIUserUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIUserUserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IUserUserGroup"
              }
            }
          }
        ]
      },
      "SaveBodyOfIUserUserGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IUserUserGroup"
          }
        }
      },
      "SaveResponseOfListOfIVendorAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorAttribute"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIVendorAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorAttribute"
            }
          }
        }
      },
      "SaveResponseOfIVendorAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendorAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendorAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendorAttribute"
          }
        }
      },
      "QueryResponseOfIVendorAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIVendorAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIVendorAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "QueryResponseOfIVendorContractPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorContractPart"
                }
              }
            }
          }
        ]
      },
      "IVendorContractPart": {
        "type": "object",
        "description": "VendorContractPart",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ContractId": {
            "type": "string",
            "description": "VendorContractPart.ContractId\n\nContract Number  \nVX_VENDORCONTRACTPART.ContractId string 19 \n\nSearchable: True ",
            "nullable": true
          },
          "ContractLineNumber": {
            "type": "string",
            "description": "VendorContractPart.ContractLineNumber\n\nContract line number  \nVX_VENDORCONTRACTPART.ContractLineNumber int  \n\nSearchable: False ",
            "nullable": true
          },
          "ContractQty": {
            "type": "integer",
            "description": "VendorContractPart.ContractQty\n\nContract quantity  \nVX_VENDORCONTRACTPART.ContractQty int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "description": "VendorContractPart.Currency\n\nCurrency code  \nVX_VENDORCONTRACTPART.Currency string  \n\nSearchable: False ",
            "nullable": true
          },
          "IsCurrent": {
            "type": "boolean",
            "description": "VendorContractPart.IsCurrent\n\nIs this the current price?  \nVX_VENDORCONTRACTPART.IsCurrent bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "VendorContractPart.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_VENDORCONTRACTPART.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "description": "VendorContractPart.ManufacturerId\n\nPart Manufacturer  \nVX_VENDORCONTRACTPART.ManufacturerId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescription": {
            "type": "string",
            "description": "VendorContractPart.PartDescription\n\nPart description  \nVX_VENDORCONTRACTPART.PartDescription string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "VendorContractPart.PartId\n\nPart number (the one the user sees)  \nVX_VENDORCONTRACTPART.PartId string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "PartInternalId": {
            "type": "integer",
            "description": "VendorContractPart.PartInternalId\n\nInternal part id sequence  \nVX_VENDORCONTRACTPART.PartInternalId int 10 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "PriceTypeId": {
            "type": "string",
            "description": "VendorContractPart.PriceTypeId\n\nPrice type  \nVX_VENDORCONTRACTPART.PriceTypeId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ShipTermId": {
            "type": "string",
            "description": "VendorContractPart.ShipTermId\n\nShipping term ID  \nVX_VENDORCONTRACTPART.ShipTermId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitOfMeasureId": {
            "type": "string",
            "description": "VendorContractPart.UnitOfMeasureId\n\nUnit of measure  \nVX_VENDORCONTRACTPART.UnitOfMeasureId string 11 \n\nSearchable: False ",
            "nullable": true
          },
          "UnitPrice": {
            "type": "number",
            "description": "VendorContractPart.UnitPrice\n\nVendor's contract price per UnitOfMeasureId  \nVX_VENDORCONTRACTPART.UnitPrice decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "VendorContractPart.VendorId\n\nUnique vendor number  \nVX_VENDORCONTRACTPART.VendorId string 12 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIVendorContractPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorContractPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorContractPart"
              }
            }
          }
        ]
      },
      "ETagOfIVendorContractPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIVendorContractPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendorContractPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendorContractPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendorContractPart"
          }
        }
      },
      "SaveResponseOfListOfIVendorContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorContract"
                }
              }
            }
          }
        ]
      },
      "IVendorContract": {
        "type": "object",
        "description": "VendorContract",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "AmountLimit",
          "AwardDateTime",
          "BalanceAmt",
          "Comments",
          "ContractId",
          "ReceiveLTDAmt",
          "RenewalTerms",
          "StartDateTime",
          "Status",
          "VendorId",
          "WarnAtAmt"
        ],
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "VendorContract.Active\n\nIndicator if the contract is active.  Y means active. Awarded is active in M5.  \nVX_VENDORCONTRACT.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "AmountLimit": {
            "type": "number",
            "description": "VendorContract.AmountLimit\n\nAmount Limit  \nVX_VENDORCONTRACT.AmountLimit decimal  \n\nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "AmountUsed": {
            "type": "number",
            "description": "VendorContract.AmountUsed\n\nAmount Used  \nVX_VENDORCONTRACT.AmountUsed decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AwardDateTime": {
            "type": "string",
            "description": "VendorContract.AwardDateTime\n\nWhen was the contract awarded?  \nVX_VENDORCONTRACT.AwardDateTime DateTime  \n\nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "BalanceAmt": {
            "type": "number",
            "description": "VendorContract.BalanceAmt\n\nRemaining amount; AmountLimit - AmountUsed  \nVX_VENDORCONTRACT.BalanceAmt decimal  \n\nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "VendorContract.Comments\n\nFree-form notes  \nVX_VENDORCONTRACT.Comments string 4000 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "CommercialBlanket": {
            "type": "boolean",
            "description": "VendorContract.CommercialBlanket\n\nIs this a blanket contract for commercial work?  \nVX_VENDORCONTRACT.CommercialBlanket bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ContractId": {
            "type": "string",
            "description": "VendorContract.ContractId\n\nContract Number  \nVX_VENDORCONTRACT.ContractId string 19 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "VendorContract.Description\n\nVendor Name  \nVX_VENDORCONTRACT.Description string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "EndDateTime": {
            "type": "string",
            "description": "VendorContract.EndDateTime\n\nEnd Date Time  \nVX_VENDORCONTRACT.EndDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "FuelBlanket": {
            "type": "boolean",
            "description": "VendorContract.FuelBlanket\n\nIs this a blanket contract for fuel?  \nVX_VENDORCONTRACT.FuelBlanket bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "VendorContract.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_VENDORCONTRACT.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderLTDAmt": {
            "type": "number",
            "description": "VendorContract.OrderLTDAmt\n\nLife-to-date order amount  \nVX_VENDORCONTRACT.OrderLTDAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Parts": {
            "description": "VendorContract.Parts\n\nSearchable: False ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIVendorContractPart"
          },
          "PartsBlanket": {
            "type": "boolean",
            "description": "VendorContract.PartsBlanket\n\nIs this a blanket contract for parts?  \nVX_VENDORCONTRACT.PartsBlanket bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ReceiveLTDAmt": {
            "type": "number",
            "description": "VendorContract.ReceiveLTDAmt\n\nLife-to-date received amount  \nVX_VENDORCONTRACT.ReceiveLTDAmt decimal  \n\nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          },
          "RenewalTerms": {
            "type": "string",
            "description": "VendorContract.RenewalTerms\n\nRenewal terms  \nVX_VENDORCONTRACT.RenewalTerms string 40 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "description": "VendorContract.StartDateTime\n\nContract start date  \nVX_VENDORCONTRACT.StartDateTime DateTime  \n\nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "VendorContract.Status\n\nAWARDED, BUILD, CLOSED  \nVX_VENDORCONTRACT.Status string 10 \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "StatusDate": {
            "type": "string",
            "description": "VendorContract.StatusDate\n\nWhen the status last changed  \nVX_VENDORCONTRACT.StatusDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "VendorContract.VendorDesc\n\nVendor Name  \nVX_VENDORCONTRACT.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "VendorContract.VendorId\n\nUnique Vendor Number  \nVX_VENDORCONTRACT.VendorId string 12 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WarnAtAmt": {
            "type": "number",
            "description": "VendorContract.WarnAtAmt\n\nWarn-at amount  \nVX_VENDORCONTRACT.WarnAtAmt decimal  \n\nSearchable: False \nRequired for: POST  ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIVendorContractPart": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorContractPart"
            }
          }
        }
      },
      "SaveBodyOfListOfIVendorContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendorContract"
            }
          }
        }
      },
      "QueryResponseOfIVendorContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorContract"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIVendorContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorContract"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorContract"
              }
            }
          }
        ]
      },
      "ETagOfIVendorContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIVendorContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendorContract"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendorContract": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendorContract"
          }
        }
      },
      "QueryResponseOfIVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendor"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendor"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendor"
              }
            }
          }
        ]
      },
      "ETagOfIVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendor"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIVendor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IVendor"
            }
          }
        }
      },
      "SaveResponseOfIVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendor"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendor"
          }
        }
      },
      "QueryResponseOfIVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorType"
                }
              }
            }
          }
        ]
      },
      "IVendorType": {
        "type": "object",
        "description": "VendorType",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "VendorType.Active\n\nIndicator if the vendor type is active or disabled.  Y means active, null means disabled.    \nvx_vendortype.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "VendorType.Description\n\nvx_vendortype.Description string  \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "VendorType.LastChangedDateTime\n\nLast changed date and time on main record.  \nvx_vendortype.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "VendorTypeId": {
            "type": "string",
            "description": "VendorType.VendorTypeId\n\nVendor service code  \nvx_vendortype.VendorTypeId string  \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorType"
              }
            }
          }
        ]
      },
      "ETagOfIVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendorType"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendorType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendorType"
          }
        }
      },
      "QueryResponseOfIVendorVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IVendorVendorType"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIVendorVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorVendorType"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIVendorVendorType"
              }
            }
          }
        ]
      },
      "ETagOfIVendorVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIVendorVendorType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IVendorVendorType"
              }
            }
          }
        ]
      },
      "SaveBodyOfIVendorVendorType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IVendorVendorType"
          }
        }
      },
      "QueryResponseOfIWarrantyCancelReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyCancelReason"
                }
              }
            }
          }
        ]
      },
      "IWarrantyCancelReason": {
        "type": "object",
        "description": "WarrantyCancelReason",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "WarrantyCancelReason.Active\n\nFlag denoting if the reason used to cancel a warranty claim is active.  \nVX_WARRANTYCANCELREASON.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WarrantyCancelReason.Description\n\nWarranty Cancel Reason Description  \nVX_WARRANTYCANCELREASON.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WarrantyCancelReason.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WARRANTYCANCELREASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WarrantyCancelReasonId": {
            "type": "string",
            "description": "WarrantyCancelReason.WarrantyCancelReasonId\n\nWarranty Cancel Reason Code  \nVX_WARRANTYCANCELREASON.WarrantyCancelReasonId string 4 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWarrantyCancelReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyCancelReason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyCancelReason"
              }
            }
          }
        ]
      },
      "ETagOfIWarrantyCancelReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWarrantyCancelReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWarrantyCancelReason"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWarrantyCancelReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWarrantyCancelReason"
          }
        }
      },
      "QueryResponseOfIWarrantyCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyCategory"
                }
              }
            }
          }
        ]
      },
      "IWarrantyCategory": {
        "type": "object",
        "description": "WarrantyCategory",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "WarrantyCategory.Active\n\nIndicator if the warranty category is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_WARRANTYCATEGORY.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WarrantyCategory.Description\n\nWarranty Category Description  \nVX_WARRANTYCATEGORY.Description string 40 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WarrantyCategory.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WARRANTYCATEGORY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WarrantyCategoryId": {
            "type": "string",
            "description": "WarrantyCategory.WarrantyCategoryId\n\nWarranty Category  \nVX_WARRANTYCATEGORY.WarrantyCategoryId string 8 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWarrantyCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyCategory"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyCategory"
              }
            }
          }
        ]
      },
      "ETagOfIWarrantyCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWarrantyCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWarrantyCategory"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWarrantyCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWarrantyCategory"
          }
        }
      },
      "QueryResponseOfIWarrantyClaimDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyClaimDetail"
                }
              }
            }
          }
        ]
      },
      "IWarrantyClaimDetail": {
        "type": "object",
        "description": "WarrantyClaimDetail",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AgreedAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedAmount\n\nAgreed amount  \nVX_WARRANTYCLAIMDETAIL.AgreedAmount decimal  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedCommLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedCommLaborAmount\n\nAgreed commercial labor amount  \nVX_WARRANTYCLAIMDETAIL.AgreedCommLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedCommMiscAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedCommMiscAmount\n\nAgreed commercial misccellaneous amount  \nVX_WARRANTYCLAIMDETAIL.AgreedCommMiscAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedCommPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedCommPartAmount\n\nAgreed commercial part amount  \nVX_WARRANTYCLAIMDETAIL.AgreedCommPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedCommTaxAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedCommTaxAmount\n\nAgreed commercial tax amount  \nVX_WARRANTYCLAIMDETAIL.AgreedCommTaxAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedLaborAmount\n\nAgreed labor amount  \nVX_WARRANTYCLAIMDETAIL.AgreedLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AgreedPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.AgreedPartAmount\n\nAgreed part amount  \nVX_WARRANTYCLAIMDETAIL.AgreedPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedAmount\n\nClaim amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedAmount decimal  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedCommLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedCommLaborAmount\n\nClaimed commercial labor amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedCommLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedCommMiscAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedCommMiscAmount\n\nClaimed commercial misccellaneous amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedCommMiscAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedCommPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedCommPartAmount\n\nClaimed commercial part amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedCommPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedCommTaxAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedCommTaxAmount\n\nClaimed commercial tax amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedCommTaxAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedLaborAmount\n\nClaimed labor amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedLaborHours": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedLaborHours\n\nClaimed labor hours  \nVX_WARRANTYCLAIMDETAIL.ClaimedLaborHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimedPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.ClaimedPartAmount\n\nClaimed part amount  \nVX_WARRANTYCLAIMDETAIL.ClaimedPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimNumber": {
            "type": "string",
            "description": "WarrantyClaimDetail.ClaimNumber\n\nWarranty Claim Number  \nVX_WARRANTYCLAIMDETAIL.ClaimNumber string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "ClaimStatus": {
            "type": "string",
            "description": "WarrantyClaimDetail.ClaimStatus\n\nClaim status: BUILT, NEGOTIATE, AUTHORIZE, CANCEL, DENIED, INVOICE  \nVX_WARRANTYCLAIMDETAIL.ClaimStatus string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "ClaimType": {
            "type": "string",
            "description": "WarrantyClaimDetail.ClaimType\n\nWarranty claim type: CORE, SUBROGATION, THIRD PARTY, WARRANTY  \nVX_WARRANTYCLAIMDETAIL.ClaimType string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DetailedOrSummary": {
            "type": "string",
            "description": "WarrantyClaimDetail.DetailedOrSummary\n\nDETAILED, SUMMARY, or UNDETERMINED  \nVX_WARRANTYCLAIMDETAIL.DetailedOrSummary string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DetailStatus": {
            "type": "string",
            "description": "WarrantyClaimDetail.DetailStatus\n\n'Claim type': NO CLAIM, FULL CLAIM, PARTIAL CLAIM, ADDED SAVED  \nVX_WARRANTYCLAIMDETAIL.DetailStatus string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string",
            "description": "WarrantyClaimDetail.EmployeeId\n\nEmployee associated with a labor detail.  \nVX_WARRANTYCLAIMDETAIL.EmployeeId string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "ItemType": {
            "type": "string",
            "description": "WarrantyClaimDetail.ItemType\n\n'Charge' type: PART, LABOR, COMMERCIAL PART, COMMERCIAL LABOR, COMMERCIAL MISC, COMMERCIAL TAX  \nVX_WARRANTYCLAIMDETAIL.ItemType string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WarrantyClaimDetail.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WARRANTYCLAIMDETAIL.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OriginalAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalAmount\n\nOriginal total cost of the charges  \nVX_WARRANTYCLAIMDETAIL.OriginalAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalCommLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalCommLaborAmount\n\nOriginal commercial labor amount  \nVX_WARRANTYCLAIMDETAIL.OriginalCommLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalCommMiscAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalCommMiscAmount\n\nOriginal commercial misccellaneous amount  \nVX_WARRANTYCLAIMDETAIL.OriginalCommMiscAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalCommPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalCommPartAmount\n\nOriginal commercial part amount  \nVX_WARRANTYCLAIMDETAIL.OriginalCommPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalCommTaxAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalCommTaxAmount\n\nOriginal commercial tax amount  \nVX_WARRANTYCLAIMDETAIL.OriginalCommTaxAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalLaborAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalLaborAmount\n\nOriginal labor amount  \nVX_WARRANTYCLAIMDETAIL.OriginalLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalLaborHours": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalLaborHours\n\nOriginal labor amount  \nVX_WARRANTYCLAIMDETAIL.OriginalLaborAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "OriginalPartAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.OriginalPartAmount\n\nOriginal part amount  \nVX_WARRANTYCLAIMDETAIL.OriginalPartAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartDesc": {
            "type": "string",
            "description": "WarrantyClaimDetail.PartDesc\n\nPart description  \nVX_WARRANTYCLAIMDETAIL.PartDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage1": {
            "type": "string",
            "description": "WarrantyClaimDetail.PartDescLanguage1\n\nPart number description, primary language  \nVX_WARRANTYCLAIMDETAIL.PartDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage2": {
            "type": "string",
            "description": "WarrantyClaimDetail.PartDescLanguage2\n\nPart number description, second language  \nVX_WARRANTYCLAIMDETAIL.PartDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartDescLanguage3": {
            "type": "string",
            "description": "WarrantyClaimDetail.PartDescLanguage3\n\nPart number description, third language  \nVX_WARRANTYCLAIMDETAIL.PartDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartId": {
            "type": "string",
            "description": "WarrantyClaimDetail.PartId\n\nPart number being claimed  \nVX_WARRANTYCLAIMDETAIL.PartId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PartQty": {
            "type": "number",
            "description": "WarrantyClaimDetail.PartQty\n\nClaimed part quantity  \nVX_WARRANTYCLAIMDETAIL.PartQty decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "SavedAmount": {
            "type": "number",
            "description": "WarrantyClaimDetail.SavedAmount\n\nAdded saved amount  \nVX_WARRANTYCLAIMDETAIL.SavedAmount decimal  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Serialized": {
            "type": "boolean",
            "description": "WarrantyClaimDetail.Serialized\n\nDid the issued part have a serial number?  \nVX_WARRANTYCLAIMDETAIL.Serialized bool  \n\nSearchable: False ",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "WarrantyClaimDetail.SerialNumber\n\nPart's serial number  \nVX_WARRANTYCLAIMDETAIL.SerialNumber string 32 \n\nSearchable: True ",
            "nullable": true
          },
          "SourceRecordInternalId": {
            "type": "integer",
            "description": "WarrantyClaimDetail.SourceRecordInternalId\n\nInternal row ID: o_part_chg.o_part_id or o_comm_chg.o_comm_id  \nVX_WARRANTYCLAIMDETAIL.SourceRecordInternalId int  \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WarrantyClaimDetail.TaskId\n\nJob code  \nVX_WARRANTYCLAIMDETAIL.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WarrantyClaimDetail.WorkOrderId\n\nWork Order Number  \nVX_WARRANTYCLAIMDETAIL.WorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWarrantyClaimDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyClaimDetail"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyClaimDetail"
              }
            }
          }
        ]
      },
      "ETagOfIWarrantyClaimDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWarrantyClaimDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWarrantyClaimDetail"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWarrantyClaimDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWarrantyClaimDetail"
          }
        }
      },
      "SaveResponseOfListOfIWarrantyClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyClaim"
                }
              }
            }
          }
        ]
      },
      "IWarrantyClaim": {
        "type": "object",
        "description": "WarrantyClaim",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "ClaimNumber",
          "Details"
        ],
        "properties": {
          "AgreedAmount": {
            "type": "number",
            "description": "WarrantyClaim.AgreedAmount\n\nAgreed amount  \nVX_WARRANTYCLAIM.AgreedAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "AssetDesc": {
            "type": "string",
            "description": "WarrantyClaim.AssetDesc\n\nUnit Number Description  \nVX_WARRANTYCLAIM.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WarrantyClaim.AssetId\n\nUnit Number  \nVX_WARRANTYCLAIM.AssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "AuthorizeComment": {
            "type": "string",
            "description": "WarrantyClaim.AuthorizeComment\n\nAuthorize note  \nVX_WARRANTYCLAIM.AuthorizeComment string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "AuthorizeDate": {
            "type": "string",
            "description": "WarrantyClaim.AuthorizeDate\n\nWarranty Claim Authorize Date  \nVX_WARRANTYCLAIM.AuthorizeDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "BuiltDate": {
            "type": "string",
            "description": "WarrantyClaim.BuiltDate\n\nWarranty Claim Built Date  \nVX_WARRANTYCLAIM.BuiltDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CancelDate": {
            "type": "string",
            "description": "WarrantyClaim.CancelDate\n\nWarranty Claim Cancel Date  \nVX_WARRANTYCLAIM.CancelDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CancelReasonDesc": {
            "type": "string",
            "description": "WarrantyClaim.CancelReasonDesc\n\nWarranty Claim Cancel Reason Description  \nVX_WARRANTYCLAIM.CancelReasonDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "CancelReasonId": {
            "type": "string",
            "description": "WarrantyClaim.CancelReasonId\n\nWarranty Claim Cancel Reason  \nVX_WARRANTYCLAIM.CancelReasonId string 4 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "CategoryDesc": {
            "type": "string",
            "description": "WarrantyClaim.CategoryDesc\n\nWarranty Category Description  \nVX_WARRANTYCLAIM.CategoryDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "CategoryId": {
            "type": "string",
            "description": "WarrantyClaim.CategoryId\n\nWarranty Category  \nVX_WARRANTYCLAIM.CategoryId string 8 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ClaimedAmount": {
            "type": "number",
            "description": "WarrantyClaim.ClaimedAmount\n\nClaimed Amount  \nVX_WARRANTYCLAIM.ClaimedAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "ClaimNumber": {
            "type": "string",
            "description": "WarrantyClaim.ClaimNumber\n\nWarranty Claim Number  \nVX_WARRANTYCLAIM.ClaimNumber string 10 \n\nSearchable: True \nRequired for: PUT  ",
            "nullable": true
          },
          "ClaimType": {
            "type": "string",
            "description": "WarrantyClaim.ClaimType\n\nWarranty claim type: CORE, SUBROGATION, THIRD PARTY, WARRANTY  \nVX_WARRANTYCLAIM.ClaimType string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DenialComment": {
            "type": "string",
            "description": "WarrantyClaim.DenialComment\n\nDenial note  \nVX_WARRANTYCLAIM.DenialComment string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "DenialDate": {
            "type": "string",
            "description": "WarrantyClaim.DenialDate\n\nWarranty Claim Denied Date  \nVX_WARRANTYCLAIM.DenialDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "DeniedReasonDesc": {
            "type": "string",
            "description": "WarrantyClaim.DeniedReasonDesc\n\nWarranty Claim Denied Reason Description  \nVX_WARRANTYCLAIM.DeniedReasonDesc string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "DeniedReasonId": {
            "type": "string",
            "description": "WarrantyClaim.DeniedReasonId\n\nWarranty Claim Denied Reason  \nVX_WARRANTYCLAIM.DeniedReasonId string 4 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "DetailedOrSummary": {
            "type": "string",
            "description": "WarrantyClaim.DetailedOrSummary\n\nDETAILED, SUMMARY, or UNDETERMINED  \nVX_WARRANTYCLAIM.DetailedOrSummary string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "Details": {
            "description": "WarrantyClaim.Details\n\nWarranty claim detail lines  \nValue can be updated via: PUT  \nSearchable: False \nRequired for: PUT  ",
            "nullable": true,
            "$ref": "#/components/schemas/ILookupItemOfIWarrantyClaimDetail"
          },
          "InternalId": {
            "type": "integer",
            "description": "WarrantyClaim.InternalId\n\nWarranty Claim Id  \nVX_WARRANTYCLAIM.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceComment": {
            "type": "string",
            "description": "WarrantyClaim.InvoiceComment\n\nInvoice note  \nVX_WARRANTYCLAIM.InvoiceComment string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "InvoiceDate": {
            "type": "string",
            "description": "WarrantyClaim.InvoiceDate\n\nWarranty Claim Invoice Date  \nVX_WARRANTYCLAIM.InvoiceDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WarrantyClaim.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WARRANTYCLAIM.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "NegotiateComment": {
            "type": "string",
            "description": "WarrantyClaim.NegotiateComment\n\nNegotiation note  \nVX_WARRANTYCLAIM.NegotiateComment string 4000 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "NegotiateDate": {
            "type": "string",
            "description": "WarrantyClaim.NegotiateDate\n\nWarranty Claim Negotiate Date  \nVX_WARRANTYCLAIM.NegotiateDate DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "ProcessEmployeeId": {
            "type": "string",
            "description": "WarrantyClaim.ProcessEmployeeId\n\nEmployee number who processed the claim.  \nVX_WARRANTYCLAIM.ProcessEmployeeId string 11 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "ProcessEmployeeName": {
            "type": "string",
            "description": "WarrantyClaim.ProcessEmployeeName\n\nEmployee name who processed the claim.  \nVX_WARRANTYCLAIM.ProcessEmployeeName string 30 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "RmaNumber": {
            "type": "string",
            "description": "WarrantyClaim.RmaNumber\n\nRMA Number  \nVX_WARRANTYCLAIM.RmaNumber string 20 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "SavedAmount": {
            "type": "number",
            "description": "WarrantyClaim.SavedAmount\n\nSaved Amount  \nVX_WARRANTYCLAIM.SavedAmount decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "WarrantyClaim.Status\n\nWarranty claim status: BUILT, NEGOTIATE, AUTHORIZE, INVOICE, DENIED, CANCEL  \nVX_WARRANTYCLAIM.Status string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "StatusDate": {
            "type": "string",
            "description": "WarrantyClaim.StatusDate\n\nWhen the status last changed  \nVX_WARRANTYCLAIM.StatusDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "WarrantyClaim.VendorDesc\n\nVendor Name  \nVX_WARRANTYCLAIM.VendorDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "WarrantyClaim.VendorId\n\nVendor Number  \nVX_WARRANTYCLAIM.VendorId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderCloseDate": {
            "type": "string",
            "description": "WarrantyClaim.WorkOrderCloseDate\n\nWork Order Closed Date  \nVX_WARRANTYCLAIM.WorkOrderCloseDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkOrderCompleteDate": {
            "type": "string",
            "description": "WarrantyClaim.WorkOrderCompleteDate\n\nWork Order Completed Date  \nVX_WARRANTYCLAIM.WorkOrderCompleteDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WarrantyClaim.WorkOrderId\n\nWork Order Number  \nVX_WARRANTYCLAIM.WorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ILookupItemOfIWarrantyClaimDetail": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWarrantyClaimDetail"
            }
          }
        }
      },
      "SaveBodyOfListOfIWarrantyClaim": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWarrantyClaim"
            }
          }
        }
      },
      "QueryResponseOfIWarrantyClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyClaim"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWarrantyClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyClaim"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyClaim"
              }
            }
          }
        ]
      },
      "ETagOfIWarrantyClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWarrantyClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWarrantyClaim"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWarrantyClaim": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWarrantyClaim"
          }
        }
      },
      "QueryResponseOfIWarrantyDenyReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWarrantyDenyReason"
                }
              }
            }
          }
        ]
      },
      "IWarrantyDenyReason": {
        "type": "object",
        "description": "WarrantyDenyReason",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "WarrantyDenyReason.Active\n\nFlag denoting if the reason used to deny warranty claim is active.  \nVX_WARRANTYDENYREASON.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WarrantyDenyReason.Description\n\nWarranty Deny Reason Description  \nVX_WARRANTYDENYREASON.Description string 30 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WarrantyDenyReason.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WARRANTYDENYREASON.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WarrantyDenyReasonId": {
            "type": "string",
            "description": "WarrantyDenyReason.WarrantyDenyReasonId\n\nWarranty Deny Reason Code  \nVX_WARRANTYDENYREASON.WarrantyDenyReasonId string 4 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWarrantyDenyReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyDenyReason"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWarrantyDenyReason"
              }
            }
          }
        ]
      },
      "ETagOfIWarrantyDenyReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWarrantyDenyReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWarrantyDenyReason"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWarrantyDenyReason": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWarrantyDenyReason"
          }
        }
      },
      "QueryResponseOfIWorkAccomplishedCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkAccomplishedCode"
                }
              }
            }
          }
        ]
      },
      "IWorkAccomplishedCode": {
        "type": "object",
        "description": "WorkAccomplishedCode",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "WorkAccomplishedCode.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_WORKACCOMPLISHEDCODE.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WorkAccomplishedCode.Description\n\nWork Accomplished Code Description  \nVX_WORKACCOMPLISHEDCODE.Description string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "WorkAccomplishedCode.DescriptionLanguage1\n\nWork Accomplished Code Description, primary language  \nVX_WORKACCOMPLISHEDCODE.DescriptionLanguage1 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "WorkAccomplishedCode.DescriptionLanguage2\n\nWork Accomplished Code Description, second language  \nVX_WORKACCOMPLISHEDCODE.DescriptionLanguage2 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "WorkAccomplishedCode.DescriptionLanguage3\n\nWork Accomplished Code Description, third language  \nVX_WORKACCOMPLISHEDCODE.DescriptionLanguage3 string 12 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkAccomplishedCode.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKACCOMPLISHEDCODE.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkAccomplishedCodeId": {
            "type": "string",
            "description": "WorkAccomplishedCode.WorkAccomplishedCodeId\n\nWork Accomplished Code  \nVX_WORKACCOMPLISHEDCODE.WorkAccomplishedCodeId string 2 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkAccomplishedCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkAccomplishedCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkAccomplishedCode"
              }
            }
          }
        ]
      },
      "ETagOfIWorkAccomplishedCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkAccomplishedCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkAccomplishedCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkAccomplishedCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkAccomplishedCode"
          }
        }
      },
      "SaveResponseOfIWorkAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkAssignment"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkAssignment"
          }
        }
      },
      "QueryResponseOfIWorkClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkClass"
                }
              }
            }
          }
        ]
      },
      "IWorkClass": {
        "type": "object",
        "description": "WorkClass",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIWorkClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkClass"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkClass"
              }
            }
          }
        ]
      },
      "ETagOfIWorkClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkClass"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkClass": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkClass"
          }
        }
      },
      "QueryResponseOfIWorkDelayCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkDelayCode"
                }
              }
            }
          }
        ]
      },
      "IWorkDelayCode": {
        "type": "object",
        "description": "WorkDelayCode",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ODataQueryOptionsOfIWorkDelayCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkDelayCode"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkDelayCode"
              }
            }
          }
        ]
      },
      "ETagOfIWorkDelayCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkDelayCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkDelayCode"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkDelayCode": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkDelayCode"
          }
        }
      },
      "QueryResponseOfIWorkDelay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkDelay"
                }
              }
            }
          }
        ]
      },
      "IWorkDelay": {
        "type": "object",
        "description": "WorkDelay",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "WorkDelay.AssetDesc\n\nVX_WORKORDER.AssetDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WorkDelay.AssetId\n\nVX_WORKORDER.AssetId string  \n\nSearchable: False ",
            "nullable": true
          },
          "CreatedDateTime": {
            "type": "string",
            "description": "WorkDelay.CreatedDateTime\n\nVX_WORKORDER.OpenDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WorkDelay.Description\n\nVX_WORKORDER.RepairReasonId string  \n\nSearchable: False ",
            "nullable": true
          },
          "TransferToLocationId": {
            "type": "string",
            "description": "WorkDelay.TransferToLocationId\n\nVX_WORKORDER.WorkOrderLocationId string  \n\nSearchable: False ",
            "nullable": true
          },
          "WorkDelayId": {
            "type": "string",
            "description": "WorkDelay.WorkDelayId\n\nVX_WORKORDER.WorkDelayId string  \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkDelay.WorkOrderId\n\nVX_WORKORDER.WorkOrderId string  \n\nSearchable: True ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkDelay.WorkOrderLocationId\n\nVX_WORKORDER.WorkOrderLocationId string  \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkDelay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkDelay"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkDelay"
              }
            }
          }
        ]
      },
      "ETagOfIWorkDelay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkDelay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkDelay"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkDelay": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkDelay"
          }
        }
      },
      "SaveResponseOfListOfIWorkOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderAttribute"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIWorkOrderAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderAttribute"
            }
          }
        }
      },
      "QueryResponseOfIWorkOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderAttribute"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderAttribute"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderAttribute"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderAttribute"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderAttribute": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderAttribute"
          }
        }
      },
      "SaveResponseOfListOfIWorkOrderCommercial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderCommercial"
                }
              }
            }
          }
        ]
      },
      "IWorkOrderCommercial": {
        "type": "object",
        "description": "WorkOrderCommercial",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "ClosedWOReasonId",
          "TaskId",
          "TransactionDateTime",
          "VendorId",
          "WorkOrderId"
        ],
        "properties": {
          "AssetDesc": {
            "type": "string",
            "description": "WorkOrderCommercial.AssetDesc\n\nUnit or department description  \nVX_WORKORDERCOMMERCIAL.AssetDesc string 100 \n\nSearchable: False ",
            "nullable": true
          },
          "AssetId": {
            "type": "string",
            "description": "WorkOrderCommercial.AssetId\n\nUnit or department number  \nVX_WORKORDERCOMMERCIAL.AssetId string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "ClosedWOReasonId": {
            "type": "string",
            "description": "WorkOrderCommercial.ClosedWOReasonId\n\nClosed WO Reason, required if work order is closed  \nVX_WORKORDERCOMMERCIAL.ClosedWOReasonId string  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "WorkOrderCommercial.Comments\n\nCommercial description  \nVX_WORKORDERCOMMERCIAL.Comments string 60 \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "EntryDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.EntryDateTime\n\nWhen the transaction was created  \nVX_WORKORDERCOMMERCIAL.EntryDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkOrderCommercial.InternalId\n\nInternal row ID  \nVX_WORKORDERCOMMERCIAL.InternalId long  \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "InvoiceApprovalDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.InvoiceApprovalDateTime\n\nInvoice Approval Date  \nVX_WORKORDERCOMMERCIAL.InvoiceApprovalDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceApprovalStatus": {
            "type": "string",
            "description": "WorkOrderCommercial.InvoiceApprovalStatus\n\nInvoice Approval Status  \nVX_WORKORDERCOMMERCIAL.InvoiceApprovalStatus string  \n\nSearchable: False ",
            "nullable": true
          },
          "InvoiceApprovalUser": {
            "type": "string",
            "description": "WorkOrderCommercial.InvoiceApprovalUser\n\nInvoice Approval User  \nVX_WORKORDERCOMMERCIAL.InvoiceApprovalUser string  \n\nSearchable: False ",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "WorkOrderCommercial.InvoiceNumber\n\nInvoice number, this is one of the three that have to be chosen for a post request  \nVX_WORKORDERCOMMERCIAL.InvoiceNumber string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "IsReversable": {
            "type": "boolean",
            "description": "WorkOrderCommercial.IsReversable\n\nVX_WORKORDERCOMMERCIAL.IsReversable bool  \n\nSearchable: False ",
            "nullable": true
          },
          "LaborBaseCost": {
            "type": "number",
            "description": "WorkOrderCommercial.LaborBaseCost\n\nLabor cost, excluding tax and markup  \nVX_WORKORDERCOMMERCIAL.LaborBaseCost decimal 28,6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LaborCost": {
            "type": "number",
            "description": "WorkOrderCommercial.LaborCost\n\nTotal labor cost, including tax and markup  \nVX_WORKORDERCOMMERCIAL.LaborCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.LastChangedDateTime\n\nLast Changed Date  \nVX_WORKORDERCOMMERCIAL.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "MiscellaneousBaseCost": {
            "type": "number",
            "description": "WorkOrderCommercial.MiscellaneousBaseCost\n\nMiscellaneous cost, excluding tax and markup  \nVX_WORKORDERCOMMERCIAL.MiscellaneousBaseCost decimal 28,6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "MiscellaneousCost": {
            "type": "number",
            "description": "WorkOrderCommercial.MiscellaneousCost\n\nMiscellaneous cost, including markup  \nVX_WORKORDERCOMMERCIAL.MiscellaneousCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartBaseCost": {
            "type": "number",
            "description": "WorkOrderCommercial.PartBaseCost\n\nPart cost, excluding tax and markup  \nVX_WORKORDERCOMMERCIAL.PartBaseCost decimal 28,6 \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartQty": {
            "type": "number",
            "description": "WorkOrderCommercial.PartQty\n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PartsCost": {
            "type": "number",
            "description": "WorkOrderCommercial.PartsCost\n\nTotal parts cost, including tax and markup  \nVX_WORKORDERCOMMERCIAL.PartsCost decimal  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "PoNumber": {
            "type": "string",
            "description": "WorkOrderCommercial.PoNumber\n\nPurchase order number, this is one of the three that have to be chosen for a post request  \nVX_WORKORDERCOMMERCIAL.PoNumber string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "POReferenceNumber": {
            "type": "string",
            "description": "WorkOrderCommercial.POReferenceNumber\n\nPurchase Order Reference Number  \nVX_WORKORDERCOMMERCIAL.POReferenceNumber string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "PositionCode": {
            "type": "string",
            "description": "WorkOrderCommercial.PositionCode\n\nO_COMM_CHG.POSITION_CODE  \nVX_WORKORDERCOMMERCIAL.PositionCode string  \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "WorkOrderCommercial.ReferenceNumber\n\nReference number, this is one of the three that have to be chosen for a post request  \nVX_WORKORDERCOMMERCIAL.ReferenceNumber string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "RepairDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.RepairDateTime\n\nRepair Date  \nVX_WORKORDERCOMMERCIAL.RepairDateTime DateTime  \n\nValue can be updated via: POST  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Sent2DateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.Sent2DateTime\n\nSent2 Date  \nVX_WORKORDERCOMMERCIAL.Sent2DateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "SentDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.SentDateTime\n\nSent Date  \nVX_WORKORDERCOMMERCIAL.SentDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WorkOrderCommercial.TaskId\n\nJob code  \nVX_WORKORDERCOMMERCIAL.TaskId string  \n\nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "TotalCost": {
            "type": "number",
            "description": "WorkOrderCommercial.TotalCost\n\nTotal cost of transaction, including tax and markup  \nVX_WORKORDERCOMMERCIAL.TotalCost decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalMarkup": {
            "type": "number",
            "description": "WorkOrderCommercial.TotalMarkup\n\nTotal markup amount  \nVX_WORKORDERCOMMERCIAL.TotalMarkup decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TotalTax": {
            "type": "number",
            "description": "WorkOrderCommercial.TotalTax\n\nTax amount  \nVX_WORKORDERCOMMERCIAL.TotalTax decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "TransactionDateTime": {
            "type": "string",
            "description": "WorkOrderCommercial.TransactionDateTime\n\nEffective date  \nVX_WORKORDERCOMMERCIAL.TransactionDateTime DateTime  \n\nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "VendorDesc": {
            "type": "string",
            "description": "WorkOrderCommercial.VendorDesc\n\nVendor name or description  \nVX_WORKORDERCOMMERCIAL.VendorDesc string  \n\nSearchable: False ",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "WorkOrderCommercial.VendorId\n\nVendor number  \nVX_WORKORDERCOMMERCIAL.VendorId string  \n\nValue can be updated via: POST  \nSearchable: False \nRequired for: POST  ",
            "nullable": true
          },
          "VendorTypeId": {
            "type": "string",
            "description": "WorkOrderCommercial.VendorTypeId\n\nVendor Type  \nVX_WORKORDERCOMMERCIAL.VendorTypeId string  \n\nValue can be updated via: POST  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderCommercial.WorkOrderId\n\nWork order number  \nVX_WORKORDERCOMMERCIAL.WorkOrderId string 10 \n\nSearchable: True \nRequired for: POST  ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkOrderCommercial.WorkOrderLocationId\n\nWork order location  \nVX_WORKORDERCOMMERCIAL.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "SaveBodyOfListOfIWorkOrderCommercial": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderCommercial"
            }
          }
        }
      },
      "QueryResponseOfIWorkOrderCommercial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderCommercial"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkOrderCommercial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderCommercial"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderCommercial"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderCommercial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkOrderCommercial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderCommercial"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderCommercial": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderCommercial"
          }
        }
      },
      "QueryResponseOfIWorkOrderLabor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderLabor"
                }
              }
            }
          }
        ]
      },
      "IWorkOrderLabor": {
        "type": "object",
        "description": "WorkOrderLabor",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "EmployeeId",
          "InternalId",
          "StartDateTime",
          "WorkOrderId"
        ],
        "properties": {
          "EmployeeId": {
            "type": "string",
            "description": "WorkOrderLabor.EmployeeId\n\nThe employee who created the charge  \nVX_WORKORDERLABOR.EmployeeId string 11 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "EmployeeName": {
            "type": "string",
            "description": "WorkOrderLabor.EmployeeName\n\nThe name of the employee who created the charge.  \nVX_WORKORDERLABOR.EmployeeName string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "InternalId": {
            "type": "integer",
            "description": "WorkOrderLabor.InternalId\n\nSystem-generated unique ID for the transaction.  \nVX_WORKORDERLABOR.InternalId long 10 \n\nSearchable: False \nRequired for: PUT and POST  ",
            "format": "int64",
            "nullable": true
          },
          "LaborCost": {
            "type": "string",
            "description": "WorkOrderLabor.LaborCost\n\nLabor Cost With Markup  \nVX_WORKORDERLABOR.LaborCost decimal  \n\nSearchable: False ",
            "nullable": true
          },
          "LaborDate": {
            "type": "string",
            "description": "WorkOrderLabor.LaborDate\n\nStart time of the labor, used when editing  \nVX_WORKORDERLABOR.LaborDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "LaborHours": {
            "type": "number",
            "description": "WorkOrderLabor.LaborHours\n\nLabor hours in hundredths  \nVX_WORKORDERLABOR.LaborHours decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderLabor.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKORDERlABOR.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "NoPartsNeeded": {
            "type": "boolean",
            "description": "WorkOrderLabor.NoPartsNeeded\n\nM5 Forced to: false \nSearchable: False ",
            "nullable": true
          },
          "PayClass": {
            "type": "string",
            "description": "WorkOrderLabor.PayClass\n\nPay class  \nVX_WORKORDERLABOR.PayClass string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "PayStep": {
            "type": "string",
            "description": "WorkOrderLabor.PayStep\n\nPay step  \nVX_WORKORDERlABOR.PayStep string 2 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDesc": {
            "type": "string",
            "description": "WorkOrderLabor.PositionDesc\n\nPosition Code Description  \nVX_WORKORDERLABOR.PositionDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage1": {
            "type": "string",
            "description": "WorkOrderLabor.PositionDescLanguage1\n\nPosition description, primary language  \nVX_WORKORDERLABOR.PositionDescLanguage1 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage2": {
            "type": "string",
            "description": "WorkOrderLabor.PositionDescLanguage2\n\nPosition description, second language  \nVX_WORKORDERLABOR.PositionDescLanguage2 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionDescLanguage3": {
            "type": "string",
            "description": "WorkOrderLabor.PositionDescLanguage3\n\nPosition description, third language  \nVX_WORKORDERLABOR.PositionDescLanguage3 string 30 \n\nSearchable: False ",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "WorkOrderLabor.PositionId\n\nPositon Code  \nVX_WORKORDERLABOR.PositionId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonDesc": {
            "type": "string",
            "description": "WorkOrderLabor.RepairReasonDesc\n\nWork Order Visit Reason Description  \nVX_WORKORDERLABOR.RepairReasonDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairReasonId": {
            "type": "string",
            "description": "WorkOrderLabor.RepairReasonId\n\nJob reason code  \nVX_WORKORDERLABOR.RepairReasonId string 1 \n\nSearchable: False ",
            "nullable": true
          },
          "StartDateTime": {
            "type": "string",
            "description": "WorkOrderLabor.StartDateTime\n\nStart_time in as DateTime  \nVX_WORKORDERLABOR.StartDateTime DateTime  \n\nValue can be updated via: PUT  \nSearchable: False \nRequired for: POST  ",
            "format": "date-time",
            "nullable": true
          },
          "StopDateTime": {
            "type": "string",
            "description": "WorkOrderLabor.StopDateTime\n\nEnd_time out as Date_Time  \nVX_WORKORDERLABOR.StopDateTime DateTime  \n\nValue can be updated via: PUT  \nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TaskDesc": {
            "type": "string",
            "description": "WorkOrderLabor.TaskDesc\n\nDB function to build the job description from each piece of the code  \nVX_WORKORDERLABOR.TaskDesc string 100 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "TaskId": {
            "type": "string",
            "description": "WorkOrderLabor.TaskId\n\nWac-System-System/Assembly code  \nVX_WORKORDERLABOR.TaskId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskLocationDesc": {
            "type": "string",
            "description": "WorkOrderLabor.TaskLocationDesc\n\nJob Location description  \nVX_WORKORDERLABOR.TaskLocationDesc string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskLocationId": {
            "type": "string",
            "description": "WorkOrderLabor.TaskLocationId\n\nJob Location.  \nVX_WORKORDERLABOR.TaskLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskSeq": {
            "type": "number",
            "description": "WorkOrderLabor.TaskSeq\n\nSequence for how the jobs were added to the work order.  \nVX_WORKORDERLABOR.TaskSeq double 10 \n\nSearchable: False ",
            "format": "double",
            "nullable": true
          },
          "TaskStatusDesc": {
            "type": "string",
            "description": "WorkOrderLabor.TaskStatusDesc\n\nJob Status code Description  \nVX_WORKORDERLABOR.TaskStatusDesc string 20 \n\nSearchable: False ",
            "nullable": true
          },
          "TaskStatusId": {
            "type": "string",
            "description": "WorkOrderLabor.TaskStatusId\n\nJob Status code  \nVX_WORKORDERLABOR.TaskStatusId string 3 \n\nSearchable: False ",
            "nullable": true
          },
          "TimeTypeDesc": {
            "type": "string",
            "description": "WorkOrderLabor.TimeTypeDesc\n\nTime Type Description  \nVX_WORKORDERLABOR.TimeTypeDesc string 20 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "TimeTypeId": {
            "type": "string",
            "description": "WorkOrderLabor.TimeTypeId\n\nLabor Time Type  \nVX_WORKORDERLABOR.TimeTypeId string 3 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderLabor.WorkOrderId\n\nWork Order Number   \nVX_WORKORDERLABOR.WorkOrderId string 10 \n\nSearchable: True \nRequired for: PUT and POST  ",
            "nullable": true
          },
          "WorkOrderLocationDesc": {
            "type": "string",
            "description": "WorkOrderLabor.WorkOrderLocationDesc\n\nWork Order Location description  \nVX_WORKORDERLABOR.WorkOrderLocationDesc string 40 \n\nValue can be updated via: PUT  \nSearchable: False ",
            "nullable": true
          },
          "WorkOrderLocationId": {
            "type": "string",
            "description": "WorkOrderLabor.WorkOrderLocationId\n\nWork Order Maintenance Location  \nVX_WORKORDERLABOR.WorkOrderLocationId string 6 \n\nSearchable: False ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkOrderLabor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderLabor"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderLabor"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderLabor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkOrderLabor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderLabor"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderLabor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderLabor"
          }
        }
      },
      "QueryResponseOfIWorkOrderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderPart"
                }
              }
            }
          }
        ]
      },
      "ODataQueryOptionsOfIWorkOrderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderPart"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderPart"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfListOfIWorkOrderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderPart"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfListOfIWorkOrderPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IWorkOrderPart"
            }
          }
        }
      },
      "SaveResponseOfIWorkOrderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderPart"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderPart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderPart"
          }
        }
      },
      "SaveResponseOfIWorkOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrder"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrder"
          }
        }
      },
      "SaveResponseOfIPmChecklistItemOf": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IPmChecklistItem"
                }
              }
            }
          }
        ]
      },
      "SaveBodyOfIPmChecklistItemOf": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IPmChecklistItem"
            }
          }
        }
      },
      "ODataQueryOptionsOfICustomListValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICustomListValue"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfICustomListValue"
              }
            }
          }
        ]
      },
      "ETagOfICustomListValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkOrderTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderTask"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderTask"
          }
        }
      },
      "QueryResponseOfIWorkOrderVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkOrderVendor"
                }
              }
            }
          }
        ]
      },
      "IWorkOrderVendor": {
        "type": "object",
        "description": "WorkOrderVendor",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "AtVendorDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.AtVendorDateTime\n\nWhen the asset was sent to the vendor  \nVX_WORKORDERVENDOR.AtVendorDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "AuthorizedAmt": {
            "type": "number",
            "description": "WorkOrderVendor.AuthorizedAmt\n\nTotal authorized amount of all of the jobs  \nVX_WORKORDERVENDOR.AuthorizedAmt decimal 28 \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "BuildDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.BuildDateTime\n\nWhen the record was built  \nVX_WORKORDERVENDOR.BuildDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "CloseDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.CloseDateTime\n\nWhen the record was closed  \nVX_WORKORDERVENDOR.CloseDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "WorkOrderVendor.Comments\n\nNotes  \nVX_WORKORDERVENDOR.Comments string 4000 \n\nSearchable: True ",
            "nullable": true
          },
          "CompleteDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.CompleteDateTime\n\nWhen the work was completed  \nVX_WORKORDERVENDOR.CompleteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "EstimatedAmt": {
            "type": "number",
            "description": "WorkOrderVendor.EstimatedAmt\n\nTotal estimated amount  \nVX_WORKORDERVENDOR.EstimatedAmt decimal  \n\nSearchable: False ",
            "format": "decimal",
            "nullable": true
          },
          "InvoiceDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.InvoiceDateTime\n\nWhen the record was invoiced  \nVX_WORKORDERVENDOR.InvoiceDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "WorkOrderVendor.InvoiceNumber\n\nVendor's invoice number  \nVX_WORKORDERVENDOR.InvoiceNumber string 15 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.LastChangedDateTime\n\nLast time any change was made to the record  \nVX_WORKORDERVENDOR.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "OrderedBy": {
            "type": "string",
            "description": "WorkOrderVendor.OrderedBy\n\nWho ordered it  \nVX_WORKORDERVENDOR.OrderedBy string 8 \n\nSearchable: True ",
            "nullable": true
          },
          "PaymentType": {
            "type": "string",
            "description": "WorkOrderVendor.PaymentType\n\nPO, CHECK, CC  \nVX_WORKORDERVENDOR.PaymentType string 5 \n\nSearchable: True ",
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "WorkOrderVendor.Phone\n\nContact's phone number  \nVX_WORKORDERVENDOR.Phone string 15 \n\nSearchable: True ",
            "nullable": true
          },
          "PhoneExt": {
            "type": "string",
            "description": "WorkOrderVendor.PhoneExt\n\nContact's phone extension  \nVX_WORKORDERVENDOR.PhoneExt string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "PoId": {
            "type": "string",
            "description": "WorkOrderVendor.PoId\n\nRecord's associated purchase order number; does not exist as an M5 part purchase order  \nVX_WORKORDERVENDOR.PoId string 15 \n\nSearchable: False ",
            "nullable": true
          },
          "QuoteAcceptedDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.QuoteAcceptedDateTime\n\nVX_WORKORDERVENDOR.QuoteAcceptedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "QuoteDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.QuoteDateTime\n\nWhen quote was accepted  \nVX_WORKORDERVENDOR.QuoteDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Reconciled": {
            "type": "boolean",
            "description": "WorkOrderVendor.Reconciled\n\nHas the invoice been reconciled?  \nVX_WORKORDERVENDOR.Reconciled bool  \n\nSearchable: False ",
            "nullable": true
          },
          "ReferenceNumber": {
            "type": "string",
            "description": "WorkOrderVendor.ReferenceNumber\n\nFree-form reference number  \nVX_WORKORDERVENDOR.ReferenceNumber string 19 \n\nSearchable: False ",
            "nullable": true
          },
          "RepairDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.RepairDateTime\n\nWhen the vendor's repair took place  \nVX_WORKORDERVENDOR.RepairDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "WorkOrderVendor.Status\n\nCLOSED (aka CHARGED WO), COMPLETE, AT VENDOR, BUILD  \nVX_WORKORDERVENDOR.Status string 10 \n\nSearchable: True ",
            "nullable": true
          },
          "StatusDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.StatusDateTime\n\nWhen the status last changed  \nVX_WORKORDERVENDOR.StatusDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "TowDistance": {
            "type": "integer",
            "description": "WorkOrderVendor.TowDistance\n\nHow far the asset was towed  \nVX_WORKORDERVENDOR.TowDistance int 4 \n\nSearchable: False ",
            "format": "int32",
            "nullable": true
          },
          "TowDistanceType": {
            "type": "string",
            "description": "WorkOrderVendor.TowDistanceType\n\nMILE or KM  \nVX_WORKORDERVENDOR.TowDistanceType string 4 \n\nSearchable: True ",
            "nullable": true
          },
          "VendorChargedDateTime": {
            "type": "string",
            "description": "WorkOrderVendor.VendorChargedDateTime\n\nWhen the vendor charged  \nVX_WORKORDERVENDOR.VendorChargedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "description": "WorkOrderVendor.VendorId\n\nVendor number  \nVX_WORKORDERVENDOR.VendorId string 12 \n\nSearchable: True ",
            "nullable": true
          },
          "VendorInternalId": {
            "type": "integer",
            "description": "WorkOrderVendor.VendorInternalId\n\nVendor record's internal ID  \nVX_WORKORDERVENDOR.VendorInternalId long 10 \n\nSearchable: False ",
            "format": "int64",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkOrderVendor.WorkOrderId\n\nWork Order Number   \nVX_WORKORDERVENDOR.WorkOrderId string 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkOrderVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderVendor"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkOrderVendor"
              }
            }
          }
        ]
      },
      "ETagOfIWorkOrderVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkOrderVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkOrderVendor"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkOrderVendor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkOrderVendor"
          }
        }
      },
      "QueryResponseOfIWorkPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkPlan"
                }
              }
            }
          }
        ]
      },
      "IWorkPlan": {
        "type": "object",
        "description": "WorkPlan",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "WorkPlan.Description\n\nWork Plan Description  \nVX_WORKPLAN.Description string 40 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkPlan.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKPLAN.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkOrderId": {
            "type": "string",
            "description": "WorkPlan.WorkOrderId\n\nWork Order Number  \nVX_WORKPLAN.WorkOrderId string 10 \n\nSearchable: False ",
            "nullable": true
          },
          "WorkPlanDate": {
            "type": "string",
            "description": "WorkPlan.WorkPlanDate\n\nWork Plan Date  \nVX_WORKPLAN.WorkPlanDate DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "WorkPlanId": {
            "type": "integer",
            "description": "WorkPlan.WorkPlanId\n\nWork Plan Id  \nVX_WORKPLAN.WorkPlanId long 10 \n\nSearchable: True ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPlan"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPlan"
              }
            }
          }
        ]
      },
      "ETagOfIWorkPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkPlan"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkPlan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkPlan"
          }
        }
      },
      "QueryResponseOfIWorkPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkPosition"
                }
              }
            }
          }
        ]
      },
      "IWorkPosition": {
        "type": "object",
        "description": "WorkPosition",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Description": {
            "type": "string",
            "description": "WorkPosition.Description\n\nPosition code description  \nVX_WORKPOSITION.Description string 20 \n\nSearchable: True ",
            "nullable": true
          },
          "DescriptionLanguage1": {
            "type": "string",
            "description": "WorkPosition.DescriptionLanguage1\n\nPosition code description, primary language  \nVX_WORKPOSITION.DescriptionLanguage1 string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage2": {
            "type": "string",
            "description": "WorkPosition.DescriptionLanguage2\n\nPosition code description, second language  \nVX_WORKPOSITION.DescriptionLanguage2 string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "DescriptionLanguage3": {
            "type": "string",
            "description": "WorkPosition.DescriptionLanguage3\n\nPosition code description, third language  \nVX_WORKPOSITION.DescriptionLanguage3 string 60 \n\nSearchable: False ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkPosition.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKPOSITION.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PositionId": {
            "type": "string",
            "description": "WorkPosition.PositionId\n\nPosition Code  \nVX_WORKPOSITION.PositionId string 3 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPosition"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPosition"
              }
            }
          }
        ]
      },
      "ETagOfIWorkPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkPosition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkPosition"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkPosition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkPosition"
          }
        }
      },
      "QueryResponseOfIWorkPriority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueryResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Items": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IWorkPriority"
                }
              }
            }
          }
        ]
      },
      "IWorkPriority": {
        "type": "object",
        "description": "WorkPriority",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Active": {
            "type": "boolean",
            "description": "WorkPriority.Active\n\nIndicator if the code is active or disabled.  Y means active, null means disabled.  Reversed from M5 table for this model.  \nVX_WORKPRIORITY.Active bool 1 \n\nSearchable: False ",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "WorkPriority.Description\n\nPriority code description  \nVX_WORKPRIORITY.Description string 60 \n\nSearchable: True ",
            "nullable": true
          },
          "LastChangedDateTime": {
            "type": "string",
            "description": "WorkPriority.LastChangedDateTime\n\nLast changed date and time on main record.  \nVX_WORKPRIORITY.LastChangedDateTime DateTime  \n\nSearchable: False ",
            "format": "date-time",
            "nullable": true
          },
          "PriorityId": {
            "type": "string",
            "description": "WorkPriority.PriorityId\n\nPriority code  \nVX_WORKPRIORITY.PriorityId long 10 \n\nSearchable: True ",
            "nullable": true
          }
        }
      },
      "ODataQueryOptionsOfIWorkPriority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataQueryOptions"
          },
          {
            "type": "object",
            "description": "This defines a composite OData query options that can be used to perform query composition.\nCurrently this only supports $filter, $orderby, $top, $skip.",
            "additionalProperties": false,
            "properties": {
              "IfMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPriority"
              },
              "IfNoneMatch": {
                "nullable": true,
                "$ref": "#/components/schemas/ETagOfIWorkPriority"
              }
            }
          }
        ]
      },
      "ETagOfIWorkPriority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ETag"
          },
          {
            "type": "object",
            "description": "OData ETag of an entity type .",
            "additionalProperties": false
          }
        ]
      },
      "SaveResponseOfIWorkPriority": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SaveResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "nullable": true,
                "$ref": "#/components/schemas/IWorkPriority"
              }
            }
          }
        ]
      },
      "SaveBodyOfIWorkPriority": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Body": {
            "nullable": true,
            "$ref": "#/components/schemas/IWorkPriority"
          }
        }
      }
    }
  }
}